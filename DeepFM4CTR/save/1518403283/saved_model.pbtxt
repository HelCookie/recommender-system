saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "ApplyAdam"
        input_arg {
          name: "var"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "m"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "v"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "beta1_power"
          type_attr: "T"
        }
        input_arg {
          name: "beta2_power"
          type_attr: "T"
        }
        input_arg {
          name: "lr"
          type_attr: "T"
        }
        input_arg {
          name: "beta1"
          type_attr: "T"
        }
        input_arg {
          name: "beta2"
          type_attr: "T"
        }
        input_arg {
          name: "epsilon"
          type_attr: "T"
        }
        input_arg {
          name: "grad"
          type_attr: "T"
        }
        output_arg {
          name: "out"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "use_nesterov"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "Assign"
        input_arg {
          name: "ref"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output_ref"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "validate_shape"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: true
          }
        }
        allows_uninitialized_input: true
      }
      op {
        name: "AssignAdd"
        input_arg {
          name: "ref"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output_ref"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "BroadcastGradientArgs"
        input_arg {
          name: "s0"
          type_attr: "T"
        }
        input_arg {
          name: "s1"
          type_attr: "T"
        }
        output_arg {
          name: "r0"
          type_attr: "T"
        }
        output_arg {
          name: "r1"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Cast"
        input_arg {
          name: "x"
          type_attr: "SrcT"
        }
        output_arg {
          name: "y"
          type_attr: "DstT"
        }
        attr {
          name: "SrcT"
          type: "type"
        }
        attr {
          name: "DstT"
          type: "type"
        }
      }
      op {
        name: "ConcatV2"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        input_arg {
          name: "axis"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "DynamicStitch"
        input_arg {
          name: "indices"
          type: DT_INT32
          number_attr: "N"
        }
        input_arg {
          name: "data"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "merged"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "ExpandDims"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "dim"
          type_attr: "Tdim"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tdim"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Fill"
        input_arg {
          name: "dims"
          type: DT_INT32
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Floor"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "FloorDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "FloorMod"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "Greater"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_UINT16
              type: DT_HALF
            }
          }
        }
      }
      op {
        name: "HistogramSummary"
        input_arg {
          name: "tag"
          type: DT_STRING
        }
        input_arg {
          name: "values"
          type_attr: "T"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_FLOAT
          }
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_UINT16
              type: DT_HALF
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "LogicalAnd"
        input_arg {
          name: "x"
          type: DT_BOOL
        }
        input_arg {
          name: "y"
          type: DT_BOOL
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        is_commutative: true
      }
      op {
        name: "LogicalNot"
        input_arg {
          name: "x"
          type: DT_BOOL
        }
        output_arg {
          name: "y"
          type: DT_BOOL
        }
      }
      op {
        name: "MatMul"
        input_arg {
          name: "a"
          type_attr: "T"
        }
        input_arg {
          name: "b"
          type_attr: "T"
        }
        output_arg {
          name: "product"
          type_attr: "T"
        }
        attr {
          name: "transpose_a"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "transpose_b"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Maximum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Mean"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "MergeSummary"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Neg"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "NoOp"
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "Prod"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RandomStandardNormal"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "RandomUniform"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "Range"
        input_arg {
          name: "start"
          type_attr: "Tidx"
        }
        input_arg {
          name: "limit"
          type_attr: "Tidx"
        }
        input_arg {
          name: "delta"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "Tidx"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Rank"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type: DT_INT32
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "RealDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Relu"
        input_arg {
          name: "features"
          type_attr: "T"
        }
        output_arg {
          name: "activations"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_UINT16
              type: DT_HALF
            }
          }
        }
      }
      op {
        name: "ReluGrad"
        input_arg {
          name: "gradients"
          type_attr: "T"
        }
        input_arg {
          name: "features"
          type_attr: "T"
        }
        output_arg {
          name: "backprops"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_UINT16
              type: DT_HALF
            }
          }
        }
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
      }
      op {
        name: "ScalarSummary"
        input_arg {
          name: "tags"
          type: DT_STRING
        }
        input_arg {
          name: "values"
          type_attr: "T"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_UINT16
              type: DT_HALF
            }
          }
        }
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "Sigmoid"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "SigmoidGrad"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Square"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "StridedSlice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Sum"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Tile"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "multiples"
          type_attr: "Tmultiples"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tmultiples"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Transpose"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "perm"
          type_attr: "Tperm"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tperm"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "VariableV2"
        output_arg {
          name: "ref"
          type_attr: "dtype"
          is_ref: true
        }
        attr {
          name: "shape"
          type: "shape"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
    }
    tags: "serve"
    tensorflow_version: "1.2.1"
    tensorflow_git_version: "b\'unknown\'"
  }
  graph_def {
    node {
      name: "input"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 9
            }
          }
        }
      }
    }
    node {
      name: "Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    node {
      name: "fm/random_normal/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\t\000\000\000\n\000\000\000"
          }
        }
      }
    }
    node {
      name: "fm/random_normal/mean"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "fm/random_normal/stddev"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.009999999776482582
          }
        }
      }
    }
    node {
      name: "fm/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "fm/random_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 1518403283
        }
      }
      attr {
        key: "seed2"
        value {
          i: 5
        }
      }
    }
    node {
      name: "fm/random_normal/mul"
      op: "Mul"
      input: "fm/random_normal/RandomStandardNormal"
      input: "fm/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/random_normal"
      op: "Add"
      input: "fm/random_normal/mul"
      input: "fm/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/feature_embeddings"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 9
            }
            dim {
              size: 10
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "fm/feature_embeddings/Assign"
      op: "Assign"
      input: "fm/feature_embeddings"
      input: "fm/random_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "fm/feature_embeddings/read"
      op: "Identity"
      input: "fm/feature_embeddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\377\377\377\377\t\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "fm/Reshape"
      op: "Reshape"
      input: "input"
      input: "fm/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/random_uniform/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\t\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "fm/random_uniform/min"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "fm/random_uniform/max"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "fm/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "fm/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 1518403283
        }
      }
      attr {
        key: "seed2"
        value {
          i: 16
        }
      }
    }
    node {
      name: "fm/random_uniform/sub"
      op: "Sub"
      input: "fm/random_uniform/max"
      input: "fm/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "fm/random_uniform/mul"
      op: "Mul"
      input: "fm/random_uniform/RandomUniform"
      input: "fm/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/random_uniform"
      op: "Add"
      input: "fm/random_uniform/mul"
      input: "fm/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/feature_bias_0"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 9
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "fm/feature_bias_0/Assign"
      op: "Assign"
      input: "fm/feature_bias_0"
      input: "fm/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "fm/feature_bias_0/read"
      op: "Identity"
      input: "fm/feature_bias_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/Mul"
      op: "Mul"
      input: "fm/feature_bias_0/read"
      input: "fm/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "fm/Sum"
      op: "Sum"
      input: "fm/Mul"
      input: "fm/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "fm/dropout/keep_prob"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "fm/Mul_1"
      op: "Mul"
      input: "fm/feature_embeddings/read"
      input: "fm/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "fm/Sum_1"
      op: "Sum"
      input: "fm/Mul_1"
      input: "fm/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "fm/Square"
      op: "Square"
      input: "fm/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/Square_1"
      op: "Square"
      input: "fm/Mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/Sum_2/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "fm/Sum_2"
      op: "Sum"
      input: "fm/Square_1"
      input: "fm/Sum_2/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "fm/Sub"
      op: "Sub"
      input: "fm/Square"
      input: "fm/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/mul/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "fm/mul"
      op: "Mul"
      input: "fm/mul/x"
      input: "fm/Sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/dropout_1/keep_prob"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "deep/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\377\377\377\377Z\000\000\000"
          }
        }
      }
    }
    node {
      name: "deep/Reshape"
      op: "Reshape"
      input: "fm/Mul_1"
      input: "deep/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout/keep_prob"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "deep/dropout/Shape"
      op: "Shape"
      input: "deep/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "deep/dropout/random_uniform/min"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/dropout/random_uniform/max"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "deep/dropout/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "deep/dropout/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 1518403283
        }
      }
      attr {
        key: "seed2"
        value {
          i: 44
        }
      }
    }
    node {
      name: "deep/dropout/random_uniform/sub"
      op: "Sub"
      input: "deep/dropout/random_uniform/max"
      input: "deep/dropout/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout/random_uniform/mul"
      op: "Mul"
      input: "deep/dropout/random_uniform/RandomUniform"
      input: "deep/dropout/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout/random_uniform"
      op: "Add"
      input: "deep/dropout/random_uniform/mul"
      input: "deep/dropout/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout/add"
      op: "Add"
      input: "deep/dropout/keep_prob"
      input: "deep/dropout/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout/Floor"
      op: "Floor"
      input: "deep/dropout/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout/div"
      op: "RealDiv"
      input: "deep/Reshape"
      input: "deep/dropout/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout/mul"
      op: "Mul"
      input: "deep/dropout/div"
      input: "deep/dropout/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_layer0/initial_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\273\013\304=\243\3225\276\216\334\240=\221=\220\275\250<\254\275\363\177$>\037\217\303\275\350\245`>\204\303\241\275\301\355\374\275n`\215<\202\274\213\276\022\025\246=\020f\260\274<\245\020=\257\002\001>\013\233|\276xl><\254;W\275\335\227\376\275he\r>ag\020>b\316?<M\303Q\276\001\177\344\275~\267\020=\325J\000=wo\314\275N[,=J\231\\\275sC\230\274\275\241\032>/\377\211=9\373\231>:\310\343=4Z7\273,\223\006\275\247\373\344\274(\rL\275\232?9>\242\253I=\367/\264\275\377\342\253\273w\202R\275\257V\333\275)&t=RX\007=\006`\302=\355\334\217=\200\2456>\373x\027<\211b\010=\022N\327\275\032]L>\222\251 >\031\036\002>\005\034o=E\271H=E\327\027\275\312j\'\276\203\342\376\274r\241`>2&\372\275\377\245\022\275\245\332\322\275\2101\261<\376\026\242<n\254,\274\020\376\260\274\346te=\215]\037>\360\372\273;\274\266:>77%\276\315\217\000\275\020\350\226=H8\313\275,\t\";v\206U\2759s >\230j\232\275\367\216\275\273\316\033b;\002.\312\273hq\232=\212!\200\2744\202\026=\3256\267\275\314\323!>\256]&=A?\245\275\236\250\216<~\251\005>\360\353\220\273,\376a\274\243\016\037=\n\346\225\274\021\224\025<E0+>rE)>ZS[\275,\235\301=\313\rm\275\357]\350\274\227\027\347=uF\211=<\000\020\276\035)-\276$\320\020\274\355\215\005>rB4\276\303\267\277=L\272\315\272\357\022\351\274\344zW<\362\235\216<\306T\177\27555\357=\322V-\274\362m\024\276\302\317\204=\312\035\030\274I,r>\313\332\315\275\362r\200=n\247J<F\343)\276\037.i>m\005f\276\356<{\276\2327\035\276\007,\220:\321 \315\274\233F\007\276\213T\t>\306\345\324\274\037]\301\274\240\267J\276v;\231\274JV\021\276\356\0208\275\036\033\210=\250\377 =\224(\005>F\016\244=\266d\241=\256\253\223\276s,\024\275\010\230|\274\336\316\327\275N\222\355=\021\323O=_\257\326\275\342d\221\276\357\323X\275\010\305\353=!\327\322\275\211\2324\276\270[/=\213t\025\276\321\035\215\276c\366\323\275\326\206\311=\250\271\277\275\311\023\250=\260\364\217\275\3436\376=\305\242\225\275\027\317\315;ZHk\275\272\277\\\275\374\262\357=J\241\203\273@u\224=D\tC\276@\257\017>\253\355\032\276\360\375\267\275\377\214\216\275\"\204\020>:\254t>\265}L\273\216\010\270\275\251N\001>\232+\025<\257\003\203=\362\001\210\276\256M\225>*\363\334\275\306\360T\275\363]\024\275te[\276\360\007\026\276\010\006s=l\267,=\350\236\204=Xo>\2747+\373\275\265\301\304\2759\334\037\274D\347\022\275\332\024=\275\214\274\202\275\347C \275\355\325f\275D{\225\275\306\343\271=\307\3565<p\225Z\275\222\233\016\275\tn\t\276ip\226=\"\303\243=\374W\263;}\241\206=\300/\247=\006\3208\276Z\016\010\2766\2525=4\304\337\275\351\271A\276\211\267\221\275c!\221=\3452\255=\232\254\267=6;P=\211\317\334\276\236\323\347=\366!v=\031\342\212<\360\022\033\276\200\247\r\275j8\235;\251\r\256<j\347\005>\035\216-\275\246\217!=d\337U=\271\271j=\022\203\236\275\320\223[\275\205s\036=\326\203\342<y\0241>[\266\026\276\236Js\275\201\267J\2764\247\003\276\335g\331\275t\003\344=qo)\276\355\2023\276\225\257\206<I:r\276CM\375=\263\261\230<r\035p<\002\305\016\276\360\002G\275\034\203\225\275y)B\276\004j\030\276g\270\253\275\273\020\021\275\177S\312=\333\323\330\275\262\262\251<\373\344I<\362%\003\276\302\251c>C\202P>c\376\300=\3526\253=Z\276\372=\260\341\241\275V4[<C\217d=`\333\356\275\265\021]=\315\r\273<*\253\243\274\177\321\324=\354\352\330\2757\240\024\275Kv\010\274\330\301\252=\351\200\307=\345\330\326=\3320C>\323\341G\276\010\302\371=,\376\233=\032\361=\275{\034a=\300%\032=\260X\256\275\231\332\270\275\033B\363;%Nr\274\267\354E\275b\260\301\274\2652X>j\335/>S,\335\275\363\372$\276\226\'i\276yz\034\276k\211\314\272\314\362\014>\004\223\370=I\002d\273\331\305y\275\013\243\214\275\t\036|\275\227\0203\273\317\3678=\262\206\007\276\252t\331<\r\007\024\276\'\375]> \273\207\275\367\240\031>f%\326\274\326\225\001>\013\374\355\273\210\037k\274\032\272\201\275\315\240\204\275R\373\316<\03631=g\310\027=\305\254\265\275\351\275\204=\r\275\n=\206\361\235\275\237e\212=\363\251\310\273\352RF\276\021\206*\275\300\234\270\274\260#q\276\032\024\263=\005e\241<\370Z\230\275ra4\276S\247\037=\010\201\025>\233\237\231<\\\363C\276\013\222\312\275fZD=\037.c\276\275EU\275+\246\000\275g\272\202\275\234\215C\275\333\332\005\275\224\241\027\276\226r\314=\373u\231\274\3128\337\275\332a\230\275\364\"W=D\303K=\25550\276#\356\346\275T[?\275\343\313\331\275\3551\322<\304\031\260=\331\3221<\257\333\214>\300\263f\276{|`;\t\205j\276\242\207\246=\032\251\317=-\323\357=\346\237\004\274\020q\">4\223\013=\244\024\313=\211\211\231=\241\354t=\251\225\373=\253\034\021\276.\227\303\275\244\375\327=`\200\260=\032\323\020\275\270\274\373<\223\325\217=\210\321\000<\234+x\276\n\014a\274w\273\247<\256\341\337=\331\377\253=1\217 >\235\014\212=\227\253\266\274\346\341\022>\234\235\037\276fys\275\276\361&=\0274\262<\305Dn=\341\007\206=\365\256\003\275g\"\005>j\313]\275o\257L\273\367+\333\273l\265Y=\342\330\031>\372\201\005>\202r\001>v4\240\274\310\203\177>;7\000\276\227\373\331=6\220\203=\227\233\306\272\334z\324=,H{=z\317\353\275?\337\016=\310\365_\275MRJ>\276\247\304\275\243:\207\273y\230\213>\361\266\213=\tkw<\337U\360\275We*>H\351r<#e\000>\'D\377\273~\320\250\274M\220\310<\331\300\016>j\230X\276U\206E\275\341io\275V?\353\275\202J\024\275\360\351\267\2752\245!=\357o3\275\236O\263=S<\247\272\271x\261\275F\212\027< \2568=\227R\250\275\245\315\251< \004\310=\203\301\215=\370\004\322\275$s\351=\231ik\275\312\023\202=\264\202_\275\356H\245\275\336\231\215<7|\221\275\224\207\300\275|U_>\364\325\201\274\233\376\224=\361\027\206\275P\031\r>Jf`=\022\327\244\274\000\031~\275\316\035\220<\344N#\275\256H\376=MT2>\353\234G\276t\025\023=a3\344\2757\342h>\305\273+=Lza\275\314\306\025\276\355\316\201>EP\311=vp\202\275\364^\024\276\362h\013>\247/\301<\230M\251=\347L=\276>\320_\275\027-\036\275\\Q\277=f\346{>\2136\315=\277\313l=\375d>\275\247|\371\274\336OT>2\375\035>\003\200&>\322\373\253=\207\317\200<j\275\025\276\227v\301==\271\366\275\000\232\037\275\241\031\223\274\002j\t\2762!\226\275\247z\375=\"\331\220\276Ce\232=9\342\214=Vfi\275\251\356\362\275\345\025k\274\332\266Y>3X\310\275\016\265\326\274\235\217\005\276\223^\250\275d\344\364\275\372\313\311\273\231\333\201=\330\237\370<$.I>\367h \276/\032}\275\"Y\220\275\032u\225\275\322+\"\276l\373\210\275Qy1>Z\370\325\275\247<\255=\355\235G=\366\216\016\275fj)=.\037\014\273$\247m>k\242\205\273\003\177\267=P\364!\276:\371L<\005\214\002=m\366\241\275\377\253\236=\377D\021\2745\213\316=\033\210\312;\016e\210=\331\245_>\037\313\304\275/\325O\274&\322N<e!\020<P\026\001>\335,\363\275\037\353\235\275\271\374\n\2749\001\266\275o\246\361\275\205\177\333\275\224\"C\274\340B\321<\370\355t\273\3747\017\276V\001]=c\253\004=\027\206\305\275`\312\304=\335:*\272\337\206\336\275\337g\236\275\250F\t=I\240\326=\033&\226<P\034>>\201\020\013\276\0344J>B\331\t\275\217\374\002\276\006\030\261<\222\210\\=\363\205w=Z\376\332\275t\233\267\275\336ae>)\\T\275F\227\233\276d\336!=\232R\033\276/\026,\276m\222<>C\231\204<\222\371\243=\273\035\300=\313k\"\276\'\373\307=\271\261\307\275\005\322B>\360r\360<\304\255\206\275\0201]>m\355\325\274\375\267\344<;\\\340=/b\031=\277h\002\272\207K\007\276\377\212\273=\223X\322\273\363\235\020>\231\357\223>\333\016\345=\366\303\247==\275\013>!\367\227\275\315j\331=?j\010\276\365\321\245\275\177[r\275\373\256X>\200\317\212\275)U\204\275\372je\276\364\367\237\275Y\014\006>?\327R\275\360 d\276Aw\226\274\375\210\260\275\251Eg=<\204u<lu(\274\014#9<%\215;>&\250\200>\356w\276=\252\256l>Q4\215\276\321\261\241=\307\331\255=\036]+\273\207\221N\271\336$w\276\237\210\371\275\3336T=7\271\037>\231\321\366<\004U\006\276\374\312\316=(\006\241=\027I+\276\223\313\026\275\'1\014=;A\352\273\2240\035=Ka*>\247\025\341=\002\312\333\275eW\010\276-=\270\275m\263c\275\nr\223\275h\257\223\275\020\370\372=P7#\276[\371H>\373A\235\275\370\203m<\214\322\210\274F\360\027\276\3511\211=\307\253\002\275\007^\267=\354z2>\030\035\211\276\345\032x=AX\245\274\r\333B>\220;\347\274\310;C\275|6\204={\242\232:E\370X\274g\267\007\276A\\\250\275\255\340\205\275\215\235w=\2012i\276x\001\316\274g-\310\275n=|\276\035\377(=f\031\213=\207\003N>\313]\363\275\3407\022=@\210\030\275\237\255\241=p\234n>\342\340\001\275\367W%\276 rS>:\365\221<D^_=bf\217\276\347\006\013>\377\007\342<\325v\374=c~E=\032\367K>\316x\342\275\034+\241\275\252\245J\274{\207\017\275\023\200b>+\211\323=\312\315\233\275\016_\003=\257\321\257\274H\341(\274%\374\247\275\331\244\333<p\270b\276+\253\031=\234G\037=\314\225\256\275\241\352\314<\024-%>\177#w\276\027\344\272\271\200\035?=\265?z\275\325\337\350\275\246|\013>\207\n\002\276\322\006\310=\275\004\022\276\312\034F\2748\305c>^\347\013=#\241)>\242H;\276\277\242\221>z2e\272:O\306\274\214\220\340\275\212\350\025\276e\032\373:\"\261f\275\201\027p\276\201\306\207=@\277L\275\307\371\224\276\'\366\310\275v\212\266\275\234)@\276\034,\261\275.\002c\274>\253\272<c\035+=?\020\035\275\330\002\306\2745m1\274K\206\377\275\361\014\r\276Z,\230\275\335\3417>\031\263<\274\213\016\027>SA\266\275Q\177^\275_\237\250<&\004\325=\366\240g=gY)=?\265\031\275P\256\300=\362\037\274=\357\273\317\275r\336X\276`X\336=O\033\000\274\002\275\261=\274\032\275<\305\347\301\275\352\350\235;\221\215*=,z>=\310\007\t=O;\357\273\307[\223=4\361\010\276\350<q=\r\300\255\274\265\t\037\275m\205\005\276g\034\003\276\204\315\031<:\253\342\275\021A\021=\037;B\276K\357\360=\325|F<\337\014\311<\327\\\263\275|-\323=\277\317\202\275w\\0\276\367t\254\275\n\356Q\275\014u\021\275z=]\275\250\001\246=_{\214\275\223\304\2378\1772\215\275\022\022\203\276\320W\036;m9\364\275\254^\314\272\250\264\232\275\350\277y>k\230*>\362f\211\276Z\310\246\275\n\322\362\274\267\275\237>\245!\010>gwF\275\337\244X\275N\004\367\275\240\214\276=\215\220\363\275\326\010\210<\304\247q\275\316b\t>$14\274\276%\251\275\323\364b\276\252\370\300<\024\3507\274p\305\201\276\n\356,\276\351\231\374\275{\222\371\275j}v\274\371A\035\276\306\312\304>v\004^\276R\255\324\2755\352M>?\215\007\273\006\361\214\274\3773\007\275\025\320\350\274\333Q\257\275.x\245\274\225\307\216\276\221\232\225\275\302\271\264\275o\353B>K-\261=}\016k\275\246\017\272\274\215\340\322=H\237\224=\227\342y>Pn\343\274\013kF\276[\t\035>\227l\275\274)\255E=\034\334v>\317\256`\275\312c\244\275\250\216\210<j\257f=/\261\234=\266L\210\276O\013y\276\341vI>\371V\357=bh(\272u\0171\275X}\212\275\217m?\272\266\247\337\275\247k\311=2\304\321\275\343\364\001=\016\204\221=\357\235\002\275P\026\006\276{\331\031>\2712u\276\206\n\023>\344\203\215\276~\324\220<s\200\272\275\3353\267\275e\032Y\274\241o\002\276\267\021\311\275\006\375\264<\316CK=\260\244\"\274\330\021\310\274\250b1\275\t\2141\273\362\267\031>3\260\255\275]\235Z=\267:\334=?\272\256\274\217\233P\275\237\330.=\034M)=)O\353\275\263+:\275\204K =h\336s=6P\260\275]r\211\2744\273\t\274\267\346z=\307I0>\340T\265=V\010v\276\202b\246<\363\002y\274\345\370G>\243\351\270\275\217z\246=\305\306#=\307\364[\275D\035\010>\344\307\207\275S\367c\275>\324\024\276\254\262\027<\217M\017>\277\004?\276\253\014\205=6ip\276\345\372\363\275\321kI>\033l\200\275rT\027=(\254f\275\344^k=U\322\033>E\001\207=\2265\202\275s4A;\307\355\202\275\324\177\034>\334\323`=\332\300\030>\226\",\274&\227\003\276\247\374\263\274\333UK\275\265A\305=9\361\020\276\323\n\375\27557\304\275\331Kw\275\007uP<\005\344S\275kg\305=\276<\t<z\203\346\275\3122\300=zw\220\275\264\374\230=X\275\014\276\252\004\025=\322\225e\275-?\233<)\177p\2757\023\307>\247\372\214\275|s\006\276\263\t\307<\312J\r\273\311\257d\275a\010\344<\266\033M\272b\020\213=\314\226\226\275\376\n\310\275j+\302\275\017\t\222=\274\377\230\275,x\267=\326\031~\275\333\177r\275\245R\305\275a\n\375=A\016\301=\014\243\313\275\3054\225\275\335\2470=5\263\002\276\177\020E>\351\257\022=$\307,\276\312\200l=Yy\262=\210\332\023\275O\t\306=S\r\221\276mTr>g\214\275=\331\361\305=o%u=y\362\260\275\360\313g\2751Q\202;\204\025\251\273v,\237=g\017\341\274zH\265\276\027\340\226\275R\252L\275T\327\003>C\357\276=jD\340\274{9!\276)\267t>d\322\315\275\026!\356=\007G>\276\370i\207;\326\212\202\275\204(\243=\257\006A=#k\001=WP\231>\334\327+;\253\277d>\265Y)\275\303C\364\275\262\031\263\274\256O\036=:\342 \275\363\277\177>\271\\\312=\311\377\t\275\010\227\025>\215\t\202;C\024\355=\'\265g=V\320\022>\361o\264\275\021\340(\275\313\366\356\275$a\273\275K\031q\276\315&\177=L%D\275\244\311\206=\324\355\244=\002^\017=\277\356@\274)`\355=M\270\305=\242\373\311=\340i\214\275Aj^\2751\355|\276sqX=\017\\\005<\316\0134<\223K\315\2748\013\221;\250\203\203=\336\336A=\245\023*>e\"\370=0\200;<\250\r\337=G\305\326=\264\366?\276\215n\225=\0219\204=\243\306\333\275\267y\244\276t?\347=\207\330\022=\034\016\364\275\'\251\\\276sNl>$8\261=\317\210N\275DC\203\275!\t\022>\300\245\234>\017\000\303\275\241i\271\274\006\212\001>\363\243\265<\272_0\276=0\035\275_$\340=~\336\005>\226\265\020>\325^\021\275L\304\305\275\213\2029\275}r\376<\377\276\256=\365\275q=&\004t\275O\365\265\273\214e,\274-d\230=c\303\234=\231\313\366<\n\300A=I\326\205\274\024\222o=\330H\312<\277\364\341\275^\007U>\364\2255>\036\010W\275;\020T\275b\253\251>IN`\2767\375==(\231\027>\034\371\003\276\306n\324\275\365\262\271=t\030\344<$\220\260=uWG=H\024\213\275\237\311k>\022PF\276\212;\354=\327\214\'>\317\024]\276\253\316\274\275\026\277\211>\\W\004>\247<^>\3326L>\264\033\327\275\\\027\360\275\255\027\231>G\3452;,R\037>\237\377\245\275c\020\217=\254E\342<9\257+>\355\257\263\272`\335\004>8F==\372\267Y\275\035\267\234=<\226B\275\245.\002>kk:\274)\343\274\275\270b\267=K\214\255=#r\322<\231\036,\273\313n\212\2758I\006\275H\341\252;\337\357:>^!\346\276\323\201\226\274\203M\250\274g]\344\274M\026m=\2653\314\273\233\031\006=QC\312=\025#Q=\230\205~\275\225`\306\274\003\204)\275\'J->\207q\t>\017{J\275-|\203\275\"\310R\276\305\251\';\260\270\243\274\217so\275\344\265\000\276\037\256\321\274\200|\347=\335z>\276\323\253\212\273\014\256\326\273x\222\203\276\357|\335=\240 \317=\323[g=\261/\205\275\355\304\006\276\214\340\326\271 L\243\275\027\310m\273\373\363\036>N\231!=\203\034\024>\347\257i=\004\243\260\275\233\375\024>\324\333\t>\342\353\365\275\266t\341=_V{\276\201\035\031>QP\350\275D\314\332\273\330P9>\332\371a=\241\340\">\226\260!\275\364SV>\264\343\210\274}\352\006;\361\337\t\275\243\021\016>\3664\215\2752\264L\274\355\333\'=\322\002\013\276\336\262\356<\203\321W>i\021\336=\235\372\274\275< \235\275\004W+\276\265\010\201<\027>7\274Bm6>\271\375m=\t\304E<\2032\265=\244\2679>\236\267\204\274\354\226\251\275\252o+=!(\317\275\220\313\332<ook=\362\314w>\356h?>\353s\330=\263\224\023=\254&\203=\252\224\">t)>\276\374\271\200\276\246ii>\022d\362\275C?\240\275\005\214#\276\304k\340;\202\360\021<C\340_\2764e\221\275\211\200\020\276~m\217<\263\306\013=\244/<\275i9\201\276\376\226\232>\271\332$=\324\327\200>u\260g>\373\214\354=\tT&>\177Jw>\225\221\320=\216?\005>\353W\022>7\251\332\275\307\305\024=\002\030\252\275u\270\215=\342m\024\276C0->\207]\220\275\346F\312\274C\253w=\322lR<Y\245\317<t\223\224\274\352+?=\031\351\205=\235q&<\206\337\202\275\000\020\305\275\032\325]>D\343\264<\275\340\222\275\247f\302\274\037\360\363<g\263\032<\"\2600>1\320\217\275\252\374\322=#\203\004>qv\207\274\347 \330<\001\361\177\275\310\235@\275\3747F\276\203HS>[\272\006\275\232`\243\275\211\2612=\212\245\t\275\216\3224\276\276\317\022>\272s\342:\267\355X\276\031\"\324<f\231s\275x\327B\276sV\254\274d\364\010=1<u\274\201-N\276\313\002\r>\t7\260\274\3779\307=}\2745:\256\362=\276\245\006\265\274\200\034\016\273\360`\332\274\372\230\031>Fo9\274\275S\013\275\231\003\330<\337\"\017\276\013[\215<\374\360p\275\224\020\366=\374\013\344=4\274\240=a\001\247\273\351\267\261\275\320D9\275\354[k\275sm\275\274\233\323>\275\247Tq=\003\253M=*$\230\275\3479q\275\211\352\241\275j\266K;\311rI<\371\246s>\304.\201\27644\234=\226X\324=T\024I\276\256-\257=\204U_\275\027\251\006\276\205f\\=\361\326s=\025_<>~\201\244;\021,\333<\003\261\334=>\317\240>\\\356s=P\233\235<\345\324\326=\331,\326=.BP\275\316&t<\257\253\256=\241\010\221\276\361\021\251=T\335\202\275\037\353\356=T\334\214\275L\375.\275K\323\211=\377PY\273\2648\257\275\\L%<\316\263l=\364\025\321\274\321\327x\276\230k\205=\357\001k\275!\225\r>\300_k>\005\273!\275\211NE>u\377\243<_s-\276\270\343\020\276\243\371\225\275\331~\211\275<x\333=t\333A=\237\267-\275\220\206\374=\370a\203>&e\013<\201[\305=\364{\220>9a\302\275\003\352\275\275\347\256\210=\303`\304<\240\256B>\330c\033>\365G\352\275\t\005\024\276\242\0014\275!\301O\275\361\225Y\273\35378>\000U\342;T\264\230=\344\274\254=\037xM\275\241\213\201>@\365\256=\236\016\037>\336\345\325\275\023\316\325<$|\200\275\334\240G>\202\227\236\275\242\247\270=2\007\027>\332\373\214\276B\276\\=\211\333\220\272H\345\374<4r\302\274\276I\303=\2060\035\274Y\010\242=\021\n\220:5\361\320\275\350,\022<\275\377:;1c\301\274Bq\017\275k\204\333\275\244^C\275\274\366@>\352\037j>\266\352c\275\2618#>\302\301\230=\017\313\007\276x\244\242<\242*~<m{\000\276U\243\334\274\347B-\276\220\245!\2766\363\246\274\353\346\177\275\274\334o\276\035\374+=\005\243\336\275\347;\205\275\331h\347=\026\343g<\252+l\276\223\371\230<wt`\275_\301\200\275\200\251\266<\224\336\342\275c\2043>\267\001:>\202q\340\274\242\206&\275\\\026\014<\327\345H>\376\310\375\275\221\343\234=\340\t\201=%o.>\\\256w\275\373\350\267\275\037\227\206\275\025\260\037=\274\240\035>X3i=\271\304\221=\030\003~=}k\001>\322t\007=\341\356#\276n\224\225=,\226\031\2761.n\2754\351T\275\304\314m\275\332\323&\275\016\337\261\274t\271\326\275D_\035>\373\223\003\276U\314\n\276\377\324\345\275^e9=O:\220=\234\242\344<b;2\276\314W\300<\251\316!=f\215\035\276\362\351\272\274\003\014\310=\263\314J\274m\'\254\274\016\324H\276\335\024\331\275@\250\374\273\'|E\276~4\020>>\002\030\276\316\360N<\000\034\037\275}\366 =\325\320\372\275EK\317\271\315K\201>\026\245\357=\033!\207=\325\313=\276\213\036I\275\366\231#=\017\033\354\2759\337L=\257r\026\276F\332\274\273\242\340\331\275\313Kw>\240\222\204>\264;M\274q\366\024\275\221\001\025>\2370\221\275\336%\255\275\336rQ\275\334\022c\275\236 0=\276\3478\276j\001\221\275\031\251\202<[\321\256\275\2029\t<O}u=\362S\017=U6\022>\376?z=\374\030\250\272qoU>)@\240=\203\301.=`\202R\274\301\350i>\004\341\216\275\231\265\000=2\010\362<LW\370;Hv\002\276\330\365\005>^_\233\275gN\323=0\344\216\275\243\277\354;\322\313\302=v\014\024\276r\203\362\275\303y0\275\305\203E<\255\014d\274\320oz<\201\231r\275\230\220*>3i~\274\005C\307\271k\002\202>\332~\021>\'\217\376;6\001\327=\247\215L<\260\203\367;q?n<O\274\205\274m\364?\275/\3751;?\016\316\275\2357\024>\374U\036\276\300\3217=\030\217\023>\036!%\276\364+&\276\344\353\006>\270.\207=\242P\322\274\324\312\371\2757\037\232=fOz\274\220\340n\275b\t\373=u\355\323<\352\255\036>\014\322m>6\340\013>\005\200\016>\016zI>\036\251\210\275\215\030*\275wk\014\275k\340*\275y\331\316<\350PI=\205\316\227\274A\301\027\275\312\366\">&h!\276\256\251\222<\231\267#\276OS\276=Zc(>\t}\025>\"\332\007=\3043\367\273\'WN\275\307Nj>z\362\037>&\365\260\274\'\213\n\276\221`\373\275\317\305X>\2216\277=\rN\241<k*\351<\3767\216;\263\216\221\275\200\211\320\274\323/\255\274\013\316\353\274[\313+>&\206#\276h\340d=\303\304\355=\253\001\034>,_%>\204j\020\276\326\361\335=<>\222\275D2\237=\340\270\212\275\301\316\227=\231\245\335=k\274\353\2752\330u=\370\344\245\275G\251\221>\240\314C\276\266\300\245\275\035\266\247=\211\357\022=\273\"\250=~\r|=\262\177\032>\254\253,>\212\216i\276\307[N\276\235\007\370\275WN\260\275\214+\035\276\321B\024=\334i\005>^e\310\275C\245\253=\370\026\223\275\'\333\233<4gF\275\215\220\273=G\034\267=[\325\200=\331P\350=\357\225\206<\000\265\333\275V\252\240\275!\255E\276\372\371\353<\264D+\275\036\371D=\213\263a=\003\207?=\270\016\350=\237\364?>\375g*\276\227\245\206>C\014}\274O\211;>x$\275\275\017\312\232<\377\315M>\262E\010\276\233N\200=}\025\245=1\364\225<\'(\237= \330\235=\277\273?>\035\205\331\275\366D\352<d8+\274\372g\016\275\3528\221\275\270\211]>Z\354\024<LMV\276k\026\211=\267K\351=E\002b=\206\251\025>0(\302\274\tJ\243=\001Z+=\372\2440\276#\2043\276\313\254f\274h\366\035\276+N\245\275^mD>x\255W\275\376\340\031\275\333~\272\275\226\274\016>R\346\002>\245\206%\275~E4\274\2679\035\275\315\360\323\274\352\260\363\275{\243\206\275\227\253\006>\351\004Y\274\345(%>\215\256Z>L\372I=#-\030>\233\026\316;\205|\374\274\363JP\275\224\215\311\274\252\333u>\211V\215=\342\022T=\262qj\274XD&\276\346\rr<co\303=2\037\016\276\201\236p\275\022\247j<\331\364\304\275\205\270\273\275w\265\320=G\210\242\273\332\365F\276\301\262\001;UB\316=x\367l\275\251g\260<_\024\021\274\317\314A\274\326\250I=\250#\310\275KC2\276\245t\022\275\354\357\335;T\017)=\240LC\276\031`\300\275\213b\177=8\nT>\370\252\243\276\313\267h\275\245\0350:Z\200\346<\251}0<9\301\341:\275}G<\245O\342=3X?\274\362\301N=\261V$\276\235\3256\275V\300Z=i\312\r=m\327\031>\3430\214;\'B\031>,}\002\276^\315\222=\315\337\367:\264B\003>8\221\267\275\034+2\275!\n\023>\375\007\267\275m\233X\274\202\224\030>O\315<=\2332\004\275\366\237\201\275\250\2314=\225?\000\276\260e\322>(9s\273\337v\244<\247\243=>Z=\350\275\303\376\220\274\232\030\314\275l\227\330<#\336_=\270\201(\275\214X\024>J\330\203\275Y\033\235\274\310\363Y\275\247\271\033>\024\"\000>\303\022\227=\204u\354=?\365J\275\244\203\364=4\'\223;\262\374\027=\202\240_\276\244,,\274\246\374\256=fY\313=-\021\026\276\354e\261\275\322 \322<\200w\211\274M\254\037\276/\311\230=\366\251\333=\024x\250\275\350\004?\273\2432\220\275\347\003F>,IC=U\305\016>\305\233\370<\202hM<\246f\t\276 \005)\2768N\010>`\331\001>\322\336\232\275\221\033\344=M`U=\310F\033\276\1770Z>\243\205\235\275\006nv=\022\361*=\004\037B>\036\014\t\276,\360\307<1[\025>\220\302\354\273\265\035\020=\232\016\"\276\212\361\014\276Q\325\033>\336\036\323\275Z\031~\274\306\024\257;\255m\242=\241\005\030\275\220\312\342= \3315=\336\3102\276ZDh=\311\006\266=\220\263\254=\335\034%>$\306\312<\334Y\245\275\245s\377=\017B\324\275\037\340\'\275\277\271\345=\237\341x=\242\311\327\275\336\377\236=\205\216\234\275\335\023J:\272\260w\275\326y7>T\216\236\275\026kt=\207\026*\276\325\216\326\275MN\351\274\372\354\273\276\271t\032>\023W\250\275(i\221\275T\353\237\2758\006\264=mG\306\275\264u5>o\200\344=\001\263\247\274\001_3>\347\232\227\274\233\371\326\275\361\302D=1$N\276UP\365;\355M\322\275rV\374=-F\336=\302\240E\276\366i\307=\223V\374\275\204<}=7\274\365\275\240\311=>z\350\305\275~/\352\274\1771T\276\207\200j\275,\000\006>\201)5=u\237\t=OB\250\275\260\306\r=\247\347,>m\253q\273\033\302,=R\254\232=\347=s\276Q\233\013\276\332<\342\274\303\363\034>\362\245O\276\341\355\022\276]\320\022=\000F\033\276\346(\252\274\346\316D\274\206\330D=+\207\216=\230[\363=\242\025\277<\026GM>B\247i>\315\324s>\213/u\275\374\265\200>\246D1=e\377\361\274p\333\330=8\035\006>\235\347>\276\014.\010\274\364V<>\244\272\236\275\206W\027\276\34370=\227\\\327=\314\334\'\276\202g\302\275\274m\203\274@>\244\275V\0314\275V|\264;\336\236 \276O\350\215\275iy==\224\024\235>\367pm<\267w\320=\277\362\365\274C\236\010\276O\226\205>\307\3354\275C\202\010=\210FA\276\233Gd<>\363A=\017N#\276p\026\231\275s\314\023\276\200\005q;\300g\250\273\024\313\032>\367\352\357<\"e\367\273\322\366A\275\031\240\251\275\2464\333\274\357\207\322:\321\374\374=~l6>RB\201\275\305\351\337\2753T;>\332\250<\275\275\273\205>\177\247\346=L\345\014\276\253R\263>\230\203\223<kb^>\265\325b=\350.\263\273\341P\026=\332s&\276\211a^\276\'lC=\226\223\001\276QK\213=\032\375\222=\257\0306>\177\226\274=\315\2043=\226\363\265\275\215i\270\275w\337:\276m\035C;\352\331\036;\3129\347\274\253\3215>\r\220\002>\370/\250=>\226\307<xe1\275.rU;+9\020\273R\336\035\276\377\323\206=\374\'T>\001\250\346\274e\205\213> rA\2762\342j==\335\003>\321\020l=1f\362\275\345\\\226\275s\tT>bV\202:\316\274\232\276\205\270\354=\320\200e;\337\027\233\275\367l\213\274\016h2\275\325F\346=\005\000\205=T6Q\2740\322c\275\323B\254\275T\362\323=\354fX=\261\024\342\275d\252\034\275\342p\252<\003R\034\276\035(\310=\253\364\343\274;\312\267<N\226\376\271^\343@\276\260\2740>W\340}>\367\027\242=\234y\343\274\233\247\350\275\253\351N\274W\320\370=\264\200\000>\206~\036\274*\206>\274\215\004\210\2751\2579>\"\347\240\275\273\363\206=\n\240\244\276\275\367D=\037\213\017\276\243\036\215\274^R6>\0365\245=\013\236\002=\267\300\224=\262\334\252=*N\036\276\302\003C=x\023\274\275a\312?=\006\220\030>~\315\026\275\177\330\340=\372D`\275g\027\231\276\315\036\325\275#l4<Jd\r\275\270eZ<\322\233<> \022\'\276\220+;\274 !\\\275\310\332\315\275\306d9>\272\236S<\273{4>\022\366z\276\'[n\275\276\253\324\274\316\217\242=\253\350\025>\r\t\273=N]\n\274A\241\014>\350%\367\2750x\306\275\225\243\362<\204\302\231\276 \027\245\274H\365\316=\312\372X=5\265\212>n\241I\275\325\351;\276N?\301=\372\006\024>\303\357X\275[a\265=!\216\237=\0300\244=\342\017\356\275\242\006\020>\321|\300\274\022\311\347<\tw7\2769\360\t>_\365[\275v\240\001>\017\'\026\274\307\016\210=\226\202\001>\243uA=\364\355)>$\016!>pm\216\274\350Y%\276\006\276@=O\236d\276\223\037\014\274\264L\320=\340\037\247\274\000z\230\275\022\302!\276={\307=\323\rO>\023\013\010=\346\001\316\275K\214\365\275\215\227\023\271Wq\221\275\030\201\275\274!\006C\272N\330<=\266?\260\273%\\\320;\303\333\010>i\311;<W\204B\273\023\323\270\275\363\271\t;0i<>\261\343\346<\205%\222=\316\245\'\275wc\016>\304\376j>\247#k\276\267A=>p\245\317\275&h\177>1\311\340\275\262\236\272\275\255\307\371\274\3719!>\322\025\342<}\371\003>\365\233\314<\255\2112\276\206\035u\275\231\266l=\222FW\275J\032\240\275p\367\273\275\251\370\024=\271x\375\274\202\255H>c\263\335\275\221\372\020>\277g \276\246\245\301\275V\216\214=\326H+>f\212\032>\342\364q>\270\240\230>\r\267D>\233-\321\275\334^)>al\207\275\306\375\307=\035p\362\275 \256\255=< \361\275\317\204\000\276\313\351\232=\334\rl<\030\020\217\275v\201Z\275\225\0345\275\260\254R=\246D\366\274\313{J\276\332\'\367\271U<i>\0201\205=!r7\275\264\022\327\2758\271m\276\272\361\312\276%q\n\275\371\017\307<\"^k\276\017\210H\275\244\221/\276m\2207\274\352G\206=\177\255\215\275\372v\266\275&\336\305;\347\023\260\275\003}\000=u\307=>\2700\260<9#G<\224\226\003=H\373F=V\343\007\275\326$\356\273\212A\215\276\274l\001=\252\266\r>\3737-\275$\246K\276\002\336>>?\300\005\276\365*\252;\273\033\036<\331\020\325\275>\330\223\275\004 )\276(\374\313\274\024U\232=\302\371\262=\004f\204\276!\331\353\274\256.\232\274)\013!\276^\214\360\275\031;\243\275\331C\244=\205\367j>\202\375\024>L\250 >\344\\\332\275Y6\310\274X\374}\275^Z\360\275x\030\204\275\231\t\014:jO\366\275R\003\310\275\223>(=\026\301r\275v\254\371=\257\201\311=K\224\342\2753\204W<M\247j\275\376\326\005>`\352\003=\330\230\344\275\313\030\261=\264\"\246\275\330gv\275\034Y=>\017=\266=h)/=\233M\332\275\244 /<N\014/>ng]\276s\327\253\275\021q\013>\003p\013\276*\215\340\275H\262\r>|\250\303\275/\016L\275L\330\237;\323\033\235\275\025\302N\2756\024\n\275\304\337\002>N\037\223\273\256^j=\'\004\212=*\210\001\276\305\271\246\275\374\031\307<1\376\332=\014:\244\274|\031\n\276i\035S=YZF>\017\001\374=\037J\242\274\231\333\214\275\372\256\022\275p\227\360\275]\021c=\032\332\376\275\310\275\303\275\323Z\225\271E\301\307<\230g\331\275\274%*\276F8w=\311\005\220=\213\330&>k{,>i\3632\275\005\006\271<t\034\037\275\220\355g=\257\244p=P\232\323\275\022\226\345\275\200\351\244<\203S|\275r\212T>\254~\312=\3232\000\276\010#\352<\323\262\350<S\241@>\375\335\273\273s\2273>\177\004!\275\256\343\276\275&b\206\276\241\226\n>\205]\235>\027b\001=\307K\213=\277\205\365\275\177 n=(\350\031=\260G\200=\237\327\235\275tU\035>\373K&>\221\016n>\364 c;3\322\017=\355\t$\2764\003\r>\031\321\t>\324\020\225=~F\324=>\0174\276\305\210x=B\003\315<H\314~=B\253\245=\205h\301<\344\036\246\274\2749\340\275\246\210t;\020%>\274\357\340e\275a\254\236\274\361\014\306\275\326\267\375\273j\036\362\273*^!\275\253\017\222\275\370\010!\276[g8>\256%\254\275\010\234S\275n!\250>\235\324n9Z\000*;\360\314(<\013C\231=i\211\354\275\\\372\331=\354!\027\275\2007\332\275iDT>C\311l=\232\371\311\275Y\216\331==\3012\275O\205\213<\031\002\356\275\276\237\221=\323\315A\276\220W\220\275p\264\203;\311\013\352=@\000\301=\005\346:>\275\345\022\276\270\257\215=>\200\223\273w\305v\273]\031C\274\362\\\000\274Sfr=+\323\326\275`\256J\274\377\350J\275\212\001<\275\241\232\344=\035\260\210\276.\271S\276\tH\022\275\233\3769=\257f\354\275W?j<\333R\257\275\r\316\002\276\320~?\2765\344\023>b\030K\275\331O\364<\003*\">e>\233\275a\263\275\275\311\2515=\\R,=\3106:>\036!\303\274\244H\345\274\367\316\332=\377\351H>\360\325\354\275\373\336\231>\374N\256\275u#\211\275w\302\223\275\273\374\330\275\317\200\213>h\275\217\276\201u:\276\374\302\016\276\177\274\273\275\226\230\277=\361\022n<\333\216\226=Q&\206\275\"3\256=\227\034\220>(\215;\275\230c\231=@\000\206<7\273\325=\242Z\033\274\344\215Z>\236}\254\274I\206\377\275k*\233=\375\354\343\274\312b\177=9\253(\274\004D\335\273F\377g>P\367\t=\230c\312<\014\017\030\276\230\213j=\316\314\231\275\326qZ>\362\345Q\276\202s\242\274V\001\264\275C\004\363=\337\313F=:\274\037=Z-\253\275pp\005\276pU\265\275wV\n\276m\246\213\274ZY\234\275\351v\261\274\2554L\276\330\311\366<\216\273\t\276v\342P=8-\300>\351\246\245=]\211\201\276\260k\021;\356c\267=\325\"$\275\373\260\206=\374\002\224\273\300E:\276\312\322?=(zQ>X\006\351\274\371H\030<\212\365\236\275\347\373\263=\313mv\275 \200\013>\266\362\371\275]\010\352;s\320\202\275\330\265\270<5\271\315<\341B\262>\001\243\307<\265\2152\2766Y`\275\261g\362\275\203[o\275\347\315\337=\214\314X\276\267)\\<8,\304<\350\200\363\275\242\230\220=\243?\">\206=\272\275\377 \247<\003]\221\273\273\372\200>\331\025\262=\324\0018\276\347b\220\275\227e\202=u\371\231=r4W=\332p\355<\3660\374\275\2250\246\275\007\t*\276\014;\212=\301\256\000=\007gk=)\361I\275p\366\344\275\225\236\032=f\300\323=\007\006L=\2237\314=\240k\'>\342G\203\275\354\323\217=\274\372!\276\237\210\262=c\245\372\275\260\203->q;\371\272\232\244(\276Z\272\260\274\t\371\3409=^b=\376x\365=>\3712>.\177y\276\177O\230\274\353g\305=\273\203\277=\r\357\267=\334\302\313=\340\234*>FMr=\005\005\352\274\353\302}<R`\243\275\232\177\250<\335P\204=7\016i<\')\001\275\260nB\275\270#\303\273\236\3039={\025\013\275\230\035(\276\347+\224=\033\3521\275\310\365\202<\202\017T>&_\270\275_\035?>\357\3723\276\374J\245=}/(\276\'\261\335<\310\324\020\276\227\016\346\274\030%\352\275\'\240*>x\343\036\275\331\017u=\224Z\017\275\332\310\327\275.X~=\320\2736\276\035\304\355\275\357\301\227=\306H<>\303\303-=\275#\036=y\346\212;\203\267\016>\034\313$=j\332\327=\035}\246\275\315\275\220=\373\3079\276\025\370c\2749+\204<\251!r\275\351\010T=,.\257=RP\350=(\020\224\275K\016;>;eD><\020\"=^G\336\275\243\177\003\276\346E4>S\245\254<Amf=b\001\333\275\276K\251<\245,G\276\303\205q\275\343\247\333\275\311\310\023\275\266c\016\275\236UT>\376n\216\275\025\234\247<Q\247r=\275\206n>\225\206.=\206>\002=\267\\!>\237L\237\275\t#$\274\324k\371;\207\252\t;\014]\255\275T\230\230<\323Mu>x@ \276$*I>\2136\030\276\360\366\220\2743\006\313=\230\024T\274\353\343R<\242\035U>7\236\247\276%p\306<TU\017=9\215\334\275\343\023\014>\251\323\340=.>\247\276\245;\007>V\262U\274\251:\003=0\233\200>b\275\034\276\367f\332\275\242UE\275c\244\313\274\246\257\226\275x\262\236=\316\203p\275\0004\233=\341\013\276=\223\222?\276i\374\273=\002\276B\276`\306\262\2759*\007>\025\363\014\275\253&\303\275L\007T<q1\025\276\357\340\312<\340\263\027>\306\t\216=u\313\367\2734\360b>(\207\210\275\370W\355;7\274x>\357(\032\275\371\202\220<\340\275\024<\346h\376;\341\236e\275S\221p\275\373\005!>qM\335=J\324\233\274\377\343N>[\342a\275\206e\262=\343\360\032=\010\231\213=)\201\340\275\376\311\002\276\244Ov>6\372M\2744\343g>H\317\335<\376K\213\275\255\233\364;\355\001u\273\202\327>\275\224\306\340<\r3\312=I\026\027\276\262!J\275}\225\207\275\361\331\253\275-\356\331=1b,=\026V\030=_\016\201=\r\331\034\2760\"\251=\211`\010>+\316\206\275\033\262|=\ns\027>k\036\241;\230\n\305=\001}\320=\203\3518\276\343Cz:m\n\303;lq\356\275SA8\275q15\276\233D,\276$gC=\024\361:\276\372\376\215\273\371Hg\276\314pK\274\333\355\026>_\004x=\034\303%>l\261,\276\3249\250\274g\005p=O\310Q=\\\211V\276\271\220\010\276_Jt>\301J\022\276\262\005\346\275\351\022\325=u\201\206\276jWw=\316t\205\275A\250\021\276\327\245\267\275\376\312g\275\237\252\221= \"\271=\254V\270\275H\305\327=\252\355k\274d\t\304\275\345\356\374\275\001\222\262\2759\024\345=\335\263\254=I\367$>\247X\021\275\002\317(<\353\264\334\275\010P\356=D,\361\275Zm\214\274\'\032\035>7\021P=\366\310\315\275\035\205-\276\312\350\230\275\033\355\245<$\363\363\275\214\303\201>\257\232\025<+;\204=\3064\227\275\240\204\365<ch\274\274@E\273=14\013=\304\210\014>4\000\n>m\003\251=\217\002\351\275\274\213\027>/\3139\2768N\321<2Y\002\275\356V\262\274\263;\022>\002\214\001>\251E\251\273\221\205\006=\254\255\207>\'\260\017\276\010\007%=Z\316\330\271\251Gs>\233\037\230\276:9:\276\221>\270\275o3\253> #\207>j\244\234=B:\236\275\215\213\024=\375t>\276;\254<=\t\227#=MS/>\333D\220>\2500\221\275c\223W>\r\277\225<\2154\200=\341\3149=\330o+=\276\027k\275c\277\246\275a\353}\274\213U\357\275\340\302\202\276\351`\001>\022\274j\276\345\376V\275\213\024]\274ay\334<<\267\347<\207\'J>\007\022\321=\350\024\242= \377\321=\032\254\366=\034E\333\275\273\220;\276^ 1\276m\356\351=\2337\n>\217\241\247=\204\333<>\224\350\266<\361\342\211\275\302\330q=\234\217\230\275\025\177E\275\t\002\200\275*\320\351<\177E\365=\267-\326=y\306\004\276\022\212V\276k\214\304\275\362e0\2756\211\356\275\351\325G\275\360\261\252<\030%#<\0328\351\274\001\304\004>\322SJ>\216Yg\275\257p\324\2754V\202=\265\\\013\274q\032\331\275A\211@=\367J\001>\370\361\237\274EA\004\276\274\344\252=\353\3040\276\r\236\245\275\350\nq=\237Z \276\320\007 \276\325\242&>IZ\277\275\361{9=\264\000\251\275\001}<>\264Fi\275\261K\013=M\366s>\374\347\336<\231A\031\276\324\267#>\307\356;=\210\320V\274!r\013>\210\206\262\274%\237\242=\343h\223=\023\302F=\275B%\275%\245#=\254He>\320\323\000\276!\252\000>\311\237\r>\037\273X>!L\006\276];^\275\251\315l<p\325\026\274\nv\311\274u\315W\276BM\234=\325\304\304\275\232^\027\276^\222I\275\265Q\265\276s\033\255\275R/\035\276\216\000\033\275\243\np=\241\\\013\275\215\031\306\275}\357\333<f\235\312=~\r\337=3\232*>>\242\001>bH\031>D\2657>I\341\341\275\t\201\235=\206\323\237\274Q\264\242=O($=\272\201\212<\364b\347=,\272\017\275\360@h<\033<-\276T\330\203\276\031\277I:?7U>9b*\275\231o\346\275\016\014R\274\321y\216=2y\021\276\260\212\243=\3529\000\275|\240%=\032\032j\2764)\202>\0007)\276\327\250!>\373{\017>V\'4<\216\257\213\275\245\334\203=\031\342k<>\263\216=\336M{<\324!\004>;\224\237\274\255c\361;(\356\342<\225\237*\275Z\260\211\275\244\027\327=\327\227}<E\273\234=\006&s=\013c\206<\345W\332=\316\277)<z~\n=\0162Q=1\351:=\347\245\035=\2548\325=U)\254\273\036\330?\274\246\004[\275\266Iz<\210R:\276\207\257\302=\235\t\370\275\332\3336\274\205\002c\275\027\317`\275\236\364\302\274\342\335\214=7\177\233;\245\234\335\274X\271#=\217\331\307<)\3619\275\2317\370=\241\257Q>\343\276\036>\014\014\342\275\252\343\007\275/S\312\2758\013\002>/C\350=\325\314\206<\233\306\022\275)\374\252>\213\026n=F\016\322\275\346\237\376\274I\322\253=&\352\260=\366a}\275\017\350\276<\\\251\202=]5\322\275\270lG>%c\370\274\352\r\200\271\337\003\365=R\002*<j\t\023\276s\310\006>u\202\330\275\347\343W=\372\r7\276\016\365\332={\326\373\275=\211\226=/i\340\273\341\257\235=*\3733=(\020\006\275\016L@\274.X\201=?;\037=\016m\020\276\277\302j\275\010{\035=\200\016\200\276\006\333\363\272\000\344\343\275\346;\270\275\377\327n>a\224~=Rj\356=\3074\034\275\001\r\024>\312A/\275\310<\242\275\227<\">\337\026\261\2743\224A\275\021\216T=\024\037\025;\271\205a\275\327\035\376=\253\254\333=\250\331@>\004b<\276\273\321S=l\022\255\2757\262\273\275b\177\231\275\370\3324\276J\332Y\276h\025\237\275/v\303=ja\002\276\362I\265=\363\372,>\330\215\375<\3352\244\276\240\226\224=\016\204z\275\337\235x=\253\332=<\321G\001=\336\224d\276\344\'\226\275\354B1=\332\201\232\274\272{\007\276\204\207\n:\330H\343\275!\372\333=\007\341\261\274\356\232\237\273\231\352*\275#k\260\275\330\201i\276\245W\223\273>\371\366<%\0232=Oj\333;\221j\206\274\350\036\027>\3368\003\276<\014\314\275\242\014\322=\010\245\037=\003 )\276r\263\244<\204\177\013\276kc >\365\211\316\275\223\234X\276%\220,\273o\034\014=A\361\354=\032&\032\275\020\374\344\275\376\335N\276%\234\201=&\366\374<\254k\032\275*\303\314=\317\n\262=\210\346.\275\230\366C\276s)\'>b\347#\276\345p&=\002\341\375\275d\331\035\275f(\365\275\202\242\227= \n\323=\257h\246\275\000N#\276=\020\316\275\223\247\371\273/B\232\275\341R\243\275-\247\233=V\206\317<\031fY=m\\4=9\323\347<\236\224J;\263\301\302=\315\276]\275\030\213\220=pN!\274\311se\276I\340\251\273F\206\350\275{n\203\275\332\320`\275]\257\016\275\026\306\226=4\346\226\275sk\255\275K\262\237\275\234TD\274\033\003\237\275L\2350\275~\327\210=\237_\333\273\027<\312=\007Y\213\275\r\254\023>.\260F\275\033\004\202\275Mfm=\376\243\032\276\323\002*>\307\0105=!TL=\315%a\276\375y\306\275\260+/>\236\263\340=\340\211K=\362}\032\276\312\247\241=|\327{<A\367\242\275\323i\016>UeY>\317f\244\276s\314\325<u@\302\273\343\227\023>\301\0271\276z\343\320;D\331g=\275*\314\275\247\343\352<\314a\246=\2701\232=\261f\224\275\267qR\275\260\037p=\245\031}\274\r\r\306\275\367k7\276\307\267\r>\320\210y\275#\0009\275\020U\215\274\324^j<\235M\204\275\277\262\215\276\\\276\032=d\027\016>\177\262h;r\223\021\276\234\352\207<\247/\207<h%\276=\036=\222\273\244s\361=\266?\037\275x\251C\273\230\231\235<\277\0317\276\033.e=\236L\007\276\213\375\376\275\3676\214=fj\016=9!M=\263x\351<\313Z\326=\027\322-=Q\331\277<\213\305\217\275\247gI\272\002\240\001>\035\231\342=\360\340!=. \303=\271\200\016\274{<\365\271+\310a\275\"\317*\276Cp\270\275\005\320W>\322\036\026>d\330\024\276J\343\n=\344 \345=K\214\330\274\024\326\364\274\221\336*>\236f\374\274\312\366\261\275{\201\210\273\231\'\376\275\307\005j\275\\\200%\276\271\344\034\274\236L#>*5\n=U\364\353<\261\323\332\275N\253*\275\3231v\276Q\260W\275\t\276?\275\030\267\217\275\236\'\262\275\271\220\335=^\370\374\2742Ax\274\225B)>\000\342\334=\374\331\n\276\361\337v\275\3731\372\275\342\337\371\275\3666\304=#o\212<\366\r\016\276\223\200\350=?\326 \276\246hK\275\356q\323=,T\370\273zbL\276)\326\220=\220\267\220\274\232^\031\276\022\337\347\275\016J\303<\002\343\253=;\271_\274\242fn\275\311\351\335\275c\351\206=_]\356=\247\315l>a\017,\276\315\313\026>\201\301S=*\322\204\275i[1\275nV\321=s`\035\276\341%3\276\351\347\332\274i\337)\276^)\027>3MV>\234\252\242\274d\232\035=!\372\004\276\262j\026\276\024\016\310=\346n\226\275&\364#>}\347#\276\206\255E=b{\025\276\033\226\r\276\\\3611\276 \006\217=Rm\231\275\306\241\212\275\264#\242\276\205c\005\276\260 \014\276\251\200a=\007Hy<\244\375\372<f{\r=}\250F=0\010\313<\361\014\301=;\210\217=\363\267\035\275\265nk\275\320\302\006>\371\335\263=J\030\\\275\252J\307\275\020\331!\276\010\255\261\275Z\r\004\276\014\311\275\274\3134\236=r\245\371\275\0013V>\340\036\232\274\021A\204\275Y\026\214=z\301\020<\001\245\306\275\342\364\r=w\2675=_\317\">\313\317\037<\034\3160\275\363\362\325\275\353\220@\275/S\201=\274\260K=,g\005>u\226\342\275:z\177\275=\254\373\275\352x\223\274\255/\206\276j#\203\275\224r\257=pz\004\276\003V\310\275\360\374\205<\320\004\260=?%V\276\326\330\212\275\265\022\014<\315\230\000=\023\'\201\276\206\357\211\275\337\250\001\275\324e&\276\333\026T=uj\263\275\203\304\277\274\201\267\001=\326\3174>\334\202\017\274W\300\020\276=\316\265=\251\3753>\252\244\213=\273\307M\276\270\233M<\254\0144\275\333?\364\273\034\227\026\276X\247\350=\206\210\';\257\251\247\274\315b\216=\243\274\343=\\\375\017;;j!=\226x#\275\233f\216<\027\016\'\276\323\322\t\275\353S\332\275Gq\230=\373N\336\275:\332\210\275(6j\275n\332\025\275\231`A\275W\352p\275\013\314?\274\252n\022\276\244\374@\276\203\201U>\346^\353\275\220\310\366=\007\370\263\275\363\327\023:\261mx=HoP>\373;\030>i\2755>GG\371<@\317)>\223\353\361= \003$>\213XX\2747\206\227\274\273\307\025=\222\273\334\274{M*=GM\216>\341\303\246\275\267\367\261\275\314n\003\276\223\351l>\220\206L\275+\355\251=\017vD=\035r\036=*8\027\276\311\305\241\2759\304\235=6\314-:\3728\222\275\013\025\253=m\030\\=p\343\313<\343\237\030=\314\230\351\275\252-\237=\334\375\013\275rg\037>\235\256{\274\363\034I\276\201\236#>\304\320\323;\354E\374=\220r\037\275\026\336\223\275\345oj>\220\211\267\275PSg\276\177\'\003\273n\326\230\275\333X\253\275R,2=\032\206d\275F\366\276\275\346\376\016=\253\2447=\252Wc=\307\2629\274b8/>\231\2022=i1\220\275\036\337\263\275\211\312\236=\225\254a\276\267\302 =\351\220\302\275\326\272\250\274iF\331\275Qc~\275r\0017>t\036\r>L\317\330=\'=\266\275\251\362\276<}\231\273;\275\312s\274q4\356=\030\277\303=\321\330\030\276\02375=t\032\252=V\355F\274\250\306G\274\356a\207=\210{\235\274\223\263\234=\254G\227=\0061\234=\272>\007>\222_&=\262\0272=qM\016\273\032F\331\275\'\246]=\036\036w\274\342\326H=\tC\307>d\360\323\273=\332\346=\335)_\275\374\362a\2758\031\240\274\372\374\236\275\023\201\205=G\027\246\275\016VD=*\323/>\270\262\217=E\007\004\275n\321\234\272\317Zr=I\n\320\275\022\346\342<q\024\242\274[\213#\276S\273\271<^\220\205>\210\021/\276\221m\241\2745\277U\275q\0026\275,\330B\276\313\205\257=\325\357\367=sb\233=\030_s\275\\\034\352=\356\214\316\275\277\205\301\275\014\257&\276\361M-\275@\251w\273\n\212\202\275Z\333\334\275/\2516=\002f\036>\372\036\227=\302\0315\275W\235J\275\377s3>\207\243\217\275\355\255\223\275\034\245\'\276*\262\356\275\316\255\376\275\373\214\203<\032\261\347=\020\202\335\274\313\330\375=\245\252\251\275E\341+=\223\030\007>\326\206\337<\227?\276\275\360\211\250=3g4>G\341\236<\263\031}= \223\005=\302hY=\253\2207\275B\345*=z\325\341\274\324\335\000\276\305M\024>*\002/\276\005<\017\276\374\321Z>\017|\212<\370S\322=\351\364\365=\025\301/\275\247\337\233<]k\020=\270\226\027\274q\3526\274\324\364\203\275H\311\355=j\361\023>\236\251\343\272\257\377\326\275r)\277\275i<\272=\252\310j\275\333\241\254>\340G-\276?\t,\276~\323\376\275j\237\207\274\224\251\352=z\'l<d\347I\276\026B<\275\375\370\n=9s\031\275t\210\374<r\373\307\273\272l\205\275\'Z\354\274=\240,\276\2768\265\275\253&\333<\271N\337=\313E\030=\272\364\371\275\251T\'> T\213:\200z{=\267\032\356=bW\274\275\307\236\005>\215\340C=HJ\233=\371YX\275A\366\314\274\331\247\363=\226\347\317=\000\373g=\340\"\212\275`v\273=\002^\210\273U`\215=j\037\210\276\007\220\260\273\351SX\275\313(n\274cq\274=\315J\230\275\251U\206\276\256a\200=\216\022\026>f\000G>C\264?>rq\000>\251\0062\275Xn\353==%\211\274!\306\004=\220f\241<K8\304=\355\241\007\275\233\260\234>\013U\371\275\223\rL\274\224\255\267=\302I\255\273\026k\035\276\371\253\275\275\205\025\364\275\233d\270=\307A\245\275/9\356\275c \001\273r\026\254>|G\266\275J\363/\276\234]\335=\347\231;=s\261\\=\336W\272=Oj\030>J\245\340\274\257\021\246\272\377A\n=\347)\342\275\207v*\276\261\033I\275\376\337\235=\347\244Q\276\326\211\303\275\237a\342\270,U\363<aD\355\274.\'\'\274\204\263\002\275\\\227\356=\361\2742\274nZ7\275\313\367C\275\301aV=\344?\320\271\235\036~=\2126N>R\260\370=\212\316\214\275\037\307M\276\242\337\205\275\237(\220\275\212\303M\273\363\343\363\275\200\304\350\275\\#\030\274<@\257=/o\003\276\342c\001\274!t\020=\307\322\232=y\326\303=A,C\275\215\371(\275\215DV:\016,B\276q=\244>V\344\215>\337\200\034>\261W\323:\261\001\024>4\341@\275a\331\004>u3\210=K*\031\274\335\363\014=\341^\270\275\374\001\211=\272\027\316\275\\\260\354=\372\226\225\275\207\252\004\275\254O\217>\223\\\247=\034\335\235=\032\360\023>\177\026\025=\255\035\266\275\t\224\230<U$\257<\233.%=i\375\305\275\374D\014=R\235\006\275\302R\201>]&6\274s\3479=\025\312c\273\226{\334;\031\210\250\275\373i\364\274)Q\027>\327\314-\275\361/T>\003\327\007\276\330\272\302=Y\325\204\276~\344\237\276\202\337\263\2755\377\222\276\311\027\251\275\314>\005>\256\207&\276\365+t\276$\303\272\275\010\260\374\275k\037D>&6\200\273(\334\301\275\271\246|\276r\334I<\004\037(=\017\3613\276\336\261\222>rq\014>2\373\203\274\374\303\261\274\236X\r\276f\203R\275\355\200\001>2\301\245\273\375%\254<\2224\321=q\222z\275\177&\241\275{\224\231\273\001\2501>\302\263]\276\271\3140\275L\225)\276\r+\223=\245/G=\003\317W=\225\321\200\275\034\005\237;\002\272-\276\237\336;\276\336/a<|\226\225\276#\251u\276w\372\223>\261\001\372=\345\026N>\306\013\037\276\303\277\003\275\247\000\307=?a?\275\376\327$>\227X\001\275\371\323K=\236\017\261\274\270\3664=\007a\273<\275|\364=\2054\'\276\347\025\223\274\3216F>\3637\256\274\236\357\275=\313\017\221=c%\325\275\016\260a=\016l\300>u\232(>\020Q\010\276\360q\264=Xi\341\275x\351\247=\275y{<l.6\276c\253\357=6\367\215\275\rc\364\275\331\310W=G\202\231\275p\0226\2752t$=\325\365{=\004\245 >~\025L\272\273\313I\275\026\341\304\275\351P\316\274\276\007\312<@\033\356<\374\224\234=\262\325\335\275\254\t\r\276\267r\332\275\256\371\177\276\200#\305=^G\022\276\310\264J=r7e:\231\235M=\0368\234\273\010E\027>\241\000B\276\355j\363\275\211\274\256\275\213\243C\275\343\2338>[\\\257=\251\2771\275<\t\224=\004\320\'>\235XZ\276\035\230\243<T\202M\275\331{J<0\321S>3_\t\2767\261\234<\227$\315\276\001hA\2763\370S\276\323G3\275\307\'/>\322\n\325=\364\257\013\273\022\263*\276\216\333\310\275=N\200=g\347\273=t4\226=0\337F\274\200\032\274\275\344(\">,\205\004=\244\233]>\321\014\334\275\004\322\240\275\212\333\366;\246p\245=M\204\013>\002\037\227\275\021\310\265;\374\317\023>\037\224\257<\271P\223\275\215\304\356\275\310\266}=\215$|\275X{\013\276\333\325\362\274m\236\032\276\360((\272\241#A\275\313&\'=R\240\004\276\310\234\025>\227I\264\275\205\0013\276s$\231=\343h;\275\t\245$>\030\335\275\275\037)t>le\214\275\337\225\326\2717B\253=Pz\207\275\320\374\274<N\202\264=3\343\343\275\311\217*=\026\332i=\221pP<\216b\254\274*\024\005>\365\307\242=\324}}>\02716\275\313$/\276\245\205;>\235\016S\275\376\371\016\276\252)\341\274M\005\331<\270\274\215\275M\367$=\340\361\203>\203\210\r>o\323F\276\242\204>\275\225&\025\276\235\260\247=Bd)\276\321sB\274,\3744\275fSp=\320\316\230\274E~\337\275i\253>\275\311\245\352\275\233!)\276\037\310\326=?\235\204\275bL\330\2755\377\020=\236Y1=C\343}\275Zt\246=6\035d\274\006\217\251\276m\347\002=\200\360\231=x\322\271\275\251\372\350\275\323\021\r\276\t\354&>\340\205\354=\355\334n\275\"\345,=\022\335\267\274\300\322\230<\223=\025\274=\301\002\276\263\005\201;\036C\201<J\033\036\275\263\214\355\275.y6=\266\327\262=V\355\301\275\261\036m=\031\325u\276IV\300\2755\246\235\275\000\363\334=\262\030L>\026\'\360<\342\256\022\276q\177\310\272Q^\252\275\321\202\320<\014\2106\275\222\252\271\275}$K\275\330\264\034>z\336\360<\324S\232\274\254\355\346<\307\362l<\302K2=\247\0079<\225`\267=\343\315\203\275\336u\022\275`\'\300<\371\t&\276\023\223d\275\206M\007<\206!\331\274\331*\'\275\224\365\224\275o\3467>:\005D\276#\313\230=\207\251\341<+\231\337=\376n\004=I5=>\036R\357\275j\022\274=\3038\253\275\177?J\276\014\234\036=\0243\220<\361\272\230=\346\215y=\306\226\335\275\023\241\n>\"\312u<Q\000\003\275W\226\205\276g\026\342\275\355!;=\202\036q\276\341*$=aJ\256=a\347;>\277\341.>,\242\342=\355\006\232=|g\202<\251\000\212\275\255\365\026\275\312U\025\276_\357\002>\302\304m;\037\017\021=\313\035\211\275\247B\005>\321e\346\275\355\262\303\274$/\277\275\362\177\001\275\005\243\270=~Jh\276|>\335<\306\030W\274\204\007\023\275\321v\330\275\t\017a\275\256\275#\275\363;]>\357C\227\275m\027_\275_\266\202\276*\342\004\276\022\t)=\334\323\002\274\372\301]\276+{\370\275\002y\212\2751\013\243\275\240\337B>al\257=\367\251\r\275\362ae\275.\030\000>\030\025\"\276\013\274\026>\340E\240=\345J\252\275\"\227\326<\376\035Z<u\340\300=\371!?>?\334\277\275a\375+>)\360\212\275\347\263\201=\352>9\276\275#\320=`\275#=}Ac>_\353\256\275s?\346\274\024\263.\275\322\255;<`\340*\275\227\211?>!\375\351<53\207\275\2212\221=\257\005\225<\211\203\260\275\205\352_>\006\251\316\275b\010\016\276lt\n\275\311\2365=\210\347\"\275=\345\217\273\212\253\020<^\257\367\275\313\261\205>\321\221\321=\310|\336\275`bV\273\261\205\360=^2\025>\255[\021=ic\212=\250\261\273\275.\001\242\275\343;*\275\236\005\002\276\255\3437>\025\317,<\274\036\226\274\030\003\021>o9\200<\027\025\246=\333BN\276l\374\177\273\320\231*=\t\275\373\275J\370x=\244F;\275r[\033>\233j\200\276\250K\030>Wt\251\276\301V\207\275GvB=Vu5\275\347\254\030\276G\344f\274B&\200=\302S\322\275\272\371\324=\320\362\310=2GU;\353\2602=\271\204\222\274\273y\017\276\312\241\230=\222\276x=\267xz;4\266\300=\374\1773\275\032\013\332=\221\\N>\335\251\210=\360v\240\275^\252\377=ZRz\272B\031\371=e\030\377\274\363B\021\275\361$\346=PT\022>!\021\351<\215a\223=\000\366\232=\353\227\'=$\351E>X\333{=\225\331]\275\022B\005<\2352\226>\013\001\341=n\2302>\307A\365\275x\206\314\275\322\272D\274\360{\356\275\021\256\350\275vt$\275\016\210`\276j\024n=\261\307\320=\262\326\367\274\001\022\006\276\254V+\276\0201\031>\001nP<\341],\276j\355}\275\222G8<}\264T\274\372|\014\2744I\340=\014\312\324=\207\252\372\275\255\237r\275\331\321:>\343.\231=\217\013\243\276=;\202>\227\216b>\006\254\266\275\217\205\333\273\331\221+<\212\355\267\275#\361G>\263\264\007\273\314(\";^,\371;m+\203<\366\215\322=\375\256\014>d\256\024\276v\005\032=T;\263\275\233\r\345\275\361N\203\276M!\013\275e\233{\275\204\246^>\241\340S=<lH\275+d\340\275+ \345\275\352\334j<\247\236\237\275>\327\205\274\317\317\017=\235V\r\275R\331v=\0224v\275\030\345\316:\341\016Z<\207Q\023\276+\314\252<Z\240\277\274\355J\026\275\216r@\276\366h\326=v\317@>\001\253\r\276\2327|;\300\2354>\244\240\255<\232/\210\276\326\225\342\275\"\3516=P\343\010\275\355.\034\276\233=\031\276$\274\335\275\'\327\271\275\336\214\204\275\316\305\003\275C\207k=\021\272$\275\312\314\325=\014\257\021>\'\373\256\275\306\332\266=\275<)\271f\345\034>\034]\207\274\244\335\010>=\2079\275\242\274\355=\2539/>U\027\r\273\322&\n>\010s\032\276]uK\275Y\026.\275\0053\022=\301\034\006>\225\2010>\023\204\234<\234\342%>f7x>BdL\276\r\217\314<\245\341j>\354>\030\275Ya+=\221\232M\275m\335*>\305>\263\273\003\231\201\275}\016\223<F\361\"\275\021\257\037>0\267\024\275\273e*>$\036L\275\316\212.=[\271H\276\250\007\263\2743\347 \276\027;Y=\241\036\364\275\301\005F=\232B\362\275\0319\014>\240\234\r;JK\217\275\312R\002>!\2554<\246\3401\276,\033\253\275\274Y\233=\251B\230\275\215\373E\276\312Cr<\\\220\234\273\313\301\246=i;J>\005\235\270\274\242D\355=\374\265\202<\302\322 >d\356\343=%\355M\275K\346)\275\335\275L\275\340\246\260\275[\251@>r\016\006\276\242d\020<k\037<=\250K\352=\337\364\327=\232w\237\275 \204\343\274\250\376\253\275n\036\027>\232I\256=\220\362\334\275`\331\217\275\2444*\275\377~\361\275xT\360\274g\034\302=\335\345\326\274\213\204e\276\252\220\232\275Lbl\276\262\301$\275\231c\241\274\006U2=\373\021\222=\241Z\306\274\337Q.\274\031\003l\275)-n\274\370\034\363=\367\355o\275\031\327,\276b\315\013\276\351\312\323\275\327s\247\274W\217\327\275\231i\300\2756da\275\213\334\334\275m\375\205\275\373\222k<m\006\347;]\016>:uN0=O\016\235\275\002\t\021\274\212\221\244\273\224\2278<}~\255\272\2556,>\306\346\\=7Y\035\276\224\023v\274q\024\235\275y\200\242=}\213H=\010\002R\275\327\364\364\275\211\010g=\300\302\226>5N\000=\247P\247;\242\244]=\000\0013\276\353\005*=\273j\217\276\202\"\340\275,f\200\275\345\026\333\274\375\370\022\276\314\t\226=_\024\312\275f.+\275\300\2742\276\254q]\275%nH>\266\217];\364r\314=t\322\003\275\017f>>Mx!=\215\014\220\275\177\334_\276\301^W\275C)\013\2766A\004>o\236\024\274\313\310C\272Z\020\355<\270\257\241<Si\214=\007\320\212=\216\361\037=\313\340\254>\362~\224\2764\017\337<\275\003\021=\371\304\334\275\332\327\240\273~\265\215\275\214\304\306=\272}\372\275\025o\276\275!$\302\275\276\177\275<\374\272?=\325B\227<\361\236\240\275E\002\236<*t\277\275\275\372(\276\377\370\272\275\2161\317\274[\025\246\2751\275\235\275\206p\250\275T\221(\275\016\212U\276\244\016:=\241@\247\274\010\036\030>\347\232\014>\313\t\377\273\337\347\364;g\266\340\275\320ss\275\357E|\275\'\362C=\320\357\020\275\257\024M\276\352.\0317\314Z\202=\324\315\016>\276f1\2755\033\r>y\344F\274\217x\262\275\223G\311=:/\235>\252r\215\274\360:\350=C\210\202\276)J\020<\266O\225\274\206\212P\276e.\\<\257\201\332\275\031\005s=8\007=\273\005\376\022\276\225G\242\274fD\322\275\333O\206=\017\367\302=\254(\201\276i\370@\276\273}\273=\327\242\305\276\262\210\324\274\364\003+>\271 };$X\367=u\203\344\275Ck =\361\351\037>\331C\037\276n\204\r\276h\007h\275\301\313\014\276\231\304\242=>cB\2758\3066=\027W\334\275\025r\370\274/\375\2469l\201\234=\210\005;=\364`/>\307\303\247\2755I\177\276\317\347\200<\300\263\361<e\2369\275D\262s\275\177\322\231\274\006\371o\275\361\002\336\275\310\302\334=^e\233\274\241\370\216\275\'\007\222=\324\330<\276i>O=HB\256<\370\364\261={\272\001\275\035r\007>\236c\006>#\'\361<\275\023l>\241S7=<0a<\203\201\001\275\302\217\177=F\353\316\275h@.\275\374\264}>\362\254\204=l\0262>\257H\241\275\223u\360<%\266K>\321\336\035\274XW\'>\030\234\321<\355\243\202\274\002\323\203=\233e\231=\254Q\252\274\010\267X>\366\355N>\251\361\333=\200\352\021<ei;\275\255\034\020=\022\004:\275\327*\230\274l\020G\275\315,\254\274;\014\302=;\334M=\320\rp>\326C\302=\214\332(<L\371\202\275\353M\216>|\243a=\220\320>=/\210\233\275g%M>g\306i\274\202d\236\275\\\265\353<\030\346X=\353\000%\275\275\013==\010X\353\275\005f\347\274\272\350\266\275{F\033\2755\r\211=\247\277\311\274\035\215\216=\2462E=\352>b\275\220:9\276\212a\215=\030p\230\275\213?l\274a\370{=\346\244\001>\363\215\034\276\277[\262;\225\026l>?rA=\331\355W=\325q0\27371\222\274\353zC\2764@\260>\372t\201\276\360\316h\275&\351\230\275\340\273<=\222\342\243<\322\321\014\276\204\312\033>$\224\013>?\327\325=]\241\261;\365\232\301\275\353\222\235=H\3254\275\226P\337\275\373\026L>c\320\330\275K\214\306<k\265|\276\350\366\205\275%z\271\273\005:7>\245\224\371\275\252t\277<\257G\241\275g\257c<\272\3242\275\223\225\006\275z\231W\275\202g\305=&|\231\275\014\356\336=b\252\315\275\210\375\216\275\314\3169\276\2141j\275oG\256\275\344LY=@\346\320\275\213J\307;X\317\010>&\'\336\275\232\tM\275\2214\027\275V>S>\273o\"=\211\327\276=\014S>>a.\210\273\305\\x\275\227\236J=G\230\t>\262\331-\275\357\277\247\275Ma\237<M\266\n=\374*\260\275\001\303R=\017\3213\275\373\351B>\240 y\274\253\315\204<\016U.=i\226\345\274Tg\261\275\231\370\355\275\341\021\340\275\031,\021>\216?\332\275p\026\037\276F\210\360\273\031\360\221\2750\002D>\031\202K\274\210\330s<\253\220\030=\266:\035>\377\211y\275\336F\273=S\301\325=H\271\215<\027#V\275\340\335\t=\273\207\215\275\206\311+<\357\372\274=\036A\257\275\354{q>\251\032\351\275\276fb>i@r\274\375\377\022>\373-\313=\364\206K\275lJ\033>\"4\263\273!\236\035>\300\364t=j\265\241<z\036\026=%\273\306\275\310+\036>\306\204v=g\306\014>\266k\307\275G\2554\275\210\t2=\345\276\206=\371k\361\275]\224\200>\017\210\013=\251\370^<\361\236H\275\266\005|\276\374\213\002>k\304\315\274N\303\225=\n\217/\275A\224!>\234{~>\237\306\200<\334\353Y\275\225r\325\275\256T4\276\222\275\327\274\222\304\321=\202\026\373=\236\203\276\274$\275S\275\220l[\275>w\302=\372\255d\276\331?\211>\305\013\023=\002{\220\275\177\246\353=\326+I=\034\224\355\274\004\244\320\275Xz\363\275\277pB\273\351n\226=\010;\315\273\264\355c\275\251j\215=\2500\363=\334\307h\276#\004\014>\342\227\026\274\327W%>\213\016\235=\330NH\275\\\261`\276b\367\262\275\036\314_\276\330\212G\276M\371M>\351k\223\276E\210\013\276U\377\332\273)\206b\276\220-\334\274g\tX=\316\205\035\276U\272O\276\342\321(\275\226\255V<W$\262=\372\255*<r\345\233\273mK\225=\\o\016>\340\332l\275hm\007\276\207x/=\270\300M>@\250\221>\014\026u<m\354\244\273\332\231<>\177\016\212\275\206.\330\2752\257-\276z\3204\276\377\335^<\305\303$>\343\005\024\275\342\2101\276\357Y\237\275\344$\212=F\005\032=>\3522>\242\372\263\27523n\274:4]>\331S\232=*\220\227;8\305\207\275D\t6>\244\304\020\276j\236\213\275\272\334I\274\304\273Q>\326\004\227=Cy\254\275\201\332\003\276\370\374-\274\252?3=\260,\r>;}@=\335\034\266=A\031@\275\203\343c=SE\321\275\325\243\033\276\336\334\227=\200\002\005=\337\236\232\274[\304*=\262\334\310:\341\315\303=\233\211/\276\350tv\275\010\271\314=\330\275W=\225\331W>\340\352\251\275\345\276\014=\'\031\242\273\230f\232=\340\177\032>W\235_\275\365Q\001\274/\245\341\274\262YW\275\241\341\214=\321\3051\276\321\3379>\345\275\'>\006\204\230=\217N->5\275\242\275D\346\344=\303\336\276\273g\"\004\276CM\267\275\372\205\000\276\244%\201>\351&\206:\364\215\365\275\232\343\263=\335\035j=\331\236\213=)\325\007>N\306\201\275\"?%=\252\374\330\274gA\013\274\316[\376=)5I\274?\241\r\275\376B\203\275(\261\'\275\261#\361<\3164\242\276\315\366s\276\'\216d<\237Z\217=\360D6>*\220\264\274\355\377{=\305\363P>\005\227H\275u\202\240:N\3108<G\214<\276\027\002\032\276\027\322\204=\323s.>\327\235\353<f\032M\275\2404\024\275\204\341T>x.c\2742\324\'>\306X+\2761\'\023\276\376\200!>\336\362\367<\360:\002=X\335\016>\252\221<>\317O\353\275\234r\250=\036\027~=\315wH>\323\252\010=%W\n=n\236D\274\'\202L\275a\202H\276\332\021\224\275\204C\207\273\237~\215:\260\306\252\275\366N5\273%=\363\274 i\375=\332f\315<\274\277\234\275\370i\2219iZ\221:\177\363\214\275\311*\013\275\235\233\310=r-\371\275%\364\237\274\242B\204=\355~6\276\316\215~\276\315Vi=\230\213\316\275\307\220S=\272\023\202\275\007-6\275\360\347\312\273\241jy\2762\252\234=\270\315]\2754\375\361\275\031a\2449d\376C=p\306\254\275>\317\303=\3366\260\275\331\350\226;\'\007g\276\315\314\003\276\033\247\237=!#\247\275\360\307\303\2742\217g\275\252\0236\276\267\241\206\276\227\225\360=g\377\340\275X\373\263=\333\331h\274\320\266\332=\354#\016>)i\345=\363`\301=$\320H=\030m\035\276-\270\263\275\277$\234=\357\231,\274\200\t\201\276\270hC=RZ\275=Ww\033\275\217kl\275\277\267\341\2754\343;\275J_\370=k\262\272=t%\364=,\255\225\275\021X\236>\337\272\276\275q;\215\275\272)\234;d\221\310<\212\354-\275\256K\311=5\nh\276-\2031>*\004,=?K\003\276#\334\351\275\314_\037\273\212 \355\275x\013\260:\374\032\370=\361\324[>\220K\263\275C\234\376=\221\272\224\275\311\222\271\274\333D\355=\374\311f>\2220\345=$\327F\275\224R\370\2734\'I= \375_\275\326\020\025=6\312\310<\2066\301<\036G\276\275[!\000\275ejf=\327;\210\275,\376\302\275\321c\033\274O\370X<\311\374\"\276=\023Y=\233\035n\275I\3325;\246\205\323\273Wn\n\275M\351\023>\220.\203>\237\246a\276~\303\304\275\201\000\254=\350G\035\276?\003\177\274\352\270\300\275\256\321!>\213\235\375\275\306\315\254\275\231\370P>\007\353o>\252*\275\275\237\367\326\275ikv\275\343\326W<\274~\021\275B\013%\276p\325\243<\373B\221\275\355TY\274\357U\345=~]\264\275\335\300\227=\020\334\222\276\337r\005\275\327A\365=\354\000\010\276s$t<\244ns=\307\013J=\236V\021\276\364\232\214\274\326\367\000>\326gv\276\035Q\212<\220P\177=\321\237B\276v8j=\242\033\340\274\002\235\214\275\255*\330;\031\204\201=\036\372\211\275\343\342\277\275N\007\306=\r\317j\276\314\337\230\273>\260\226\275\203rC\276\364$!\276\266V;\275\341o+\276\336\214u>l\\\362\275\375@E\275\265HO>5\257\037\276\t\027\014\276P\310&>L\013\031=\026c\362\274\351\247\313\275(\365\225=w\\\261\276\213\215s<\t\010\341=\025F\257\275\027\332\221<`\351\375\274N\257^>\021\000\373={\r,=\024q\203\275\335c\010\276>\265\270\275\332\\\352=\271Uj=\263\263\375\275\230\205\241\275<Le\275\002=\036\276\324\301\031\276\252\334y==\205R\276\364\177\274;\005\321\021\275f\246q=\235Kk\275\261W-\276\305\250o;\242\300\300\275\023\223\360<\r\263M=%\"#>_re\275^\200\325<\214 !\275\307\240\311\275\022E\333=\306<\016>Qu\365\275\210\272\321=\360K\216=\206\2669\275\240\215\266\275\216\367\353<\231\'\323\275\255\277N>1L\337=\271-\353\274\177\263\271=f\222\305<*/e\275!\t\037<\321si\274\257)\263=h\322\324=\220\251\342\275\022(\335<8Q\t\276\003\'\211\275\266\336\357=u\2506\275\274].\276\333\216\231\275\000\230\301=\331\230\r=\257\014\300<\301\322A\275\306#\277\276\344\322#\276\342\246,\276\254\263\r\275\213\362\303=n\033\315\275$>\r\273a\232b=\240\342%\276\304\373K>\356\233p=\014YQ=\3537\241\274x\276\034\276\026[\302\275d\247\223\276\362pG\275!x\007\275\241\3241\274\323\327\262=jk\224\275P\2361\276\003\374\034>\242\333\017\276*\216O\274\351b\274;\270\004\300<\235\333\301<\373\217%\276\277\205D>\232\355`=D\345\362\275E\251|\276+\"\001\276\244I\003>\244\'A\275\201K\341\275\256A\373=\344\361b\275d\255\264\274\270E\366\274\320ry\276.\223\234;\2746E>\312\270\330\275<\225n\276\261s;>\247\007\376\274\275\200<\275\301/\003>\014k\213=\257,,=g\tn<\347\032\214\276\202\362%\274\325\371\261\275\004\271\376\274bUc<\327)\253\276\2553\006\275i\022\204<\237\003\006=\2168A=\177\313[>\357/+\275\372n\014\2763y\025\275X\300>\276\357\330E>\324{n=\242\300\264\275\341/\021\274\254\334\235=\342\030Y\276c\217\254\274\t2\021=.\225\">\372S&>+A\247<\022\3318=\340,@\276\217o\235\275\216F\250\275\017%\000\275\351w8\275\375\242\023\275\373\306\230\275-\346L>\036$\357<\331VA<D<\332\275\334\225X=\237j\024>\353\265\215=fPx>_1\001=\216\277\023>b\242k\275\206\005\316=:\303u>\\\177\332\275s\n\365\275U\313\213\275\246\201`=\004U4\276I\267\242=\272\302\245\275\277\361\007\2769\364\001=2\201\201=\323\306\321\275\245`X>\005U\367;V5:\274T/\321<j\315q=\244\302\214<\202\007\001><\267\245\276n\321\205\276r-\213=?\337\226=\212\324\317\274\320%\202\275!rj=yr}>\364\3032\275\324\341j\276x\023\013\274\253Y\276<\254\242\021\276\025\302\017>hh\004\276\262\327J\276\233\326\032\275(#\301\275f?\362<\211\317<>\261=\376<\325\'3=\tbf\275c\331\200=[\204\016\275h\255\376\275\324\260e>\235\204\002>\347?\260\274s\320\205=\310\255\360=\260\334\n>\321\304;=\220\360O>\345\220\224\275\263K`=)s\013>\'S\342:\346\272\242\276\034\371\335=-\241\357<|\220\275<\262?\326=\265\224d\276\030\271\305\2766\357\325\275g\363\022\275\006\022\270<\023\274\372=\363$c=\316\324\003>%\315\027\276\247K\342=\371\335\240<\025\343l\275A95\275U\030\215=$\320D>\260\356L\275\3013\225\275Z\356j\275M\355\305\274q\023\014\276.A\'\274(\243\371=\346\0007\276\2338\206\274\324g\036\275)\264\375\275\252L\017\274\0048\007\276T\254\201=%.U\274\354\273F\274\276\377\344\275Ee\020\276\227?\375<\222}\021\276\202{.\275\274\316\"\275\227\262+>\271\007\233=\257\023\233=\001\243\252<Y\227 >l\351\243= \004\353=\217`\245=\347?\363\275\007\006\234=v\035i\274v\376\303\2753\322{\274#@\034\276\001\341\t>\213\262\217\275+{\027=\215\365:\276\316#H=\354\255\026\276|\221s\275\r\222\034\276\010{6\275\334\301\377\273:{\023\276\347\332`\275or\312=\311k{=\373O\267\276\211\"\334=k@\212=.\372G>\276\246\264<\314f\223=\306\374\223<\\\242\331=g\323\233=\274\355\372:%\221@\275\351\316&<\021zN>\200?\007\275\361b8\275\237\313\006;\362\350\005>IeG\276u(.\275\037\256\004>[\007+><\317\037\275\317\345->;\347\027\274\260\301\333\275/\002\262=\273rA>4\355#=\326\353\310\275\366@p\2741z\257=\345\271i\275\247T\\\276[\216\303\275A\332\327=\\\371\312\274\250g(\276\305N\330=\033\004\305\275|\330\035=t\203\024\275\037\271\236\275,\345\003\276@\025\212\274`p\007\275\237?\232\275\371b\341=\254{\310\273m\016\216=A\025\204=-/\014=?\302O<b\345\032\275P(\010\276\257mZ=3\257\337<H\010B=\364:\010;\351\014\300\275]\362\363\275Y\253\275\275#\033\000\276\\\333\000\276\234\023d;\334\362\341\274:\210&=\322eU>\2158]\275\to\265==Rq=A\330E\275a\201j=\235\240\030\276\307\353\244\275\376\333:\275\362\267\364=\274\240\307\274.\230\240= \'5\276\207#\260=\\A\230\276R \237\274\345c\252=\311\326\374=\230\311\'=:\266\n\276I\0340\275Z\242H<\341\025I=t\245\331=\016\332\311=\253\274\000\276\204;q<\000\205\270<\344\031@>\315-\250=\354v/\275\003](\276\"k\246=\376l\014=\235\r\374<Y\033\303<\031 \247\274\3061\323\275\004\216\324;6]\327\273\014\374m\275P\202\253\275\35242\274\204N\202\275\017\2210\275\n5\275\275\\\274\211\276\313;\234\275\325gE>\314Z\331\275\222\264\207=x\355Y=\023\366c>w\245\317\275S\322 =\334`\035>k\345\006\276\203\307\364=\257\214s=e!\000>\206\256\373=\270|\n\276\207\214\002=\303\377N\275E{\020\275\337E\213=\323j\273\2759\267\254<\000\321\006\276\360\240$>2\033\250=\002`\024\2758\005\007\274{\013\r\276\252\303M\2754\035\272<\231z\342\275\307\215R:\244\354\266=\327\326\204=\362v4\275\342\326\276\275\201\265_\275\375\231\311=\302\"2>\035\236\274=b[\254\274\246 \005>hc\356=\320Qu\275$x\202\274*\216m=G\241\305=\370\031\224\274\177\210\244<\004M\'\276\223m\264\275\322\343x=1\337e;\254\332/=E\256G\276`e\305=\347\n\353\275a$-\275\017\304j>\333\223\273\273\351\355\"\276f\t\275=MZF>\252N\024>\030^\245\2754\363\271<\211T\376\275\332\376\201\274\343v\333\274)\024\316<qH8=\203b\217=\351\2029\275\332z\253\275n>\225\275tG\326=\000\320\333\275\261,\203=\205\027r=;\247\356=h51\276\303\027\347\275AC\020>\307\254{=\002}:>1\210\004\276\367\274\255\275;\246\212=\216U\346\274\213\363\340\273*\240\354=m\277\016=\343\006[\275\272\301\260\274\'\312\234\275\036\255X=8\336i>\031\036\225=\323\002\010>%\332\013\275\\\256L=\035\233\307\275\256\2413\275\366\353\214<\326\033\014>\221\335F\275\031MB\274I\271\274=z\245\251\275\205\211k\274 \223S\276\242\272G\276\210\340\021\276\2373Z>\210xg=\323\362\200\275?\000s\275#\214\277=\376\3234\274\242\326C\273\266\341\226<\032\025\324<+I\370\275h!\014\276\372\261\"=\355+\300=>\034\265\275\232_\231\275yhF\276\321dW\276\"\323\322=\233\200\215=\225IH\275\003\026A\274z\242\313=\247\304x<\177U-=ro\340\274\027\000\212\274\006Z\314=\221\027\217\274\021\3235\276\034\355m\2761&\243\275\035x\212<\013-V\275\334\242\242;}\372\347=\255C\223<\247\000\322==\202\345\2755\302\010\276\367\220\177=\243\352^\275m\033\001>^Pn\275\243\t\356=\321\027\263=\034w\340\275\226\254N=\330\022\300=\275\3220=\320/\201>\365\272\210=6\253\362\275f\001\026>[\225\214<\253\"6>\322\255\255=\223\\\247\274\274Il<\023\275\355<k\3209<\3339@\275\330\305\344\275\021\316\302=\027\021\031\276\367\323\261<\217\267\340\275\252\227\031\274j@\014>\367\261\264<\225\"X>ep+=#d\304\275\302\343\257\274:\3654>\312(\340\274"
          }
        }
      }
    }
    node {
      name: "deep/weights_layer0"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 90
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_layer0/Assign"
      op: "Assign"
      input: "deep/weights_layer0"
      input: "deep/weights_layer0/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_layer0/read"
      op: "Identity"
      input: "deep/weights_layer0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_bias0/initial_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\264}\315\275\260d\372\275)\365\206\275.*\277\2736\364\333=\230<\272\275\227\375\271=\363+6>I\242\214\275\364\267\214\275c\306\200\276\252G\003\275\375M\t\276X\007V>N\300x\272h,\361\275\360\245S<\374<\010\275Z{\032=w\326\255\274=\341\367\275n\254G\276K\021$\275\351\230R\276\033\255\203\276`y6=4J\010\274Q\244\327=Hiy\274\222y&\27642e\276\223\305v\274\306I\224\275\312Jl\276H\030\334\275$\t\246=\020 \253=\264\033v\273I\322\237\276~\332/\274\037\366\202=\273\022\277=\221\021N\276\341\t+=\322r2>\306c1>\341\020\237\275\323\355\n\276}\004\017\275&-\313\275\2506\036=\005\014T\276\034g\t\276\223\345\340=\177\305\251<\274\304^\275&Z&\276\0013\263=-|\351\275*\234j\276\035\310\242\275\007\345\252\273t\332\327=\"DG="
          }
        }
      }
    }
    node {
      name: "deep/weights_bias0"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_bias0/Assign"
      op: "Assign"
      input: "deep/weights_bias0"
      input: "deep/weights_bias0/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_bias0/read"
      op: "Identity"
      input: "deep/weights_bias0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_layer1/initial_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
            tensor_content: "C\246P>h\343\317\275\365,\003>\030\r\341:R9\373<H\211\262:2k\034>&\317\217\276\n\335C>\t\203u>\033\353\275<\rVu\276\233SI\276\374\205\013>\020vo>\274\313\320;\233\237*<tF\305\275\270\303h<\223`j=:U\323=\231V\010\274gD\342=\231\362\343\276\267N\210=\270\026\366\275\216\320(>gw\017=\014UT\276\263QH>3^\005\276s\305\205>O\233\310=D\037\271=\302\223\013\276\363\353\226=\273M\362\274\320\260\335<\336\304B\275\345\340Z=%\032\204\275q( =+-V\273D\344\247\274\337WV\276\004\321\022=[x\317\274\236x5\276\035l\004\276\344\254\256\275\347|\222\275\036}\202\274\336l\377\275g]\221<rPt=\334\350\214>\372\325\312\275^\371\245\275\306\354\321=5\2202\275nY\025=\270\345\004<\234k\270=[^r\275\275\031\000\276[\027\367\275\3756\371\275\203\032x>\302\222\323\275VO\203:\227\272\350\275q\366Q\272\302\324\244\275\257\253\235<\222K\213=\344\337\345=z,X>De\256=\247D8=V\037\002>\004\353\034>\342\222\016\276\006\262E\276\223\035|= \302}\275#\263\365\275y_l=y\225\340=\017~\010=\313\344\t\276\257\260\225\275\n\320\036\276\373J\203\276ou\203\275\345\340\367=\177b&\276F\367\332\275\223\221\022\276pH\205\275mw\014\276\276-Y\275M~\321;\262\245V\276\210\004\264<\207D\231\274\354at\276\201\345k<\323\031W=%\240:>\247\301G\275\366\013o\275\3437\244=r\342u\274\020\273^>\356\005c>_\234\224=\267Z\217=\3467\313=y\312\274\275o\037\331=\331\315\002>\276\\\262:\205e\375=\026\3723\275<\265\n\276\276\271\031\276*Y\374\275>\337W=\241Ld>s\304\227\275y\371\007>\2526\023>?>;<i\305\\\275K\241L\275\364\266\320\275\005v\370=\373Y\227=g\225\346=\347\nR>#Tm=uP{\275-b\314\275P\017\n\276.\203\014=\372\224S=?D>>\247\266\032<\314\005.>b\271u\2753\253\014>\350D\205\275@9\216=7\251\335=ly\305<e\235*=1\276\353=\311\007P\275\367\221\'>\350=\247\275\204L8\274\017\320\022\276\r\252\244=F\315\004>\251\007\250\275\037\2774\275\\3\357=\332\276\252==\355\212\275u\360\356\274<S\214\272Hea=\232\276>>\236\026\"\276O\355\317\275q\ty=\234A\331\275\177oN\276\241\032\034>+\272#>s\306X=x\216\217\275\024\260\023\276\241-M>\031\356\211=k\267\330\274\276\024\221\276\3334Z\275\2721l>\010#\262;\363\375\240\275r\314\007=\207a7\276\213\277\342=\251\235I\274D\367\026>\315V\310\274\331\310]\275j\027\t>\310\250\214\276\270\246H\276#\266\355;\'\272\266\276\322\307L\274\303\237{\276\347\374[\276\226\333\342;\210\212\005>\312\371\215=\253\221\277\275\251\004\371\275\2040\340;\346v\310;th\002\276\3660\036\274\233\203<>\221\037\243\275\035\214\220\276\373;9>\214O\237\274}\331\215=,\233\025\276L0\230=Z\356\235\275[\236f><\250^:\314\364W\276\334\377\302\275\243Qf\2755\274k=#\244u\275\225\344u=\313\331#\275@\221\305\274\245\265\273=v\017\310\275\304u9\275\221\361\346\275\347\031\203>\002\3217\275\350\257\210\274\027\273\312=\025\031\023\275\320t\206\273[~\265\273\226\0334>\320\250%=l\315<>B8\243=\260\t\334\274\357\210\017>\331\357\353\274\362\224x=\320\327)\275\301=P=\023\352Z\275\0003\033>8\371\007=2\036i>\023\177I\273\256\013\025\276\202L\323\274\364\353a\275\226\342\027\276\202\307\250=\300\224\266\275\032g\003<\247\334\213\2753\312\206\275\273\035j=\210\372@\275!\243\314\275\020\222D\275\330\366T\275\323\354\025>1h\251\275\212\033\004\276\025\256\214\276\302c\216\275m\3006;\262\313\305\275\231\027x\276\345\006\207\276=\260\255\276lZ\275=\221\264\030\276\025\334\037\275K!V\276r\244]>8\244\241=\004V\247<\223)A=\035h\214<t\342j=\235\035|<\'\262\325=\305\027\027\276\364\224\024=\031\032\251\274\233\342\271=\375(\243\275\236\3471=\301\375\352<\252\360\017\276\320\333\231<\322\232\013=\'f\007\276\316t\353=B\272x=\241\242\016\275\321<\306=\nqC\275y\013L\276\353\310U=#\237\003\276\364\354\377\275#\337\003\276C\362\260;\243\220\341\274\251\243\037\276\275~\347\274\357\256)\276\273\036\202=\272\016\347\275\336A>=\257\350\t>\321\223\234<_\240\230>%r\321\275\335\340e=F\234O>\332\242\313=V\267\001\276\221\221u\276\215\302\255\275\014z\030\276\232\306\234=\321C\037\276\344\346O\276\323\256!>\352+6>\356\016\205<\363)\001\276X\316q<\327\004\216=AD\037>\311\256\312\275\261\022\'\274\300\270\t>\002\241G=\263\024\r>\315\257\'<\271+\211=\003\305\337\274/\000 >H\2400\276\263\006\237<\224\331\311;\006\355}= q_\276R.\270=et\323\275\263\020G=\022\0242>/\2600=\242\334\301=\212$\007\276\305e\"\275\237?z\276\341\240\n=\231\253\036<\232\312!>\"S\'>\303\2513\275Ar\264\274\203\n\303\275\310\364\266\275\365Rz\276\256\215\326\274\010<\244\2742\250y\275\"B\214=\037E\034>\314\350\262\275\334\010\250=\334v\372\274\323\001 \276\353\177\220<\\\270\320<\200\360@>\n\350\326=\261>v\2752\024O\276\035\344!=Yd\347=\333\213\312=\230\243\337\275\303\325\362\275\212UF=\263Q\031\275\224\014\220=\271\005\353=\244/\360\274\022UA>\241\0131\276\204\002\246=\335E\260=G\3456\275j\342\276\275\225\363\335\275\245E\344<\350\221\234=z\210\210<5\010\301\275&~6\276\251g\317\272\351s\306=Mt\235\275\307\330\216\275Q\221\002>\030\323\t>`Z2\276^}x\275\206Fm\275A%~=w\265\275<X\024\003\276+\271\254=DX\241\275\235b\233\275\313\327\235\275\247\2240\276\237\031\216\274_s\203=t\n_\273\337\227\330\273\361e5=;\263\241>!f,=\254u^\276uq\261=EF\325\275\013\371\325\274\247\344\207=e\347C=\272\367}\274\253I2>V~\030\276\214\273\033\276\027]\027=90\376\275EG\330\275\233\004\003\275\326R]>`\020\235\275t\370#\276\336\252\376:=x\214\275\204F\246=\030\207\323\275ST\031\2756(B=\214\206\240\274z\351*=\371C\311\275\031\271d=\370\255\371\275\350o\205=\037\371M;`*j\276\336:T<)\256\321<\312\212^=O\235K\2763\365\342\274\312\366a\276\'bO\275\003U/\275>o\262\272~\256\277=\210\255\035>Q\342P\276\310\370\025\273\306-\034\276\006:\312\275\224\204`\275\374\005\271=\215\230F<\336\270\346=\274\363\322\273S\'\210>>\364\000\274\233\226l\275\246\367\367<M\353\232<M?>\275Eq\377=\322\324:=3}\356=n\306\262\276\024\367P\276\240\347\010\276\310:\356<{\262\275\274?j*\276/0\244=gO\344\275N1\241\275\325\376\\\276\302\273\334\275O]\032\276\351\2421\276\2255+>\325\241\021>U\256b=\311\r\331\2732\t\021>\224B\201;cf\241\273\3106Y\276t\210\027\275\375|\316\274\r<\234=Z\031E>2\363\024\276\327\267L>c\021\342:\275(\300<K\346\304=\354\247?\276fH6\275p\240\200>\235X\333=!+]\275:&Y\276\355\267\341\275\2515\313\275&\243<>\003)\231\275\303\367\255\275\026]\230>j\275\005=\312h\025\276\367\253\343\275\036\276\256\276\360\373\027=\024\254\245=\317rQ\274\350\344\224=6f\363\273\303\332\002\274C\376\214<\353\347\305\275(H\\>\314\0048\276+\005\362\273\004\262:\275\027\231T>\356\203\367\275\026c\023>\202A\340=\241x\211\2751v\246>\'\346\373\274\366\334.\275\305\346\030>\314.\023<?&a=\374\365\"=\014\'\277\274\361\261\215\276\225\002l>\036\374\006\276P\'I\276=:\211\276\0105\t\274L \363=\204,\205>\014\316\316=T\237@\276\205\014K<\375\354\253\275N\233O\276\326t\247>\245\001}=\236[\022\275\307\356\344=E\274\316<3\234\004=\233\1775\275\270}\200\276*\027\226=\234x\242>\034\334\010<\230\330\013\275\214\026\251>\336\010\215\275i}\243=\236\307\256=\323\255\213=\017\340\302>~j\257\275\014x\351<\306\262\222\275*V\237\275@\241\357\274\257\371\245\275\034o\002\275\227J\375=\234\366d\276\'\306\315<\255Z\376\2757\367\020=\362+V=L1L\276]2O\275\316\25669\205e\241>\271\000\266\275\210%\2179\r\347C>C\323\304\275\016sv\274\262l\330\275,8\231\275`\025\032>\t\233a\275B\346\225;\254\267;=\035\363\234=\027j:>\016S\273=\351\322\025\275\025^Z>\217s\317=\307\351\036\276\225\302\344=\361\362\223>TZ\274\275\343\274\231=\3726f=\366\261Z\275\260\301\370<\372t\211\275\314\373\017=\315F\271\275\274\352$\273G=\313=\205r\376=QtP>\366\244?=B\232w=\303\341==\233\273\022\276\305\016l=1\321\033\276\372Kk\274F\274m=3\353\306<>\002\n\276\002\024\355;\241\350 \275\215C\255\275\221\226=\276M\217\304<\245\313n=\242v\213=\224\261x\276\202\273\204<\333\364\023=\271Wc\275\004M\255\276\rm\227<\263\013:\275\2703\237\276\251\305\330=v\007\314\275\266\334\227;\227 P\276\312Ak=L\202\020;\245\217Q>\362l\227\275\336\220\343;\2519*=\241\305\246\275\023.\002>M+.>\n\360\037>P\361\270\275\212\330\333=\345\336f<\023\256\247\275\244\303\313\275&U\267=\360\240\200=3a\220\275\354z\327\275\352\257\346<\372\031\003\274\333I9\276\013\303\020\276\024\022U\275\217E\210\275\270&\245\275w#\332=\341)\352\275W@F=\006e >\265\264\275=\277\376\223=\036\031u\273\341\205\265\274x\332+\276\331\311\213\273\327\350\257=\244\214\257\275\re\017>\353\362\220\274\370\345\264\276\037}\236=xq\227:\372\271W\275\267u\244\275\211S\370=\244e-\276Gz\271\275\"\034\204\275\360\247Z\276\340*j\274\022wq\275\"\316L\275u\2634\276|\314\037\272\037\3638\273*zn\276\253S\343\275\023\206S\276\037\t\214\274\033\265T\275\356y\353\275\257\255B=\313\253\203\276\266\320\221>,\265\223=\n\277^=\032\007!>\357\326R>*ca;lD\265=\010k#>\362\"\223\275]\251\232=\004\223&=!\3315=\021\224y\275yC\034\275\326\231\374\275AUA=P\204d=\271\335\360;\031\231\276\275\272!\367\275\356\252\231\275\342PM>]\025\345=\222\366\014;y\351\237\276=;\223<P\221\210>\034X\272<H\344k>\250\251\357\275\317,%\275\233\001k=\337*W\2767\003\301\275?\251\004\276\001x`=%\366\237=\207ns\276\376)\252\275\341\0144=7Bh\275\276\333\031>\367*g=\240\3139\275U~\207>\"\034e>\244\252v\275C\247\321\275\332\001T\273\000\007X>&\247+>\037\357\222=h#X\275\236\013\037\276\252\333O\276\310\035\315\275\035q\374=\376/\214=\322\321}>p\235\277\275\20102\276\232\026~\276\301\'\r\276d\022\217\275*G\002>\035\317\n\276\351\376=>f\t\206\276E\262D>h>\031\276\322\263Y=\313\301I>_\354\227=\2618\004\276Z[\341<R\001\276\275\n\241\216=\211\243\301=h\273\205\276\355\252\204=\221\230M\276r\n\343=\261t\017\275a#\021>\"\2775>\376\212J>}\305\222=\226\032\336=\271\277\211>\213\302\234=\003Q\247=s\343\031\276\366\215\001\2761\032:\276[\311\242\275Y\200\225=\317\030\231\273\014\316(\275\276\257\371\276Y\337\246\275B\360\375\274X\205\225=Ep;> \026\004=W\250\310=\362h\255;\351\373\247=+/<\275$\207/\276\324@\221\276\033\326!>\343g\374\275t\244&\275d\310\253=\030\376}\276\300\277\265\275\300:\201\275\365\201\355\274\007\363j\274\367U\374=;\024\001>\005\312\003\275:\376\026<\226sv=1.{=jc\256<\236\203b>K\241\017>\234l\345\2736K\010=\240\365\202\274\202\0261=\016\271$>c\253\n\276\245y(\275\005#\t\275\206\241r\276\271\275\016=9\306\337\275\353\'{\275\204\373)\275V\367\257\273\367\n\340\275\'\325j\275}G3>X\306\010>n\n\025\276\023\323\021>9i\005>\315p\036=(\214I>\377(1>\316\244\235\275\370\371\233=\227\023\344=\231\204\216\275\313\305\030=\352\261|=\034\007=>\036\303c>\236\220 >\326(?\276\377\014w\275\364W\321<3J_>.wX\275Z\271\014<\242(\330\275\366\3365>\213~\237\2759bz=\260\273;=\334\372\262\275\320)\312<U\264\030\276\016\256\013\275\353a\271<\366:\325<\334x\342\275\003^\246\275;KF>;\014\005\275\324hn\275\373\257\204>]\352v\276\325\373\313<\240\307\222=\254\367\232=W\225\266\275\351\030\214\275g\357\337\275\346\361\326=m\313\'\275NT\265=jS\331\273\341\301\257<|\232\344=\225\274\352=\202(\320=QJ\251\275/\037E=g\374(\276\'\350\214=\001eh=\214F\010\276E\205\261=X\236\332\274v\2404>\341~I>\350\344(\276\nI\203\276\264\207\276\275\232\203\241\276`\337m=\317\033\265\276\233\203\022\276;l\021\276\003\203\376\275F\201\244\275U\231\317=n|Q=\030B\r>\355f\271\274Gl\010\275\346\261O\276\312\2779\275d\303\207=!#\205\275\004\216?\275~\323\371\275B\2656=@\362\376=\335\364{\275\372\024J>\22779\2749\"A=\320F\017\276AJ\215=\244^\247\275\265\315\201=/\225U<P\022\036\274\247D&>\274\236!=\234]}\274\243\\\010\276\001\234a>\356\357\n>?aP>\375\241\312\274x\271N\275\177\2109\276\337@\007>\323\3770\276^>\336;\226\205\244\275\364 \324\274A\240\320\275\327g+\275\026\245\204\276\3710\354\275\350\306\222\276\017\010\212\275P{\353<\016r\037<\362\030\320\2752\377\352\274\314\376l=\363\235\013\276~{\007\276\326\346-\276\373\254\235\275\216\364)>\006\352\006\276\260\030\242<\201\n\274=\240\347,\276Q\357\204=T\350<=\274\306\332\275\215\355@<\227RA\276x\270\213\275\t\252\260\276ZG\302\273\242\333l\273\320g!=Q\035\325=\332\206i>\205\267\222>\337\222?>sJ\316\274R\2708>\232\027\331=\351\227\304\275\256\226*>\251\247\222\276N\033F\276d\2255\276\216\017\212\273\324\251a\275\023\002\323\275L\202\373<:$\312=\320N\347=]Q\330\275\366\354R\276\t\3219\276\206\177\364=W\276\302\275\373\202\027\273\254v\212\276J\027\251\275\232\034\2059\2548 >X\331\206=@\237\321\275c\017\370<\206\274\267\2746\254\222\274\234B\330=\036\346\335\275\245\300\213=\001WY>\372\2476\276/i==\227\312\342\274%\302\231>\021\250m=1\306~\276g_\260\2753\367~=Y\n\250\273\027\177\256<\371\212\313\275\375\370\027\276\375;\032>\376w\202=\024\366/\276fy\257=\312S\217\275=\223\033\2762)\304\275%\211\276<\1773\014\274\257\316\300\273\026\256j\276\241(\234\275%\002&\276\\[k=\212\2356\276\264\221\254\274\224S\223\275\240B\357=(\254M>5\302\3428\312\355!\276}_\004=\023\002@=\332\301l\276\337`\016\276\222\342\024\275C\037\367\275*\237\014>\267\311\037>5O\327=)\217\371=Ee\344<\026\317\302\275\355:Z<\320\3074\276\376.\357\275n\013\265\272\311]\312<\250W\336=\301?\317;\260\354->u ;=\253\330}\274\307\205\256\275\307O\007\275;R\331\273\362r\206\274\246\232\221=Z\245l>J\305\305=\200\247\031>\233\200\346\274w\353\036\274s\257\030\275\1774\246\275e\323\321\275\013\354\210\275\323\177.>\362\252\005>\213\361\256\275\312\332\344=31\364<\355\350,\275\322\222\353\274i\354\372<Y\216\013\276\022\340\360=\241L\036=5\304\375\275\367\224\013\275:\252X=c\261;\276\307\3516=\212\200W=\345x\024\276\305D[\276\010\226Q=\350\366!>\026\010\344<\334\345\005>\315I\355\274\342\360q>\323I\013>Ylz<\311|\351<\216\356\216\274\002\005\003=3=\216>\2761\345\273\253\365\275\274~>\240\275%C*\276_\202^>\371=\336\272\310\344\004\273!\316A\276\334\246$>\002L\244\275F\340\307=t:\031=h\344D\275\271\347Q\276a\022\206\275\347\220 \275\260V\010>\r\273;=*b\335\275p\201\335\275\367\004\017\276\244\310\367=F\215\013\276\007%Q\276L\321w>i\300\207\276\312\250V>\006\312\271=\326\2269>\027jg\274c\313\204\275\266\262?\275\251\007L>\263Z\202\275\031\007h=[\237\010=I\322\"\2740\237\334\275\236<\017\274\205W\220\275\260\275\305<\314&4\276e\363\215\275\241Xi\275\371\357\262\274h\377\202\274\244\306\"\275f\200\324\275\363\267\020\274ME%\275X\233s>\342\337\300\275\335\\\035>\364f\214\276\330\025!\274i\275T\275{\237&\276g\\O\275\252\206\246\276^\212\003\276Z\360\020>\350N\241\276\252\2673=\312t\201=\205\014]\274w-\200=\265\365\036\273J\314!>1\224\317=,F6>\302\001\260\274\340=\266\274\177\206\243=:\026\356=\002\3457\275\334\325\360=\020G\232\273XW\226\275\211.G\275B\251/\276\371Ta\274\243\373n\276\n5\014>\\t\311\275_\3741\276H\032_\275\340T\253==\036\"\275!\246\224\275I\333\364\274\257\265N\276\335\350\374\275\345r\224\275uO\023>\343\262\344<E\212\217\276Q\231g\276\232@\270=\235\223\210\276W\325U\275\254\222l=8x(\276\374>+\276\023\252\200>\374\034\230\275\037\352)=[Q\014\276q\321C\276E\033&\275\262\373Q\276\222\214\221>\250\321\220\276x\256\332\275R/\364\275\234D\301\274\276\276R\274f]\201>O\220\301\275\340\307V=m\003\206\274\272\221o\275#\'\220>I\257\262\275\004\002\313\275\367M\211<\030\032l\275\204\314l\276\177a\026\276\272\242Q\276\333:\227<\003O?>\230\236\233\275n]F>\267\302\310\274\023\024\243=\340\313I=Z\227\202\275\335\231\335\275n\375\223=j\036\016>\261j\330=\261?2\274\221\276\007\276\362\330-=\304\271O\276R\360\243=I\235m<_\\\362;w\014\227\275\003;\301<l:\320\2750\277\240\275\tHR\276\204N\334<B`\027\276)r{\275l>\341=\200\023\343=\325\245\001\276\363/\230>G<\367\274j\357\232\275&\357\023=\323\274S<\275b\255<\226}M<\354\252A>A\251\215\2765/\004\276O\300\302=\226O\224\276k\313\373=q\264\024\276\221\310r\275V/\010>\267\345[=\"@\027\276]E\360=\254\333\204>\212\256\232\276\333,\263=Zx\007\276I\347\t\276e\215q\274\007\274\304\274\253\233\334=\\\025\261\275\257\237,\2753]\214=\026\266g>Y\263\277\275\200\341\321\2757\274\234<\032\236\257\274tcs\276\2024\222\275\234<\3419%\346i\274\237O\207\275\230TB\276\r\257\003>d&\306=\241+]\276`2\335=&Y\222=os\364\275\3019\336=\203\372<\276\275\017\216\276V\257&\275\016\263\316\275\200\032W\275\321\224\031<\366\235\355=\264\002$\276\311\031\252\275\251k\222=\256fs\276\200\373\314\275O\r\014=\326\317\217\275\250\037t\275h\237\003\275\246\254\013\276\342\334\336<\373\310\255=?<\270\275`\000O>\340~\335\275L~J>\367w\353=\213\305\366\275\235\376o\276t\271%<\315\350\t?\312\346\033\276\326T\246\275c\316\213\275\023H\316=\326r\016\275\373s\"\274-\214_\275\352\200->\374PT\276oG\263\272\000\337\036\276j.O=\312\034\326\275\']\344=\271Cf\276\256C\036>r\255u=\2005\t=\2644\t\275\352\263\331\275\301\363 =^8^\273\275\350&\276\001I\023>\273\017+=\363:\254=\361\307 \2753B\254=+\246\337=\345>$\276\213E\312\274\354\006\2578\032\367\374\275&\\n=\221|\034\276ib\307<\3562s\275)8\244\276(\2117\275\365\t\234=M\270\205\275\266\n\017>\337\037G\275?p\t>C\236e>\355B3>%\342\250=\345\364\217=\007 \317;\366h\013>\r\244c=\'a\275\275<\270\334=\243}N=\277\302\n=\344\3637>\316>\343=\013\231\005>\3568\315;\311\351r\276b\021\357=\235\276\201>\230\0236>+\330\004\275\177\3366:0{g;`q >\n\026\373=\032\210&\275\333\326\033=&\357\341<\031\336\316=N\305\256\274\234\036K\275-bm=\255\017\213;Y\232\022\2767\346{=\250\235\021>\014!T\276\364\006U\275\377E\305=\n^\277=\327\373\350=.\2538>s\254\233>\221\2140\276\001\202\322\275\"\312\036>\356\017\030\276\t\000\272\275\371/\216>\224\013\002<\2756s<1\264\301<\036^\001\274\231\337\310=\363\346\302=7\303z>\252\311\'>\331\303\'\276E\212\206\273C\000\234\2740\307\013=\324\260\276<(\003\002\276m\256\213=\027\221\224\275\252K\220\274\007\177\227=\022\'\"\276\305\364\033\276c%\306=\005\021v=b\352\272=\335K\314\275\003\222[\275\311\234l=\tN\001>\225?\022>\227Y\217=j\274\325=\275\005\374<(\256y=\241\326Z\276i\264\302=X\037u\275\274\310Q=n9[<\234\371|>\263c\330\275\336\261\272\274\007!\344\275,\241\340\275\271\322\014=eo\373\275v\030,>/\370\221\275\254\'\300\273\375\014\032=\310\303A\276h6\030>\372\330\200\275\277p(\276\366jx\274Ym;>\206D\212= \002\312\273\327\207\207\276O\257\024\276\216\007\222=\213.\341\275\253O\377=\331\220\025\274\261fJ\276\364\366\305=\212nR\276:\252\020>\'\337\013\275$G\225>\007\246\274=\320\247\005>\033\016\324\2755o\004>\213\226\241=\340\333>\274g\310\332\275\351\036\317=\371\302\310\274\330;\253<\023\245.\275|\n\304\274^\220j=l23\276\340{\375=:t\354\275N\321\204\275<>\264\275\366:\303;\266\307\270\275\334$\034\276\243\177y\275\002\004\354=4\3070\2755\322\276;\301\177g\276\373_\210=\245>h\2766\337\305=\326\036\347=\241|\243=\301\354\274\274\003\250\014=!\235i=\250\0047\275u(\207\275\366\346p=\300\314\231>\370;\237\275\341\342T\275\271\377\321=\347o%\276\260\217\300\274i\320\'>22:\276\307\r\213\276\332\301\246:\371\'\037\276\017\201w\2743\303\000\276z5\236\276\255.\000\276`\363\225=\036A&\276\032\370\314\273\276\230t=x\305\237<a0;=\332/b\276~\223d\276\266\246\256\275\272\330\276\274\220\\\361=\370\016\021\276\2009\353=>\314\033;\363\003B\276\235Di\276c\327\375\275\271U\232=\265\251\373<\210\034\302\275\177\023\202=\333\225E=\377\257\225\275it\271=\007\303(>\014,\320\275\250\211\224\275\320e\024\276\333[\253<\217\256o>\203\254\356=\256#>>\251\270\205:\357G\022>\317\342\020\276\377\226\264\275TB\260\275\323L&\276\231\005\322=\216\350}>=da=g\344\225<\215!}>_\2755\276\242\240\200=\007\202\017>\236\366\002\275x\016(\276\022\221\266=\364\036s=\226\341\345<\036,\300<ZF\202>\324\322\350\274\270\t\271\275\311\357\244\275\335\017X\274\204\004\234\275+\203z>u\200Y\274*C[><x\370\275~6@\276~j\305=\275e\006\276\'\264\377\275\273\263\276=\337\024\275=\003\210\325\275\233a\215=\375\334Z\275l\332\326\274\200%\304\275\031\223\002\275\344\220\346==\315*>\0016-\276\356[&=\314\302\321\275\002\353c;#\3050\276V\277\363=U\224\234\274\224\034x>\340\023\370\275\234.#=\337\033\373\273}<\t>+l@\274\263\265\273\275,\360\337=\201\260\200>\243ib>z:H=\263\201\034\275&\027\214>\320\020\360\275w\265E\276\343\021K>L=\242=\357L\t\275\336\267\204\276\203]\267;\356\271\234\274}\220J;\246G\025\2766Q4\274\027\r==\205\342\002=\273\020-\275\006\330v>\277[\257<^\202\217\274d\243\001>\035\267\346\275\213\310\224=#\nV<\372\320\265=f~\320\275z\326\256=\212]\331=\244]K=s \002\275em\337\275\322n\035\275r\256\243<\210\373\020\276\353\322\001>\332\034\212>2\3359\275\304o\233\276\374\231\034\276\343^\037=Fw^>.\272\344\275\224ck=\220\001\014\275\324\312.\276\205E\r>\320\017\025\2767g\365<\253\346\311\275c\316\316=\251<\202\275\246\254\350=ga%=I\234\256=\302[\222\275%\322$=\274\277\370=~7\036\275\301\251\216\275\225\361\371\2746\311\211=\372W\262\274\322\033\224>g-\372\275\240\020\237\275\234\270E\275\350\221\217=\022\261)\273v\365#\276\235e\347=Kh|\275\255~\207=\374\314\210<\247xy\275J,d\2749\223\335<\354\010<\276\035\365\307\272t\024\031\275\272\'l<E\371r\276\364\027\362\275,vn>\205\024U>\023\271v=\n`<\274\3627\210=C\023\367\272w\257h\276c$\304;R\214\247:\341\300\355\275JG\237=\353[$\276\333\367a>\377\234\037>I(\222\275\3466\265>\305\326\246=\270\263\217=\306\346\005>\323\266Z>\252\336\242<U\016h\275\341\225\364=\261\361V\275!o%\276Tj\005>\255nE=*\363\217\275\335\225x>\212\022\251\2746\227T\274\243\305\331=\236\024\354=p@\244\275\267\265\254=\266\203\235\275<\354\363=\327\177\027\275\234\006.=Y$|\275yL\326=p0\002<\214\276K=+\000\206=\263\310D\275~\243\371\275\007\034\264\276I\t\004>6\013\016\276\304I\210\275s\261\203\275P\004\006>\2206\345<\2454\316=#\257\230<7_\324\273\031\374\020=\311\020\253=\267o\374=3\247\203=;*H>\375\262!<\373\200+<\2651a\2761\346\350\275\203\346!<\334\004\352\275\363\037.>\017\032\265=\240\200\235<\304pF>7h\200=\t\344G=E\036p\273\233\364/>\357)\261=\333\367\307\274\324\325\036\272D\033\333<\200\325\034>bi\217\275r\000p<\350\355\337=n\247\327=\214\354\346\275\327\237#\276\217B\034>\010\236W\275\362\303;\275\014\275\347;\212\272\260\275\204\366\n>\223z>=-\025\004\276n\006\330\274\271-\376=\032j-\275\'\"\310\275\206\210%<\331\033\210<\342\200\006\276\312w\221=\000\277\037>|>6\275\246a\217\275.n\304=\246v\260=O\214\316\273\217w\205<h\211q\273\212\373\016\274\214\305\232=\013\004\016=\371,L\276\246\330\007<\227\250\275<\002\215V\276\263\350t\276u`\347\275y/<>\004@\t=\0021\252\275\032\202\n\276\254\346Z\276\025\025\021\274|I8\276T\243\227\272\016\352\266\275\274E\247\275]\001\"=\001m\274=\020\200\255<\304\367\226<\030\350\345\274\306\020\275\275\302-J\276W\227\023\276\002I\022<\020\343\003\275\335\333\270<\236\276\350\275x\'\247=2\205\035>\233J\023>\350\254P<Q\251\320\275$\232\223=\223\035\200>\025y\206\276o\333z=\037\246i\275\230P\310=\004\267\200\275\257M\213\275\315\360\000\276\245h\n\276\362\020a=\235\032\001>\201\262\321<C\336\236\272\367\317L\275\256J\212=\016\036$<\225\255\\=\2039\327=\337\355\312<\211\230\210\276J\304\223\2745t\236\275\313H\010>\371\377\">\361\310\204\275\373O\016\275\366\021\252\273\021S\347<Sl\005<GP\364\274.\021\307=\345\257\177=\326\266\037\274e%\255\275\331G5;\275\200\004\275\235\214\244=c19=\276\237\365\274\302g\223\274\224\350\331=;\356\304\275\r!\347=\036s\370=\256-B>;b\031\276,\213>>a\002\213>\353\231\237;\"C\324=<I\370\275\327@+>Fi\232;\205\374\217\275\305xX>v\307\342\274\264`\027\276\033\013\202=\327\254\'=\353\314j\275;\356\264<\303\330\206\274\346H\034>\274\234w;M@\315=}\036\335=R3\371=6\231+\276\372\326e>n\004\031=\374\370\000\276v f\275\213\367\254\275\301\030\300=,k\023\275J_\001\275\277Zp>z\375\"\276t\217\004\276C\021\214< p\272\275\230^N>\242-W=Bt>\276(rk>o\242-=3w.>r\261\251=|\355\262=\"T\231=E_\010>\244\334\034=vDi=\"\224W>!\0018=\3342\322<\356\346%=\377\315\031=0[0>\225\002\204=\367\240\364\275\036\200;\276\340AL=<9\205>.c\014>[\333\006\275S\233a\276\005&\324=\237\370\365=\n\364\315\275\215\341A=\377\364\017\276\252,\330=q\034\022\276JM\224\274G\033W>\n\257\270<\240J[>\334\206b\275\262\363\270\275\341\321S\276|2\203>Yj1=\345\265\003>`j\305=\345\254I\275\024\222\203>\221\267\362<;z\264<\310k?\276(W\321\274Z\273\201=\335\306,=\346\330\234\275\017\302\330\274\020\242\351=\201C\"\276s\373\224=\300{\007\275\277~z<n\207;>\335H\373\2759$\215\276\335\013m=\243\307>\275\214\235\354\275\006\005L\276\220\2539>\006\224\356\274\017>\347\275\2154\301\274i\206A<S&\031\276\373\313}\275\232\231\031=Xp(\276\006\306\255<^\322\302\275\270\307\264=\304\232\'\276y\207\017>C\3516>\331\3337\276SZ[>\303AT\275\372\014}= IK>\300\007\317\273L\222\006=\021\004\347\275\230\274\227=\376\213,>;:\347;\324F\024\275\000\202,\276\222\361\350=+\216\357\275\241j1\2756;\021>h\202G:\353\014)=Y\245\007\276\351\023\276\274!R*<\221\333\n\274?&\333=\234\336\274=\016P\234\275Q?\323\274\330s\332\275\334e|=\2756\344=\006\200\025>\254.\243\275Rs&\274\334\212\376\275\006\273D>\273\"\"\274\3177K\276GT\255=v\303\346\272a\255{=N\372\021\276\366V\341=\022\215\021\276V\006l>,\342\241=\030\314\001=\220\202\276=\'\201\231\276\303O!=Z\312\340=H\2178=\216i\273\275\035\203\354\274\t\376\261<\245\304G\275\216\327$\275R\201\251=O\006\376<\020d\372=!hQ\273\275\270\017\276V\364\223\275.|\332=\317\260\330=\341\213G\276\033\017z\274\346\201\232\275\007\314\265<\306p\354=`[\020\276R\303\035\276\330\005I\275l`\213=;q\222\274\262k\000\276qI\'>H\251\275>1d\202\275\226?=>-\227\205\276\276\023\371\274A\310\310=/\200\235\276hK\216\276m\215\'\276\375\255\345=\306\276\307\2753\232\317=\232\026\263\275\377\037\007>\200\254G\276\306\354g\276\242\205\233=/\272\330=\350\220j=\366}>\275>\377==\244\016\000>uA\021>\237\366\t= \330\217\276\013\323X>7N\001\276(\001\t\2767*\027=\344\273\353=X!\207\276z|\001>\262F\025\276\332\320\032\275\215\230\260;\320\031\316<\277\037\315\275\271\003\004\274P~$;\366\347&=\224\200\273<\250\236\353\275c.>\276\324;\232\274\3555S>i\263\213=\355\317\343;!\\\211\276\376\365\224>Dj\332=\007[e\276B\225\362=1/6=\2707\215\275\207\0074>\371O\323=\305\261\314<S\252\303\275\302\233d\276\301*\367\275\322\023\n>X\020\300\275\307\331p<\251\366\250=\'0\311=\201w\031>\277\326,\274\322\317\002=\301\321Z\274l\316#\275\255\372\207\275\237F-=OP\261\276\302`\005=\216Z\313=4\214\325<K\311\214=mS#=uQ=>;H\350=\036\031\217;e\204\211\2759,\212\275\310\"/\275\rb6\275\033\034,;\034Ud\275\317X\225\275q\264e\276\003\357\027>RmL\275\277\246\212\275]\3347\276j\351\030>2\306\310\274?\335\314\274\223\345\005\276^\256H\276\360\t\345\275\340\336\200\276\215s\244<\003>\253=[\205\211\275\332\244=>j\023\313=\240\373\201\276\023\204==$\276\237\275\021\316\224\275\376\003\005:G\r\260=\351\277\r>\311l\013>\222\2063\275h\314\353\275\231\344H\275\320\362\313<Y`\025\275\357\345\241\275\357\356\345\274\355\345v=\323H\206\274c\325\306=CD\246\275\331<\313=5\370\350=rF\"\275\357!\251\275V\0322\274~\031.>\322\235,\276\373\274\334\275\230\332<\276\276Y =Y\346+>0\017\204=\220@\217\275\361\211\375=\312\253\362\274\256\230+=\033?Z\276\310\271}\276\022\271\002>\262249\200\206\244=\230|\033\276\202!\242=>E\013=\200\246\275=u\311\376=\262\325,>{q\214>\261\253C\274#\211\320\275,\250\002\272\267\001s\274\315[Y\275\366\305 \275}c\337\275W\267}>W+\253\2757\251\277\275\364Q\003=(\335j\275\314p\262\2755K\036>\333\367\222\275\2551\371=Eb\316<b \364\275<$\311=\036\231\340=\377\" \275a\226\235\275\233\264\357=\3701Y=\276\303\352\275\217B\022>M\275\360<\350GN\276\244\n\233\275\365\217\"\276\'\322}\275{\355/\275\232\355\006\276Cb\007>a\237\237\274^\251V\276&L\022>QgQ>\035\372\346\275\026\231\222=\277\244\305;\371\377\"\275t\232\202\275E@\013\276\000\262G=s\211\307<]\302\237\275\256\231\376=T\214\"\274\231\020\317=\245?\347=\362\357#:\270\337E>\313\254\204\275G\202`\276\313\310\034\276J\227\022\276\256\355i<\362ze\276)U(\276\321E\242=C\250\'\276J\325\002\275\330\370\351\275`\221\034\275d@\277=&\026\032\276\352\315$>i\215\363=\036I\232\275\211\246\266=\021<B\276\033\306\243\275\001\317L\273\375A3>G\255->\235%E>-\002\024>\361\220\312;_\223\237\276L\000\227=\271^~\275\310\226\324\275!\361\000\275\251T\"\274hyl\275\000\222q=g\361<=\223\317\236\276\257vX>\276\032\032\276\352\362\370=\344\373\025>\304\354\007>\355\030\253>O\306\316\273\252\216\343=\260\261\343\275\\\013\001\276\207\304\004\276\3275\302=\313\254\371\273\310^\222=b= \276u\342\022>\310\356\340\275\256\033\215\275\217\235\361=\027Y6>|\225\307\275\314\321\234=mW0\276oC\242\274-\250\177\275\261\317Y=\377\037\256\275\375.?>\324KN>\357\026:>\201\345\214=1\313\202>\252\244\347\274\247Q\331<\036?\342\274mh\030\276\r\276\033\276L\240\234\275\324\025\'>\214gL=j<\t\276\362Z\303=]\247\001>\332{\206\275\273\245\343=\253\223\206\275\354l!>J\360\205\275CL\232\275\311K\267\274\215\246\024\276\263\\?>%iJ>Qs\201>e\221B\276\224\312\327;\257\036\331\275\316\354;>N9\226=\316\213j\275\267\030,<\206\251E=]\232\004\276\240\301\216=\214u\017=\267\357\203\275q\030\010\276\253Uk<\016\007e\276\252O\321\274\266\372\251\275\026\2172\276Q\223*>\203\200\005<\365i%>\302\260\273=\335\256\256\275z\314\221>\242\202\231;\337\365\201\275\336<U=\230\177\351\274\372{\026\276\036/Z\276\313t\333\274\336$\257=x\257\345<\357a:>\271\331\\=K\017\007:\255\202\372\275\264\277\r\275\374i\363=\333V\205\275q\241#=<\020\323\275\005\025\330=\373\027\242\276\334\005\235=\016F7\2767O\010\275\313f\204=\264M\306\275\244 \231=>\177\034\275\366\213\237<\023\366\243\275\244\372G>D\212\250<`\246+\274!\202\373<b\276\340=\322\206\204=\025-+\276\315\372\321<5s]\274\272\205{>\322\276 \275\244!\367=%\2556\276\373,\324\273\335L\332\275\343s\330=\274\212\024\276\233\373\255\274\032V\203\272M\023\026>-|K\275\3530\206=\245\313h\276\025\033v9qx\233\276\\\027\243=\250\3118\276\210X\263\275O\360\251\275`\033\221\274\261\037\221=\260F\233>\"\244\312\275p\355=>\246\033%\275>\030m\275\211y\r=\333\363\275=\035\233->\205 y\276\230Q\237<&\362t<\026&\306<\215\214\031>\314\335\020=\320f\324\274\206M4\2762B2>\025\320u\275Q\244\200\276\013\341r\276\010\220\314;\267\340\245\275F\2605=,\\9\275\006\311H\275\316\375s;.\035\372=\314\317v=R\203\246\274\355{\331\275\277\355|\276\327\301(\275vqR\276\016\\\276=\177\021\006>\260\266\007\276\224\023+>n\254\260>y\361_>l\236\317\273\273\300V\2753\030\214\275&\312<\276\022\253\256\275\267\352\266\275\313Ja=\264D\272=\323\362D\275\261\337\243>\'\215%=\217V\214<N\301\240\2751\213\351=[\261\205\275\375e\251\274;\374&>\031\357\227\275H\024\013\274hxw>\256^M>MrP\275R\037\350\273\351(\203=qtc=\233+\037\275\236D.=\371\251z<\370Z\004\275\243.\223<D8\021\2751\010\237\275jC\250\275\212f\214=A\361T=v\226\3458\"\305\362\275\332\354a=Ao0=\277\333\337\274\247\264\261=-}\306\275\341d\035>\361\341\215=z\304:\276\265\372\023>*\212f\276fZo={\177s\275\226\026U\276\277.\022\276;m\326\275o\2541=>\202t\276\300\347\244=\r\361(<y\224\350=#\n\245<\247o{\275\035\256W=\235\007\357=\222dH\275=\302\272\274\244\324\373\275\214\333\242\274K%\t\275KQ\230;\262\024\020\276c\026\204\272\004!\304=F\000\214\276\317\333\207<\nf\331;\356\314@>T4C\276\013L\221<\nO\347\273p\276\336\2758 \276\274*j$>\254\253\\\275\023]\227=\214_\020>\002\335\025=\002\257Z\276\250\006&\276\261D\032=h^%\276\304CV\275\353\317\277;\013\214\334\274\332\257\206\276\372\247\265\275C\2518\274\317\245A\276\240nD=\347\276\037>\304\035\272=\260c\004\2765&\020>7\303\356=\024\207K\275\267j\243=\334\0045\2761\211\r\275w\227\023\276#\027\222\275\332\366 >\347!\037\276\t\035\361\275]\354\247\275v\347\237<\203\235\027\276\365_\233<\372\276\377=\266e5>\363.\372\275\231\325\307\275\005\221v\274\267?Q=\222\312\205;\340\222\002\2753k\247\274\316 8>\317&;\275F\313Y>v\036\211>\007\205\237\275|S\275\275\242\360\'>a\235\337\275\361\216\037>ji\253\275\323\007&\276\372c|>vn\300\275-X\033>@g\026>\013\265\305= db\275%F\003>;Z\376;\313W\335=\340T\032>;\333\216\275p\371\026>\255\374\301\275\032\367\014=\277\237\226\275h^\031\275K\301H>\264\330\021\276\360\3170\273|v\271\275\327\205\223=T\330v:\2261\027>\240\311\036=\273\241\236\276\227D\033>]q1=d\307\236=\253<\366\273\336g\224\274H\306\024>c \004<\372\274\326\275\024\372\346\273\261q<\276EX\036>l\310\\>\214\3361\274\327\310\'=zV_\276\005l\317=B\233\317\275/\021\"=\212o\000\276\326\261v>e\016\022=\244\316\260=5sZ;\200\227\252=|d_=\036\214`\275+\227\331\275\3059\367\274\"\223(=[\206\004>\034\261x=\025\3029>\372\216\232<\222M\321\273\205\325a\275\257\315\247=\017[\346\275\241\007J=\314\006o=\003\303n\275m\303\261=\263\241\035>\372\352\023>\201\362S\274\300\374\365=I\374\300\275\307\005\202=\202\327\036>.L\352\275\357\332\335;\233\304\352\275\375\3228\275\267x\036>\232\217c\274Q!\272=\000*I=?=G\275\244\023\177=\372\021\214=\204\242L\276\177\266l=\322\013\307=\232\177\013\276[`\336\275\353*5\2762\177\004>=\351\357\275\324\336\235<\323X):\257`\373\275\031\206R=\321\207W>-<\031\276\324\026_=\360\346\301\275\0375\210\276\363\002\027>\033]5\275\tH\212\274\347+\200\274*\232\005\276!\273\n>\030\270=>\023\"\207\276\361:\023>\262\272\345=)\3500\273n8\223\274\214y >(k\327=\342w\037=\235\035\313\275\240\356o>\033\354\200\275@\3252\276\264\235#\276\243\231]\275\361\220\354\274\361\2332\276\262\326\035\276\000\022\310\274\025\032\246=\333\204\017=\243\314l<\335\270\252>e\211\335=\236\251\014<\253\316\251\275/\0377>\014\225\007\274\275\340Y>s\314\026>\357\3332\276\017=\004\276\201\336d\275\210\243\353<\344\305t\275\037\2113=_\321\323\275$\357\217\275\1771/\275\305\373\300\2756\024~<\025\177\241<\310\003;>\372\033^\275\262{\305=\177\342\020=\245Zx\276\337O\301<9\264\363=k\006\237=O\342\210\276\0249\317=\365&#\275\375\023\t=\231o\256<\376\3737\275\245\367|\273\203\\B=\367\365U>\t`\324\273\373$\336\274\342{\310\275x\235\007\276qPd\274\305\035\212;\243\031\230\275\241]\256\275a\332\022\275\320t\027>\323s[>\255\306\324=l\367\037>\n$X\276\316\233\322=\256\245\333\275\214\025\243\275{\321k>\233}\270\275\243s-=\024V\323\275\031\035\031\276\337\027`\276*a\001>\267\240|=\261\335\003\276\255\343\330\274\035TK=\367\007\332\274\260\370\326<7\251\251=\233\024\n>/O\363\274@\254\330\275g\257\006\276Q\213W\275C\225\277\275\2477?\275\024\216\r>*\277\200\275\273\227F=\357)[=\325l\315\275\324\262\216\275\361\343\242\275%\267\n\276C\013g=Y\3754=\005\235\203\273\340\357)\276\224E\241\274@\236\274\273\221yB\275\\\327\245=U)\225=\330\313\004>\3605\207\276\263\244=>]R6\276\021\230\345\275S\252\341<JF\016>\365\210n>\274\t.<\202\020\037=m\257\217\276\307#g=(\213=<U\024+=4\356q<Q\"@\2757\215\033>\273P\t=\317\310\226>(\321\223>\345\231\317\274\240\347\004=9X\324=D\036\200>m\371\215\275\026\364f>\354g\376\275\321O\236\273\347\247\242\275\025i\356=?=\375;X\024\353=\000\303\235=\232\2430\276\004gk\276:\317\031=\370\301\350\275q\367\330\273\347R\014\276\034\016#=\253kC=\000\035K>\220\255\036\276\001\035\226=\354\305E\2752\210\t<\345? \276u\213/=\273<\007\272\204\037\367\275\245K:\2755\007\016\276i\211->4S\361;#\337\220\274\201-\">\027\223X\275\301\371q>\032\310\214<\030\241\027>\345Ko>x*2\2765\373\241\2741\221\322\275j\335O\275I\266\307\273%f\n\275\366\3065\276\001\230K=\200\273\232\2743\2162\274:\010\207\2751\351\351\275s\366\225=\217\207\237\275\274-S>\377\261\320\275\212\270\373\274\305\035\335\274j\205\377\275\275(\304\275\335\370p\275\347\010\353\274\2365V=\r\232\321\275vN,\276\013um<\355^\013\275\311-\230\275\376\211\235\274\027\351\t\275\020\243|\275Mn\002\276>\316\215\275\031=\023>\013\235\001\276pOu\276:\033\354<[\027\264\275\271;\267=\362o\032=\326\225(\276\202\227\304\275\027\271Z=K<\337\274\227\253e=?\246\212=\266\354K=\r\345z\275A\364\205=\251\272\223\275r\335\350\274\241\006\252=;\331\311\275|\005B<8\014\206\276q\377\014\276\313\200,\275Pp\325\275\236H\227\274~\331\005>\257\213\352\274;\261@=\316\035\200=\247&\031\276h\r\236=\016y\241<u\321\301=i\260\315<-\2315\276\341\023\204\272\177f\314\275\236\004\334=\202\250I\275,\275#>\327\200K\276\327j\036>P\236\314\275\202\232\003\276\212\224\001>6R\204><\301R\273\276Y(>\0068\266=,\001\354\275R\374[\276\263\"(<uT\344=\266R\017>\022>\032>Nq.=/\375/\275\031\2445\275b\010\213==/\006\276\024z)>\231)\317\275\003%K=\205\275\204<\372\247\030\276\257\001\230\276\377\\\375\275J\232\0139a7\006\274:\003\336<\251\026\005> +;\274\301[\314\275\017\327J\276s\0003=~Z\020=1\201\204\275\225[\374=#\220\265\275\254\326\241\275\221l(>\364\343=\275\036-\370=h\365P\275R\275\265=,*|=\re\277\275$\222\315\275;e\020>\350\374\376\275~X&\275\033}\307;\274];\276C\257E\276\353\006\234=\301\230\020>&\\\275=\223X\315\275\245\035_\276\247\202_=s9^>\301\341\227\275\2433u\275\303J\025=\2311\342\273i\\\251\274\316\035\355\275\272;\210\274X\202?\276.f\357<PQ!>w\033:=\331+\366:\002nP=\250\333e\276\301M\031\276vy\257\275\222\363\000<!\240\216=\000\327\211=\201\001\361=\035\345<\275G\212\021>\002\277\032\276C\033B\276\211\247\232\274\310~\263=\363\032\331<3J@\275\275\245\307=\347X\363\275p\3074\276\352\327R\276 \315k<\010h\n\274\341O\241=\227\3177\276\333\345\034>\343\340\n=\tC\303\275\3265\321\275\014\2550\274\232\375\335\275\026\242)\274\304r\305=\352\221\006=\033\237\236=\227O(\2768`8>\306\\^>\271\007\033\276\362\304\351\275\265\353c\275\324\"\305=R\203,>\024\207\225=\3741b>;\207P\273\020x`>I\364\010\275\000\227k=\301\266\001=\330\3157\275dg\002>\206\331H\276<\216\031=\2447\256\275\356\203K\276\240\023`\276|P$\276\217yg=\326\320\260<\241v\335\273q\266 \275\024\216L\276\262S\346=\221\315_\274\363\223[\275\033\315\337=\245\264\222>\237\270\177\276\n;\217>t\215\024\275\314\251\211>FI9=\343\205\000\275y\366\247\276*\373\226\275\020\300\365\275\276G\236\275\007\337q\275\221\000\303\275\236\224\365\275u\357\211\274\217\225S>D5\275=\350\351\251\273V\353\366\274\236p\030>\315\035\007\276\335\303\216\275\250\021\'=\241\325\334=d6\257>\301\265^\275Uz@\274\264,\350<\326M\247=\263\306\377=Y\341\330=\204\233\021=yF\n\274\\\024\335\274\243\212\000=\231Xf\275e\341\200>\026c\276=\250\2312\275\315\375\233\276x\320]=\r\237Z\276{\202\240\275\242O\n>\227U\243\275\260\010\026=s9\240\275ZP\205\274&\215\r>\315\202\372\275\035^\271<U\3544>\274\'o=\377\303\007>\002ta>xo\306:\'\324\325\274\215*\307<|\236\372\275a0\310<\212\007\232=\265\210@>3\263N\275PD\035>\366\310\353\275\3078\027\276E\nN\275X\016\325\276\032\302\341<\214\2251\275\021\216\345\2744G\221>\345\253\004<\034\361\226\275T\302\276\275\360\364\273\274w\311\335\275f\273|\275O\003\032\2766\3473\276F\326\370\275b\273:\276s\033\026\276\352\312y\275\030\236\204\274\301\326$\276\216G\013=\275\0073\275\337\256n;\301\220\'=\356\234/=\316?\026=\331\302\352\273l\3154=\2363/<\272\230#>\"\010$\274\025\234\206;\274!\033\276\227\351\311\275\001\205\343\275\245I\305\275u\326-\275U0\312=s\rQ>\242C\374\275/\310p\274\341\263N\276\330M\013=\tLi=d\261h\274\206Y\347=\236\3341=\340F\013<t\242C=\344\220!\275\302\357#>\'\305\">\234\241\255=\225\364\024\275\271\036\337\275\033\004\261\275\321\3677>\367\226\020>v\301[=9\332\265\274\326^F\275\205U\242=\032\225\030\276\227\203\203\276~\035\241=>@\014\275\336Y\226\275\262E\231=\230\201\303=\204\373\270\275\213\374\262=\206U\r>\361\346t>\201\333\207\275\204\230\210\275\254|\233>\2577\333\276\323N\312\275\014X\246;C\261\350\275\266\373\375=\207m\216=\024\275\277\275\351\177\372\275\263\326p\275\254\265z>\242g<\275\213\226\346=\255\314\317=+\342\334=\237\035\332=\276\374e\276o\301\037\275\216\352\364;\004T\017\276\247\267\005>\237v\234\275\307\263\213\276\006\211\003>\035\234\353\275\"^3>\3155\314\275x!\241<E\221\217\274\330\037\260\275\323\204\322=\330\320\350\275%\306\027>\204\356\217\275_\350\317=85\242\275\231\217P>\273p\316=\013\207\'>\022\275e>1P\177=^\315u\276\002\243\272=x\026\213\276n3\341=\300\034\017=\254\232\241=\332\341\306=\340\257\017>\026\224j\276\206\315\217\276@H\257;|\020\201<_h\240\275\367\310.\276\216[3=\325\317\246\275\341\212\264=\2615V\275\036u\350=\364,\214<\364\354\231=p\310\037>\266F\r\276\243\217\272<hVZ>\200\347l\274=\024\202>\001G\353\275\216\2112\276\211\273\265\275]=J<\2678\271\275\251\"\244<$u\204<\001,9>\232\342;>\237>\211\274\313Y\353\275R\226\272<\017\316\354=\002\275\344\276\\\341\231=\026\002\024\275-\271\250\275&*\234=/\362\331=\026*\023=\337\016\311\275\220\232g\274T\020\222=G\n\220>\244\353\244;\311i\330=`V\253=\000\223\220=\362j\325\273\323\3511>\366|\323<YZ\336\275\355(\204=\227\355I\275~\212C=\313\300M>E\352,\275(p\206\276\233\254\312\275\235@\334<w\243\032\276\220\366\005>Q\340\275=,\215*>:\207E>\037?\347=\262\320\215;\347\003\256\275\200\300\273\275\002D~>\322\372\365\275\200\227R\275\031\242\326\274\"\305/\275\205U\231\275\333e\230\274\032\325\306\274\240Ze\275>A\213=6\366\312<\2642p=\306>;>{O0>\321\327\277\274\261)\207>\256>\226=x\340O\275LEM\276\202H\344=\246\357\272\275\320\322=\275f\356 >(\271\246=\324\213\212>\263\025\'\276]O\374\275\372N\302<\306\366\234=\352\237\206\2764\371\247=\363\204\251\275\017\'r>.\nG\276\321\235\305\272\212c\260\274\322\363\242\273\370Q,>\'\223\242=Wr\205>b\210\202>@iZ\275\021\236\325\272\267G\253\273e\337\266\273lEG\276\320\215V>c\333\t\276\246I\265<\266\035\327=\235\2704>::?=T\352\337=\035\360\226\275s\003\376\273\224\331\340\275\303\226B\275\315\004\257=:\246\016\275_\213W\276\307\202x\274\214\374\255\275\301L\357<\362\034\t\275\373\345\320\274\36773<\306\227\003\275o\227#\276\0172,>\212\037+\275\310\226p=u((>c\322\014\276\256\375X\275\n9\035\274\266\216\207\275H\321f=QV\211=7L\007=p\316 >f\203\211=n\366[=\254@\243=+\261<=T\203+=\314\235A\2759\026K\275-\356\010\276\323\377\2359@\022!>_5\263=?\"#\276\377\001\245<1\342\360=\206\242\207\276\350I\">\312wz>!4\274\275U\3007=\333\332\333\275\365\003\210\275bT\237=\353\3123\276\215\333\221=?j\320=|\237\022>\265\234\354=\003\357\231\275\"\242J=\243\374#>;\321\307\275\306\257@=\354Y,\275\314\200\001\275\340h\'\276}4\377=S)\222=5\3350\276}\036\264<no1=\367a\213\275\207\312[>\276\371$=Y\253\334\275\266=\254\275,G\017>\311\3526\276j\313F\273a\020\001>R[\000>\256\237D=\264\272\240<\267\004\276=\370\301_=>I\n\274\2434\245\276\232\375\020>\350\360U=n\321\221=\246\262\276=\370\t\005=\001\342Y\276]J\037\276Ig7=(P\231\275\2276c=T\330R\276\000\275&=qq_;\342\370u=\210\236\333\275a+S=_\244\322=\206\266\363=\360-\330\275\360\215#<]\207W>\201\231\264\274\3643 \276\2017\232=\323~\277\275\327\270\003\276\212lZ\275%:s<\367\317==)\322\345\274\202\0362\275X\362\020=\330\354\360<[\344.>\215T@=\312E5\276\377\376\020=\2700\267=<(\223=\226\311=\276gc\260\275\331h\214\275\307\360\233=r\2479=\272\213\336\275\347~\031>\265\314\227=r\310:\275\377\244\332\273\231\323E>\016\321\313\275nT\376<\031\274\234=\336S;\275l;\030\276@\254-<\274\327p>y\200\321:\024\223\005=P\376<\275\202K\306\275\034\370\211\274B\353\321;\203\206\237<=m!<7On\276\216\343A\276\301h\223>EC[=\240U\021\276\263UI\276:_\200\275\206:\202=\202\375\022\276\221MR>Q\334\027\276\362\261\004<[\3264\276\214\227\033>\342x\001>\023\304\021\275\033R\345\275g\244\373\275\363\027\241\274\n\250\007>C/\224\275\374\245\363=\2640\331\275\n\032\277\272Ma\361=K;(\276\371\374\030=\252\021\"\275O\203\266\275;\327\307<\244o\240\275\010l\021\275J\270\t=\026\200\203\275\223\354)\275q_q\275\222k\231=M\222\214\275\263\t =\246\337n\275\027\357\026>\336\372\255\275W\005\274\274\377\210\264>\256\264\036\276\263m3<\206s5\274d\351\004\275\232j\252:<\374\004>\236\314\326\272)/\224\275\323\224 =\341C\215\276\230\273%\276)\373q<@;\243=\020\177\234=\177\241+\275\360\005S\276\222\375M<\217\316\037<^\241 <\331\254\215=\277\n\350<\220\364\220\276\334\027@\275\270\005\320<\251@!\276\361|\024>S\376\204\275\232l\032>\267\367c\276\370\243\036\276\026\352N\275w\234\014>\033\330\353\275v\270\307;{\2231\275\023\230\246<D\177p\275\277y\033\276\030\223\270=\2272(>0\322d>\303\213\002>X\216\257=B\216\236\276\347\035X\2768\210\030\276wgk:!\347\204\275dh*\276\327;\262=]\316a>-\357\242\274N\305\272\275 \267\355\275\336A\006<\363\021\251<\200(\302\274\004\2123\275k\305\244=oX\007\275\227\007\002;\352`\241\274\027\221H\275\252@\224=\261\030\301<\340H\241\275\244\3563\275\270\273$\276y\221\343\275\031!\250\276\323,}<\334\251B\274\244\203\r\275\035\320\205\275q\016[>\321_\020=>\217|>!\207\367=d\030_=u\242\303=X\353.>\033rj<G\n\036>E\316\t\276\317\017\253\275\372>U>\313\203\356=\302\254\263=}x\336\275\365w\301>j\253\250=\001\252\'>\340\242\037>\003\307\247\275\323\360|>\376f\223\275\340fO>\266U2>o\\\251\274\257\014\271<\313^\213=\250\2724=*\032\\>\"\311H=ag\200\275\336\025\271=\213\222\032>rJ\301\275\254}\t\276nMS\275?\027c=\206l\346=\354\217,\276\030\343\331\275\020f\'\276e\354T>\3531\244<5}\236=\301\305\032\276r\006\222\275\010P\300=3Yt<\336\350\274\275)\304\264=\232\366\301;\264-\022=\010:\225=\231\274\325\275\302\350\020=\253\337\037<C\321\361\274\274\2724>\3719\177\2756a,;\374\244\234\275\243(j>\024\323\262=O\303>\276\2679\257=\222B\032>\005\311\313\2734\375\272\275\331\277\236\275\217/$\276\360qn=\014\217\013\276\213\352\000\276\251q\r>p7\026\276\002-(\274\234l0<\243\322G\276\007\362\222=p|\322\274Bp\362\275\321~\272<\024\200\234\275\364\336\200\274=C\025=\247r\201>\217\224\324=-\022c<E\215\234\275r\025X\276X\217\266\275\304:\014\276j#\203\275\310\355\235\273\352Oc\276\326\340\032=\001\374%\2740\350r\275\205-8=\337\366\036>\227e\223=\356/\027=\204\266\231\275]\030\335=\020\233~\276\t\205l\276\341\336\277\275$\320\005=Z\234\263<\322q\035\276Y\034C<\263\252\004\276\312\210\n\275\327\022\225\275t\034\345=\022w\370<\307\241\205\271\001s\210\276\315F\270=\262\264\277\274\337eA>\343\032\200=?\360\244=\313\247N<\371*\227\275\305:\265<~\357\216;\315gc;\036X7\275\234W=>\312\222\005>\307\327\271=\317\223\037\275s\316\324=\005\252\013\276\267\204\227=\335\334==4\006\273=>I}=\346{\236\275\241\207\373<\272\025\206>\267\370\310<\367\205S>\263\223\262\275O\260\275\276\327\\X\276\'\2429\275r\212\007\274\360\235\333=\332\273\023>!_;<h.B>\201I\242<\275\210\206\273\216B\006>\320\321\354=[}\310\275/\350=\276/\351(\275w_\241\275\323\231\t;\314\0041<\241\301\374\274!\267m\276\336h)\276=\270\r\276Rh\273=\274\265\362\275\2376\013\276\231\357r\2737`\000>\253\252\t\276\211\340\233\274|\225\255\275\202)\330\274\010j<\276Q\032\237\275K\263\201\274\331\240\275\271Q\212\r;\342L\003\275\342B\214=1\325\217=\260\222V\275 /\263\275dc\352=\347/\252=\234\3126>\311\246\\>\361\220U\275\033=?\275\246r\225>\203\2172\275\2310\316<on\305<\343\203\r\276\231\305i>\031\205\231\275\005\rp=@#\222\276\357\351\223>-\365\350<\375&\003\276\336\205t\274\256pW=\250\r\001>\216\206;\276\241H\351\272&D\217\275\333\271\231\275u\204P=|\201w\275A\356\365\273l\300\t\276\205\256{\273\202\034 >\316\362S>\0252\241<\320\347S>\351[\020\276\017^\005\275\372\0311>\360T\233\275\251\"\251\275\027%\304=\237\032\271<lQ->Q\020\205=K\310M\275\014\377U;\005\264d>\310\333B\275w\250\227\273\215\233\247=\367>\246;\177\316\025>,\321\344\275]\302\217=\352\317\202\274\275\031m\276\337j\346;s\274-\275\260yK=\377f\203\275y\374\000>\207qU\2769~\022=\263\2374=\220y\242\275\266\204B>pJ8\274\347\367n<\265\032p<\205\014R;/\2578\2742\351\340=\253\275a\274\036[\251\275S\223\327\275\010\210\006>\304f&>M\254\271<\205\276\365;\366\2642\275\350\276\013>Ji\035>+\340\003<+\212\241<[\201\263\275#\242\305\274\364\356 ;\232\351\t<\'\242\216\273\nb(\276\002\315\262\275Q\302J\276\313\2031\276X\277\005=\343s\372=\301\3469\276y\'\211;b\322\250<!XP\275\360\213,;qc\'\275p\ri\2751zI\274\207\367k\275\357F\224\274\310\321\222\275r\221\267\274}MX<&\222_\275I\267\313=\357y\031\276c\304.\275m\230\001\276"
          }
        }
      }
    }
    node {
      name: "deep/weights_layer1"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_layer1/Assign"
      op: "Assign"
      input: "deep/weights_layer1"
      input: "deep/weights_layer1/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_layer1/read"
      op: "Identity"
      input: "deep/weights_layer1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_bias1/initial_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
            tensor_content: "^\377\030=\263u\374\274c\322a=\200\201\273\274El\373\274\274-\217>t\031C\276\322\266T\2755\306o>g\006J>\372\035\277=;\016\207\276>\340\017\276\203G\216>\234X\257<H\n\361\273\346R\220>\014T\210=u\331\037>?\272\036>j\257\223=gdS\276\342G\325<E\237\002\276\236\0000=\036\255\321=s\230a\2758\216\241=\'\322!\274\375\010\217=\226\"\'\2760w\254=\275\324X>oC\261<s\220f\275\251\310\275\274\252U.;c\201\240=(\004\270\273\3718\246;\255\233h=\032d\375\275\0369\205<\371]\353=\2570\241<q\205c\275\332x\256=F\254T\276A\231\037>*\306;\276\301\353\276\275k\366v>&3!\275\023\266>>\346\201e\275I8C\275\332\353\222=\304\222\340;\226-y=\000:\016>v\033\231=a\215Y>\251\245\023\275\025\0321\276"
          }
        }
      }
    }
    node {
      name: "deep/weights_bias1"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_bias1/Assign"
      op: "Assign"
      input: "deep/weights_bias1"
      input: "deep/weights_bias1/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_bias1/read"
      op: "Identity"
      input: "deep/weights_bias1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/MatMul"
      op: "MatMul"
      input: "deep/dropout/mul"
      input: "deep/weights_layer0/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "deep/Add"
      op: "Add"
      input: "deep/MatMul"
      input: "deep/weights_bias0/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/Relu"
      op: "Relu"
      input: "deep/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/keep_prob"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/Shape"
      op: "Shape"
      input: "deep/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "deep/dropout_1/random_uniform/min"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/random_uniform/max"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "deep/dropout_1/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 1518403283
        }
      }
      attr {
        key: "seed2"
        value {
          i: 75
        }
      }
    }
    node {
      name: "deep/dropout_1/random_uniform/sub"
      op: "Sub"
      input: "deep/dropout_1/random_uniform/max"
      input: "deep/dropout_1/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/random_uniform/mul"
      op: "Mul"
      input: "deep/dropout_1/random_uniform/RandomUniform"
      input: "deep/dropout_1/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/random_uniform"
      op: "Add"
      input: "deep/dropout_1/random_uniform/mul"
      input: "deep/dropout_1/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/add"
      op: "Add"
      input: "deep/dropout_1/keep_prob"
      input: "deep/dropout_1/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/Floor"
      op: "Floor"
      input: "deep/dropout_1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/div"
      op: "RealDiv"
      input: "deep/Relu"
      input: "deep/dropout_1/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/mul"
      op: "Mul"
      input: "deep/dropout_1/div"
      input: "deep/dropout_1/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/MatMul_1"
      op: "MatMul"
      input: "deep/dropout_1/mul"
      input: "deep/weights_layer1/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "deep/Add_1"
      op: "Add"
      input: "deep/MatMul_1"
      input: "deep/weights_bias1/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/Relu_1"
      op: "Relu"
      input: "deep/Add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/keep_prob"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/Shape"
      op: "Shape"
      input: "deep/Relu_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "deep/dropout_2/random_uniform/min"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/random_uniform/max"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "deep/dropout_2/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 1518403283
        }
      }
      attr {
        key: "seed2"
        value {
          i: 90
        }
      }
    }
    node {
      name: "deep/dropout_2/random_uniform/sub"
      op: "Sub"
      input: "deep/dropout_2/random_uniform/max"
      input: "deep/dropout_2/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/random_uniform/mul"
      op: "Mul"
      input: "deep/dropout_2/random_uniform/RandomUniform"
      input: "deep/dropout_2/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/random_uniform"
      op: "Add"
      input: "deep/dropout_2/random_uniform/mul"
      input: "deep/dropout_2/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/add"
      op: "Add"
      input: "deep/dropout_2/keep_prob"
      input: "deep/dropout_2/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/Floor"
      op: "Floor"
      input: "deep/dropout_2/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/div"
      op: "RealDiv"
      input: "deep/Relu_1"
      input: "deep/dropout_2/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/mul"
      op: "Mul"
      input: "deep/dropout_2/div"
      input: "deep/dropout_2/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deepfm/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "deepfm/concat"
      op: "ConcatV2"
      input: "fm/Sum"
      input: "fm/mul"
      input: "deep/dropout_2/mul"
      input: "deepfm/concat/axis"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 83
              }
            }
          }
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/initial_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\021\347\351=m\224\206>\315\357\203\276\310\370\326;\310\372\325\276\227\267\252\275x\177\371\273\313\207\355;\312\224\242\275,Q\222=\264\232\337>m\277\363<KNJ\276\034e\234\276\245+\205==\001\273\276=\210\323=\211\232\034\276\265\004\351<\014\360h>\200\376\270\272\025o\002\275M\334\214\275\216\360\347<\001r\301\275\032\"\210<\361E\200\276\275\276\305=]\375}\274\242+\376=\362?\213\276\253I\227;7\371x>8o\032=\000\223F>\307c\276\274%\264\006<\022\014\335\274\222FG>og\230=\034a\202\276g\252F\276\270\301\304>\301\023F\276r\240H>\037g\215>\214\247r>\000\031\224>\'\t\305\275\331\374A>\024\261\203\275\252\000[\275\350\261\247<$\252\245\276w\220\\=\"F\311\275\356\357M\275\002\\*\276u\334\001?A\261\252;\n{\265=W\350@\275\240\332\260\275\'\264\301<"
          }
        }
      }
    }
    node {
      name: "deepfm/concat_projection0"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/Assign"
      op: "Assign"
      input: "deepfm/concat_projection0"
      input: "deepfm/concat_projection0/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/read"
      op: "Identity"
      input: "deepfm/concat_projection0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "deepfm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.009999999776482582
          }
        }
      }
    }
    node {
      name: "deepfm/concat_bias0"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/Assign"
      op: "Assign"
      input: "deepfm/concat_bias0"
      input: "deepfm/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/read"
      op: "Identity"
      input: "deepfm/concat_bias0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "deepfm/MatMul"
      op: "MatMul"
      input: "deep/dropout_2/mul"
      input: "deepfm/concat_projection0/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "deepfm/out"
      op: "Add"
      input: "deepfm/MatMul"
      input: "deepfm/concat_bias0/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "score"
      op: "Sigmoid"
      input: "deepfm/out"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "deep_fm/score/tag"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "deep_fm/score"
          }
        }
      }
    }
    node {
      name: "deep_fm/score"
      op: "HistogramSummary"
      input: "deep_fm/score/tag"
      input: "score"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/sub"
      op: "Sub"
      input: "Placeholder"
      input: "score"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/Square"
      op: "Square"
      input: "Deep_Estimate/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/Sum"
      op: "Sum"
      input: "Deep_Estimate/Square"
      input: "Deep_Estimate/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "Deep_Estimate/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/Mean"
      op: "Mean"
      input: "Deep_Estimate/Sum"
      input: "Deep_Estimate/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "Deep_Estimate/loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Deep_Estimate/loss"
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/loss"
      op: "ScalarSummary"
      input: "Deep_Estimate/loss/tags"
      input: "Deep_Estimate/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Cast"
      op: "Cast"
      input: "Placeholder"
      attr {
        key: "DstT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\377\377\377\377\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Reshape"
      op: "Reshape"
      input: "score"
      input: "Deep_Estimate/auc/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\377\377\377\377"
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Reshape_1"
      op: "Reshape"
      input: "Deep_Estimate/auc/Cast"
      input: "Deep_Estimate/auc/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Shape"
      op: "Shape"
      input: "Deep_Estimate/auc/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice"
      op: "StridedSlice"
      input: "Deep_Estimate/auc/Shape"
      input: "Deep_Estimate/auc/strided_slice/stack"
      input: "Deep_Estimate/auc/strided_slice/stack_1"
      input: "Deep_Estimate/auc/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 200
              }
            }
            tensor_content: "\225\277\326\263\317\251\244;\317\251$<\267\376v<\317\251\244<C\324\315<\267\376\366<\225\024\020=\317\251$=\t?9=C\324M=}ib=\267\376v=\370\311\205=\225\024\220=2_\232=\317\251\244=l\364\256=\t?\271=\246\211\303=C\324\315=\340\036\330=}i\342=\032\264\354=\267\376\366=\252\244\000>\370\311\005>G\357\n>\225\024\020>\3449\025>2_\032>\201\204\037>\317\251$>\036\317)>l\364.>\273\0314>\t?9>Wd>>\246\211C>\364\256H>C\324M>\221\371R>\340\036X>.D]>}ib>\313\216g>\032\264l>h\331q>\267\376v>\005$|>\252\244\200>Q7\203>\370\311\205>\240\\\210>G\357\212>\356\201\215>\225\024\220><\247\222>\3449\225>\213\314\227>2_\232>\331\361\234>\201\204\237>(\027\242>\317\251\244>v<\247>\036\317\251>\305a\254>l\364\256>\023\207\261>\273\031\264>b\254\266>\t?\271>\260\321\273>Wd\276>\377\366\300>\246\211\303>M\034\306>\364\256\310>\234A\313>C\324\315>\352f\320>\221\371\322>9\214\325>\340\036\330>\207\261\332>.D\335>\326\326\337>}i\342>$\374\344>\313\216\347>r!\352>\032\264\354>\301F\357>h\331\361>\017l\364>\267\376\366>^\221\371>\005$\374>\254\266\376>\252\244\000?\375\355\001?Q7\003?\245\200\004?\370\311\005?L\023\007?\240\\\010?\363\245\t?G\357\n?\2328\014?\356\201\r?B\313\016?\225\024\020?\351]\021?<\247\022?\220\360\023?\3449\025?7\203\026?\213\314\027?\337\025\031?2_\032?\206\250\033?\331\361\034?-;\036?\201\204\037?\324\315 ?(\027\"?{`#?\317\251$?#\363%?v<\'?\312\205(?\036\317)?q\030+?\305a,?\030\253-?l\364.?\300=0?\023\2071?g\3202?\273\0314?\016c5?b\2546?\265\3657?\t?9?]\210:?\260\321;?\004\033=?Wd>?\253\255??\377\366@?R@B?\246\211C?\372\322D?M\034F?\241eG?\364\256H?H\370I?\234AK?\357\212L?C\324M?\227\035O?\352fP?>\260Q?\221\371R?\345BT?9\214U?\214\325V?\340\036X?3hY?\207\261Z?\333\372[?.D]?\202\215^?\326\326_?) a?}ib?\320\262c?$\374d?xEf?\313\216g?\037\330h?r!j?\306jk?\032\264l?m\375m?\301Fo?\025\220p?h\331q?\274\"s?\017lt?c\265u?\267\376v?\nHx?^\221y?\262\332z?\005$|?Ym}?\254\266~?\001\000\200?"
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/ExpandDims"
      op: "ExpandDims"
      input: "Deep_Estimate/auc/Const"
      input: "Deep_Estimate/auc/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/stack/0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/stack"
      op: "Pack"
      input: "Deep_Estimate/auc/stack/0"
      input: "Deep_Estimate/auc/strided_slice"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Tile"
      op: "Tile"
      input: "Deep_Estimate/auc/ExpandDims"
      input: "Deep_Estimate/auc/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/transpose/Rank"
      op: "Rank"
      input: "Deep_Estimate/auc/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/transpose/sub/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/transpose/sub"
      op: "Sub"
      input: "Deep_Estimate/auc/transpose/Rank"
      input: "Deep_Estimate/auc/transpose/sub/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/transpose/Range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/transpose/Range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/transpose/Range"
      op: "Range"
      input: "Deep_Estimate/auc/transpose/Range/start"
      input: "Deep_Estimate/auc/transpose/Rank"
      input: "Deep_Estimate/auc/transpose/Range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/transpose/sub_1"
      op: "Sub"
      input: "Deep_Estimate/auc/transpose/sub"
      input: "Deep_Estimate/auc/transpose/Range"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/transpose"
      op: "Transpose"
      input: "Deep_Estimate/auc/Reshape"
      input: "Deep_Estimate/auc/transpose/sub_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Tile_1/multiples"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\310\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Tile_1"
      op: "Tile"
      input: "Deep_Estimate/auc/transpose"
      input: "Deep_Estimate/auc/Tile_1/multiples"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Greater"
      op: "Greater"
      input: "Deep_Estimate/auc/Tile_1"
      input: "Deep_Estimate/auc/Tile"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/LogicalNot"
      op: "LogicalNot"
      input: "Deep_Estimate/auc/Greater"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Tile_2/multiples"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\310\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Tile_2"
      op: "Tile"
      input: "Deep_Estimate/auc/Reshape_1"
      input: "Deep_Estimate/auc/Tile_2/multiples"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/LogicalNot_1"
      op: "LogicalNot"
      input: "Deep_Estimate/auc/Tile_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 200
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/true_positives"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 200
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/true_positives/Assign"
      op: "Assign"
      input: "Deep_Estimate/auc/true_positives"
      input: "Deep_Estimate/auc/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Deep_Estimate/auc/true_positives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/true_positives/read"
      op: "Identity"
      input: "Deep_Estimate/auc/true_positives"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Deep_Estimate/auc/true_positives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/LogicalAnd"
      op: "LogicalAnd"
      input: "Deep_Estimate/auc/Tile_2"
      input: "Deep_Estimate/auc/Greater"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/ToFloat_1"
      op: "Cast"
      input: "Deep_Estimate/auc/LogicalAnd"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Sum"
      op: "Sum"
      input: "Deep_Estimate/auc/ToFloat_1"
      input: "Deep_Estimate/auc/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/AssignAdd"
      op: "AssignAdd"
      input: "Deep_Estimate/auc/true_positives"
      input: "Deep_Estimate/auc/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Deep_Estimate/auc/true_positives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/zeros_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 200
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/false_negatives"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 200
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/false_negatives/Assign"
      op: "Assign"
      input: "Deep_Estimate/auc/false_negatives"
      input: "Deep_Estimate/auc/zeros_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Deep_Estimate/auc/false_negatives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/false_negatives/read"
      op: "Identity"
      input: "Deep_Estimate/auc/false_negatives"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Deep_Estimate/auc/false_negatives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/LogicalAnd_1"
      op: "LogicalAnd"
      input: "Deep_Estimate/auc/Tile_2"
      input: "Deep_Estimate/auc/LogicalNot"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/ToFloat_2"
      op: "Cast"
      input: "Deep_Estimate/auc/LogicalAnd_1"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Sum_1"
      op: "Sum"
      input: "Deep_Estimate/auc/ToFloat_2"
      input: "Deep_Estimate/auc/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/AssignAdd_1"
      op: "AssignAdd"
      input: "Deep_Estimate/auc/false_negatives"
      input: "Deep_Estimate/auc/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Deep_Estimate/auc/false_negatives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/zeros_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 200
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/true_negatives"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 200
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/true_negatives/Assign"
      op: "Assign"
      input: "Deep_Estimate/auc/true_negatives"
      input: "Deep_Estimate/auc/zeros_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Deep_Estimate/auc/true_negatives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/true_negatives/read"
      op: "Identity"
      input: "Deep_Estimate/auc/true_negatives"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Deep_Estimate/auc/true_negatives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/LogicalAnd_2"
      op: "LogicalAnd"
      input: "Deep_Estimate/auc/LogicalNot_1"
      input: "Deep_Estimate/auc/LogicalNot"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/ToFloat_3"
      op: "Cast"
      input: "Deep_Estimate/auc/LogicalAnd_2"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Sum_2/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Sum_2"
      op: "Sum"
      input: "Deep_Estimate/auc/ToFloat_3"
      input: "Deep_Estimate/auc/Sum_2/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/AssignAdd_2"
      op: "AssignAdd"
      input: "Deep_Estimate/auc/true_negatives"
      input: "Deep_Estimate/auc/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Deep_Estimate/auc/true_negatives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/zeros_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 200
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/false_positives"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 200
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/false_positives/Assign"
      op: "Assign"
      input: "Deep_Estimate/auc/false_positives"
      input: "Deep_Estimate/auc/zeros_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Deep_Estimate/auc/false_positives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/false_positives/read"
      op: "Identity"
      input: "Deep_Estimate/auc/false_positives"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Deep_Estimate/auc/false_positives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/LogicalAnd_3"
      op: "LogicalAnd"
      input: "Deep_Estimate/auc/LogicalNot_1"
      input: "Deep_Estimate/auc/Greater"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/ToFloat_4"
      op: "Cast"
      input: "Deep_Estimate/auc/LogicalAnd_3"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Sum_3/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Sum_3"
      op: "Sum"
      input: "Deep_Estimate/auc/ToFloat_4"
      input: "Deep_Estimate/auc/Sum_3/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/AssignAdd_3"
      op: "AssignAdd"
      input: "Deep_Estimate/auc/false_positives"
      input: "Deep_Estimate/auc/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Deep_Estimate/auc/false_positives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/add/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/add"
      op: "Add"
      input: "Deep_Estimate/auc/true_positives/read"
      input: "Deep_Estimate/auc/add/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/add_1"
      op: "Add"
      input: "Deep_Estimate/auc/true_positives/read"
      input: "Deep_Estimate/auc/false_negatives/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/add_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/add_2"
      op: "Add"
      input: "Deep_Estimate/auc/add_1"
      input: "Deep_Estimate/auc/add_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/div"
      op: "RealDiv"
      input: "Deep_Estimate/auc/add"
      input: "Deep_Estimate/auc/add_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/add_3"
      op: "Add"
      input: "Deep_Estimate/auc/false_positives/read"
      input: "Deep_Estimate/auc/true_negatives/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/add_4/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/add_4"
      op: "Add"
      input: "Deep_Estimate/auc/add_3"
      input: "Deep_Estimate/auc/add_4/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/div_1"
      op: "RealDiv"
      input: "Deep_Estimate/auc/false_positives/read"
      input: "Deep_Estimate/auc/add_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 199
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_1"
      op: "StridedSlice"
      input: "Deep_Estimate/auc/div_1"
      input: "Deep_Estimate/auc/strided_slice_1/stack"
      input: "Deep_Estimate/auc/strided_slice_1/stack_1"
      input: "Deep_Estimate/auc/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_2"
      op: "StridedSlice"
      input: "Deep_Estimate/auc/div_1"
      input: "Deep_Estimate/auc/strided_slice_2/stack"
      input: "Deep_Estimate/auc/strided_slice_2/stack_1"
      input: "Deep_Estimate/auc/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/sub"
      op: "Sub"
      input: "Deep_Estimate/auc/strided_slice_1"
      input: "Deep_Estimate/auc/strided_slice_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 199
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_3"
      op: "StridedSlice"
      input: "Deep_Estimate/auc/div"
      input: "Deep_Estimate/auc/strided_slice_3/stack"
      input: "Deep_Estimate/auc/strided_slice_3/stack_1"
      input: "Deep_Estimate/auc/strided_slice_3/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_4/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_4/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_4/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_4"
      op: "StridedSlice"
      input: "Deep_Estimate/auc/div"
      input: "Deep_Estimate/auc/strided_slice_4/stack"
      input: "Deep_Estimate/auc/strided_slice_4/stack_1"
      input: "Deep_Estimate/auc/strided_slice_4/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/add_5"
      op: "Add"
      input: "Deep_Estimate/auc/strided_slice_3"
      input: "Deep_Estimate/auc/strided_slice_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/truediv/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/truediv"
      op: "RealDiv"
      input: "Deep_Estimate/auc/add_5"
      input: "Deep_Estimate/auc/truediv/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Mul"
      op: "Mul"
      input: "Deep_Estimate/auc/sub"
      input: "Deep_Estimate/auc/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/value"
      op: "Sum"
      input: "Deep_Estimate/auc/Mul"
      input: "Deep_Estimate/auc/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/add_6/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/add_6"
      op: "Add"
      input: "Deep_Estimate/auc/AssignAdd"
      input: "Deep_Estimate/auc/add_6/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/add_7"
      op: "Add"
      input: "Deep_Estimate/auc/AssignAdd"
      input: "Deep_Estimate/auc/AssignAdd_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/add_8/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/add_8"
      op: "Add"
      input: "Deep_Estimate/auc/add_7"
      input: "Deep_Estimate/auc/add_8/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/div_2"
      op: "RealDiv"
      input: "Deep_Estimate/auc/add_6"
      input: "Deep_Estimate/auc/add_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/add_9"
      op: "Add"
      input: "Deep_Estimate/auc/AssignAdd_3"
      input: "Deep_Estimate/auc/AssignAdd_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/add_10/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/add_10"
      op: "Add"
      input: "Deep_Estimate/auc/add_9"
      input: "Deep_Estimate/auc/add_10/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/div_3"
      op: "RealDiv"
      input: "Deep_Estimate/auc/AssignAdd_3"
      input: "Deep_Estimate/auc/add_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_5/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_5/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 199
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_5/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_5"
      op: "StridedSlice"
      input: "Deep_Estimate/auc/div_3"
      input: "Deep_Estimate/auc/strided_slice_5/stack"
      input: "Deep_Estimate/auc/strided_slice_5/stack_1"
      input: "Deep_Estimate/auc/strided_slice_5/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_6/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_6/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_6/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_6"
      op: "StridedSlice"
      input: "Deep_Estimate/auc/div_3"
      input: "Deep_Estimate/auc/strided_slice_6/stack"
      input: "Deep_Estimate/auc/strided_slice_6/stack_1"
      input: "Deep_Estimate/auc/strided_slice_6/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/sub_1"
      op: "Sub"
      input: "Deep_Estimate/auc/strided_slice_5"
      input: "Deep_Estimate/auc/strided_slice_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_7/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_7/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 199
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_7/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_7"
      op: "StridedSlice"
      input: "Deep_Estimate/auc/div_2"
      input: "Deep_Estimate/auc/strided_slice_7/stack"
      input: "Deep_Estimate/auc/strided_slice_7/stack_1"
      input: "Deep_Estimate/auc/strided_slice_7/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_8/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_8/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_8/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/strided_slice_8"
      op: "StridedSlice"
      input: "Deep_Estimate/auc/div_2"
      input: "Deep_Estimate/auc/strided_slice_8/stack"
      input: "Deep_Estimate/auc/strided_slice_8/stack_1"
      input: "Deep_Estimate/auc/strided_slice_8/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/add_11"
      op: "Add"
      input: "Deep_Estimate/auc/strided_slice_7"
      input: "Deep_Estimate/auc/strided_slice_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/truediv_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/truediv_1"
      op: "RealDiv"
      input: "Deep_Estimate/auc/add_11"
      input: "Deep_Estimate/auc/truediv_1/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Mul_1"
      op: "Mul"
      input: "Deep_Estimate/auc/sub_1"
      input: "Deep_Estimate/auc/truediv_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc/update_op"
      op: "Sum"
      input: "Deep_Estimate/auc/Mul_1"
      input: "Deep_Estimate/auc/Const_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "Deep_Estimate/auc1/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Deep_Estimate/auc1"
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc1"
      op: "ScalarSummary"
      input: "Deep_Estimate/auc1/tags"
      input: "Deep_Estimate/auc/value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc2/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "Deep_Estimate/auc2"
          }
        }
      }
    }
    node {
      name: "Deep_Estimate/auc2"
      op: "ScalarSummary"
      input: "Deep_Estimate/auc2/tags"
      input: "Deep_Estimate/auc/update_op"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "train/gradients/Fill"
      op: "Fill"
      input: "train/gradients/Shape"
      input: "train/gradients/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Mean_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Mean_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/Fill"
      input: "train/gradients/Deep_Estimate/Mean_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Mean_grad/Shape"
      op: "Shape"
      input: "Deep_Estimate/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Mean_grad/Tile"
      op: "Tile"
      input: "train/gradients/Deep_Estimate/Mean_grad/Reshape"
      input: "train/gradients/Deep_Estimate/Mean_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Mean_grad/Shape_1"
      op: "Shape"
      input: "Deep_Estimate/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Mean_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Mean_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Mean_grad/Prod"
      op: "Prod"
      input: "train/gradients/Deep_Estimate/Mean_grad/Shape_1"
      input: "train/gradients/Deep_Estimate/Mean_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Mean_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Mean_grad/Prod_1"
      op: "Prod"
      input: "train/gradients/Deep_Estimate/Mean_grad/Shape_2"
      input: "train/gradients/Deep_Estimate/Mean_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Mean_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Mean_grad/Maximum"
      op: "Maximum"
      input: "train/gradients/Deep_Estimate/Mean_grad/Prod_1"
      input: "train/gradients/Deep_Estimate/Mean_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Mean_grad/floordiv"
      op: "FloorDiv"
      input: "train/gradients/Deep_Estimate/Mean_grad/Prod"
      input: "train/gradients/Deep_Estimate/Mean_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Mean_grad/Cast"
      op: "Cast"
      input: "train/gradients/Deep_Estimate/Mean_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Mean_grad/truediv"
      op: "RealDiv"
      input: "train/gradients/Deep_Estimate/Mean_grad/Tile"
      input: "train/gradients/Deep_Estimate/Mean_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Sum_grad/Shape"
      op: "Shape"
      input: "Deep_Estimate/Square"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Sum_grad/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Sum_grad/add"
      op: "Add"
      input: "Deep_Estimate/Sum/reduction_indices"
      input: "train/gradients/Deep_Estimate/Sum_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Sum_grad/mod"
      op: "FloorMod"
      input: "train/gradients/Deep_Estimate/Sum_grad/add"
      input: "train/gradients/Deep_Estimate/Sum_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Sum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Sum_grad/range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Sum_grad/range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Sum_grad/range"
      op: "Range"
      input: "train/gradients/Deep_Estimate/Sum_grad/range/start"
      input: "train/gradients/Deep_Estimate/Sum_grad/Size"
      input: "train/gradients/Deep_Estimate/Sum_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Sum_grad/Fill/value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Sum_grad/Fill"
      op: "Fill"
      input: "train/gradients/Deep_Estimate/Sum_grad/Shape_1"
      input: "train/gradients/Deep_Estimate/Sum_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Sum_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "train/gradients/Deep_Estimate/Sum_grad/range"
      input: "train/gradients/Deep_Estimate/Sum_grad/mod"
      input: "train/gradients/Deep_Estimate/Sum_grad/Shape"
      input: "train/gradients/Deep_Estimate/Sum_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Sum_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Sum_grad/Maximum"
      op: "Maximum"
      input: "train/gradients/Deep_Estimate/Sum_grad/DynamicStitch"
      input: "train/gradients/Deep_Estimate/Sum_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Sum_grad/floordiv"
      op: "FloorDiv"
      input: "train/gradients/Deep_Estimate/Sum_grad/Shape"
      input: "train/gradients/Deep_Estimate/Sum_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Sum_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/Deep_Estimate/Mean_grad/truediv"
      input: "train/gradients/Deep_Estimate/Sum_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Sum_grad/Tile"
      op: "Tile"
      input: "train/gradients/Deep_Estimate/Sum_grad/Reshape"
      input: "train/gradients/Deep_Estimate/Sum_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Square_grad/mul/x"
      op: "Const"
      input: "^train/gradients/Deep_Estimate/Sum_grad/Tile"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Square_grad/mul"
      op: "Mul"
      input: "train/gradients/Deep_Estimate/Square_grad/mul/x"
      input: "Deep_Estimate/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/Square_grad/mul_1"
      op: "Mul"
      input: "train/gradients/Deep_Estimate/Sum_grad/Tile"
      input: "train/gradients/Deep_Estimate/Square_grad/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/sub_grad/Shape"
      op: "Shape"
      input: "Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/sub_grad/Shape_1"
      op: "Shape"
      input: "score"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/sub_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/Deep_Estimate/sub_grad/Shape"
      input: "train/gradients/Deep_Estimate/sub_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/sub_grad/Sum"
      op: "Sum"
      input: "train/gradients/Deep_Estimate/Square_grad/mul_1"
      input: "train/gradients/Deep_Estimate/sub_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/sub_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/Deep_Estimate/sub_grad/Sum"
      input: "train/gradients/Deep_Estimate/sub_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/sub_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/Deep_Estimate/Square_grad/mul_1"
      input: "train/gradients/Deep_Estimate/sub_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/sub_grad/Neg"
      op: "Neg"
      input: "train/gradients/Deep_Estimate/sub_grad/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/sub_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/Deep_Estimate/sub_grad/Neg"
      input: "train/gradients/Deep_Estimate/sub_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/sub_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/Deep_Estimate/sub_grad/Reshape"
      input: "^train/gradients/Deep_Estimate/sub_grad/Reshape_1"
    }
    node {
      name: "train/gradients/Deep_Estimate/sub_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/Deep_Estimate/sub_grad/Reshape"
      input: "^train/gradients/Deep_Estimate/sub_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/Deep_Estimate/sub_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Deep_Estimate/sub_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/Deep_Estimate/sub_grad/Reshape_1"
      input: "^train/gradients/Deep_Estimate/sub_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/Deep_Estimate/sub_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/score_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "score"
      input: "train/gradients/Deep_Estimate/sub_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/out_grad/Shape"
      op: "Shape"
      input: "deepfm/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deepfm/out_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/out_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/deepfm/out_grad/Shape"
      input: "train/gradients/deepfm/out_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/out_grad/Sum"
      op: "Sum"
      input: "train/gradients/score_grad/SigmoidGrad"
      input: "train/gradients/deepfm/out_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deepfm/out_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deepfm/out_grad/Sum"
      input: "train/gradients/deepfm/out_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/out_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/score_grad/SigmoidGrad"
      input: "train/gradients/deepfm/out_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deepfm/out_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/deepfm/out_grad/Sum_1"
      input: "train/gradients/deepfm/out_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/out_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deepfm/out_grad/Reshape"
      input: "^train/gradients/deepfm/out_grad/Reshape_1"
    }
    node {
      name: "train/gradients/deepfm/out_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deepfm/out_grad/Reshape"
      input: "^train/gradients/deepfm/out_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deepfm/out_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/out_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deepfm/out_grad/Reshape_1"
      input: "^train/gradients/deepfm/out_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deepfm/out_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/MatMul_grad/MatMul"
      op: "MatMul"
      input: "train/gradients/deepfm/out_grad/tuple/control_dependency"
      input: "deepfm/concat_projection0/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "train/gradients/deepfm/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "deep/dropout_2/mul"
      input: "train/gradients/deepfm/out_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deepfm/MatMul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deepfm/MatMul_grad/MatMul"
      input: "^train/gradients/deepfm/MatMul_grad/MatMul_1"
    }
    node {
      name: "train/gradients/deepfm/MatMul_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deepfm/MatMul_grad/MatMul"
      input: "^train/gradients/deepfm/MatMul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deepfm/MatMul_grad/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/MatMul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deepfm/MatMul_grad/MatMul_1"
      input: "^train/gradients/deepfm/MatMul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deepfm/MatMul_grad/MatMul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/Shape"
      op: "Shape"
      input: "deep/dropout_2/div"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/Shape_1"
      op: "Shape"
      input: "deep/dropout_2/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/deep/dropout_2/mul_grad/Shape"
      input: "train/gradients/deep/dropout_2/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/mul"
      op: "Mul"
      input: "train/gradients/deepfm/MatMul_grad/tuple/control_dependency"
      input: "deep/dropout_2/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/Sum"
      op: "Sum"
      input: "train/gradients/deep/dropout_2/mul_grad/mul"
      input: "train/gradients/deep/dropout_2/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deep/dropout_2/mul_grad/Sum"
      input: "train/gradients/deep/dropout_2/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/mul_1"
      op: "Mul"
      input: "deep/dropout_2/div"
      input: "train/gradients/deepfm/MatMul_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/deep/dropout_2/mul_grad/mul_1"
      input: "train/gradients/deep/dropout_2/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/deep/dropout_2/mul_grad/Sum_1"
      input: "train/gradients/deep/dropout_2/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/dropout_2/mul_grad/Reshape"
      input: "^train/gradients/deep/dropout_2/mul_grad/Reshape_1"
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/dropout_2/mul_grad/Reshape"
      input: "^train/gradients/deep/dropout_2/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout_2/mul_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/dropout_2/mul_grad/Reshape_1"
      input: "^train/gradients/deep/dropout_2/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout_2/mul_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/Shape"
      op: "Shape"
      input: "deep/Relu_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/deep/dropout_2/div_grad/Shape"
      input: "train/gradients/deep/dropout_2/div_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/RealDiv"
      op: "RealDiv"
      input: "train/gradients/deep/dropout_2/mul_grad/tuple/control_dependency"
      input: "deep/dropout_2/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/Sum"
      op: "Sum"
      input: "train/gradients/deep/dropout_2/div_grad/RealDiv"
      input: "train/gradients/deep/dropout_2/div_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deep/dropout_2/div_grad/Sum"
      input: "train/gradients/deep/dropout_2/div_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/Neg"
      op: "Neg"
      input: "deep/Relu_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/RealDiv_1"
      op: "RealDiv"
      input: "train/gradients/deep/dropout_2/div_grad/Neg"
      input: "deep/dropout_2/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/RealDiv_2"
      op: "RealDiv"
      input: "train/gradients/deep/dropout_2/div_grad/RealDiv_1"
      input: "deep/dropout_2/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/mul"
      op: "Mul"
      input: "train/gradients/deep/dropout_2/mul_grad/tuple/control_dependency"
      input: "train/gradients/deep/dropout_2/div_grad/RealDiv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/deep/dropout_2/div_grad/mul"
      input: "train/gradients/deep/dropout_2/div_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/deep/dropout_2/div_grad/Sum_1"
      input: "train/gradients/deep/dropout_2/div_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/dropout_2/div_grad/Reshape"
      input: "^train/gradients/deep/dropout_2/div_grad/Reshape_1"
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/dropout_2/div_grad/Reshape"
      input: "^train/gradients/deep/dropout_2/div_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout_2/div_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/dropout_2/div_grad/Reshape_1"
      input: "^train/gradients/deep/dropout_2/div_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout_2/div_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Relu_1_grad/ReluGrad"
      op: "ReluGrad"
      input: "train/gradients/deep/dropout_2/div_grad/tuple/control_dependency"
      input: "deep/Relu_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_1_grad/Shape"
      op: "Shape"
      input: "deep/MatMul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_1_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/deep/Add_1_grad/Shape"
      input: "train/gradients/deep/Add_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_1_grad/Sum"
      op: "Sum"
      input: "train/gradients/deep/Relu_1_grad/ReluGrad"
      input: "train/gradients/deep/Add_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_1_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deep/Add_1_grad/Sum"
      input: "train/gradients/deep/Add_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_1_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/deep/Relu_1_grad/ReluGrad"
      input: "train/gradients/deep/Add_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_1_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/deep/Add_1_grad/Sum_1"
      input: "train/gradients/deep/Add_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_1_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/Add_1_grad/Reshape"
      input: "^train/gradients/deep/Add_1_grad/Reshape_1"
    }
    node {
      name: "train/gradients/deep/Add_1_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/Add_1_grad/Reshape"
      input: "^train/gradients/deep/Add_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/Add_1_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_1_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/Add_1_grad/Reshape_1"
      input: "^train/gradients/deep/Add_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/Add_1_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/MatMul_1_grad/MatMul"
      op: "MatMul"
      input: "train/gradients/deep/Add_1_grad/tuple/control_dependency"
      input: "deep/weights_layer1/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "train/gradients/deep/MatMul_1_grad/MatMul_1"
      op: "MatMul"
      input: "deep/dropout_1/mul"
      input: "train/gradients/deep/Add_1_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/MatMul_1_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/MatMul_1_grad/MatMul"
      input: "^train/gradients/deep/MatMul_1_grad/MatMul_1"
    }
    node {
      name: "train/gradients/deep/MatMul_1_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/MatMul_1_grad/MatMul"
      input: "^train/gradients/deep/MatMul_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/MatMul_1_grad/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/MatMul_1_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/MatMul_1_grad/MatMul_1"
      input: "^train/gradients/deep/MatMul_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/MatMul_1_grad/MatMul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/Shape"
      op: "Shape"
      input: "deep/dropout_1/div"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/Shape_1"
      op: "Shape"
      input: "deep/dropout_1/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/deep/dropout_1/mul_grad/Shape"
      input: "train/gradients/deep/dropout_1/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/mul"
      op: "Mul"
      input: "train/gradients/deep/MatMul_1_grad/tuple/control_dependency"
      input: "deep/dropout_1/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/Sum"
      op: "Sum"
      input: "train/gradients/deep/dropout_1/mul_grad/mul"
      input: "train/gradients/deep/dropout_1/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deep/dropout_1/mul_grad/Sum"
      input: "train/gradients/deep/dropout_1/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/mul_1"
      op: "Mul"
      input: "deep/dropout_1/div"
      input: "train/gradients/deep/MatMul_1_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/deep/dropout_1/mul_grad/mul_1"
      input: "train/gradients/deep/dropout_1/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/deep/dropout_1/mul_grad/Sum_1"
      input: "train/gradients/deep/dropout_1/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/dropout_1/mul_grad/Reshape"
      input: "^train/gradients/deep/dropout_1/mul_grad/Reshape_1"
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/dropout_1/mul_grad/Reshape"
      input: "^train/gradients/deep/dropout_1/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout_1/mul_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/dropout_1/mul_grad/Reshape_1"
      input: "^train/gradients/deep/dropout_1/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout_1/mul_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/Shape"
      op: "Shape"
      input: "deep/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/deep/dropout_1/div_grad/Shape"
      input: "train/gradients/deep/dropout_1/div_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/RealDiv"
      op: "RealDiv"
      input: "train/gradients/deep/dropout_1/mul_grad/tuple/control_dependency"
      input: "deep/dropout_1/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/Sum"
      op: "Sum"
      input: "train/gradients/deep/dropout_1/div_grad/RealDiv"
      input: "train/gradients/deep/dropout_1/div_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deep/dropout_1/div_grad/Sum"
      input: "train/gradients/deep/dropout_1/div_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/Neg"
      op: "Neg"
      input: "deep/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/RealDiv_1"
      op: "RealDiv"
      input: "train/gradients/deep/dropout_1/div_grad/Neg"
      input: "deep/dropout_1/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/RealDiv_2"
      op: "RealDiv"
      input: "train/gradients/deep/dropout_1/div_grad/RealDiv_1"
      input: "deep/dropout_1/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/mul"
      op: "Mul"
      input: "train/gradients/deep/dropout_1/mul_grad/tuple/control_dependency"
      input: "train/gradients/deep/dropout_1/div_grad/RealDiv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/deep/dropout_1/div_grad/mul"
      input: "train/gradients/deep/dropout_1/div_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/deep/dropout_1/div_grad/Sum_1"
      input: "train/gradients/deep/dropout_1/div_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/dropout_1/div_grad/Reshape"
      input: "^train/gradients/deep/dropout_1/div_grad/Reshape_1"
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/dropout_1/div_grad/Reshape"
      input: "^train/gradients/deep/dropout_1/div_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout_1/div_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/dropout_1/div_grad/Reshape_1"
      input: "^train/gradients/deep/dropout_1/div_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout_1/div_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "train/gradients/deep/dropout_1/div_grad/tuple/control_dependency"
      input: "deep/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_grad/Shape"
      op: "Shape"
      input: "deep/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/deep/Add_grad/Shape"
      input: "train/gradients/deep/Add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_grad/Sum"
      op: "Sum"
      input: "train/gradients/deep/Relu_grad/ReluGrad"
      input: "train/gradients/deep/Add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deep/Add_grad/Sum"
      input: "train/gradients/deep/Add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/deep/Relu_grad/ReluGrad"
      input: "train/gradients/deep/Add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/deep/Add_grad/Sum_1"
      input: "train/gradients/deep/Add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/Add_grad/Reshape"
      input: "^train/gradients/deep/Add_grad/Reshape_1"
    }
    node {
      name: "train/gradients/deep/Add_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/Add_grad/Reshape"
      input: "^train/gradients/deep/Add_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/Add_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/Add_grad/Reshape_1"
      input: "^train/gradients/deep/Add_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/Add_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/MatMul_grad/MatMul"
      op: "MatMul"
      input: "train/gradients/deep/Add_grad/tuple/control_dependency"
      input: "deep/weights_layer0/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "train/gradients/deep/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "deep/dropout/mul"
      input: "train/gradients/deep/Add_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/MatMul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/MatMul_grad/MatMul"
      input: "^train/gradients/deep/MatMul_grad/MatMul_1"
    }
    node {
      name: "train/gradients/deep/MatMul_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/MatMul_grad/MatMul"
      input: "^train/gradients/deep/MatMul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/MatMul_grad/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/MatMul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/MatMul_grad/MatMul_1"
      input: "^train/gradients/deep/MatMul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/MatMul_grad/MatMul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/Shape"
      op: "Shape"
      input: "deep/dropout/div"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/Shape_1"
      op: "Shape"
      input: "deep/dropout/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/deep/dropout/mul_grad/Shape"
      input: "train/gradients/deep/dropout/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/mul"
      op: "Mul"
      input: "train/gradients/deep/MatMul_grad/tuple/control_dependency"
      input: "deep/dropout/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/Sum"
      op: "Sum"
      input: "train/gradients/deep/dropout/mul_grad/mul"
      input: "train/gradients/deep/dropout/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deep/dropout/mul_grad/Sum"
      input: "train/gradients/deep/dropout/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/mul_1"
      op: "Mul"
      input: "deep/dropout/div"
      input: "train/gradients/deep/MatMul_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/deep/dropout/mul_grad/mul_1"
      input: "train/gradients/deep/dropout/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/deep/dropout/mul_grad/Sum_1"
      input: "train/gradients/deep/dropout/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/dropout/mul_grad/Reshape"
      input: "^train/gradients/deep/dropout/mul_grad/Reshape_1"
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/dropout/mul_grad/Reshape"
      input: "^train/gradients/deep/dropout/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout/mul_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/dropout/mul_grad/Reshape_1"
      input: "^train/gradients/deep/dropout/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout/mul_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/Shape"
      op: "Shape"
      input: "deep/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/deep/dropout/div_grad/Shape"
      input: "train/gradients/deep/dropout/div_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/RealDiv"
      op: "RealDiv"
      input: "train/gradients/deep/dropout/mul_grad/tuple/control_dependency"
      input: "deep/dropout/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/Sum"
      op: "Sum"
      input: "train/gradients/deep/dropout/div_grad/RealDiv"
      input: "train/gradients/deep/dropout/div_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deep/dropout/div_grad/Sum"
      input: "train/gradients/deep/dropout/div_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/Neg"
      op: "Neg"
      input: "deep/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/RealDiv_1"
      op: "RealDiv"
      input: "train/gradients/deep/dropout/div_grad/Neg"
      input: "deep/dropout/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/RealDiv_2"
      op: "RealDiv"
      input: "train/gradients/deep/dropout/div_grad/RealDiv_1"
      input: "deep/dropout/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/mul"
      op: "Mul"
      input: "train/gradients/deep/dropout/mul_grad/tuple/control_dependency"
      input: "train/gradients/deep/dropout/div_grad/RealDiv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/deep/dropout/div_grad/mul"
      input: "train/gradients/deep/dropout/div_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/deep/dropout/div_grad/Sum_1"
      input: "train/gradients/deep/dropout/div_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/dropout/div_grad/Reshape"
      input: "^train/gradients/deep/dropout/div_grad/Reshape_1"
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/dropout/div_grad/Reshape"
      input: "^train/gradients/deep/dropout/div_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout/div_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/dropout/div_grad/Reshape_1"
      input: "^train/gradients/deep/dropout/div_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout/div_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Reshape_grad/Shape"
      op: "Shape"
      input: "fm/Mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/Reshape_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deep/dropout/div_grad/tuple/control_dependency"
      input: "train/gradients/deep/Reshape_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\t\000\000\000\n\000\000\000"
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/Shape_1"
      op: "Shape"
      input: "fm/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/fm/Mul_1_grad/Shape"
      input: "train/gradients/fm/Mul_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/mul"
      op: "Mul"
      input: "train/gradients/deep/Reshape_grad/Reshape"
      input: "fm/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/Sum"
      op: "Sum"
      input: "train/gradients/fm/Mul_1_grad/mul"
      input: "train/gradients/fm/Mul_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/fm/Mul_1_grad/Sum"
      input: "train/gradients/fm/Mul_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/mul_1"
      op: "Mul"
      input: "fm/feature_embeddings/read"
      input: "train/gradients/deep/Reshape_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/fm/Mul_1_grad/mul_1"
      input: "train/gradients/fm/Mul_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/fm/Mul_1_grad/Sum_1"
      input: "train/gradients/fm/Mul_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/fm/Mul_1_grad/Reshape"
      input: "^train/gradients/fm/Mul_1_grad/Reshape_1"
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/fm/Mul_1_grad/Reshape"
      input: "^train/gradients/fm/Mul_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/fm/Mul_1_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/fm/Mul_1_grad/Reshape_1"
      input: "^train/gradients/fm/Mul_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/fm/Mul_1_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/beta1_power/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.8999999761581421
          }
        }
      }
    }
    node {
      name: "train/beta1_power"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "train/beta1_power/Assign"
      op: "Assign"
      input: "train/beta1_power"
      input: "train/beta1_power/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "train/beta1_power/read"
      op: "Identity"
      input: "train/beta1_power"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/beta2_power/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9990000128746033
          }
        }
      }
    }
    node {
      name: "train/beta2_power"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "train/beta2_power/Assign"
      op: "Assign"
      input: "train/beta2_power"
      input: "train/beta2_power/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "train/beta2_power/read"
      op: "Identity"
      input: "train/beta2_power"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "fm/feature_embeddings/Adam/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "fm/feature_embeddings/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 9
            }
            dim {
              size: 10
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "fm/feature_embeddings/Adam/Assign"
      op: "Assign"
      input: "fm/feature_embeddings/Adam"
      input: "fm/feature_embeddings/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "fm/feature_embeddings/Adam/read"
      op: "Identity"
      input: "fm/feature_embeddings/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/feature_embeddings/Adam_1/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "fm/feature_embeddings/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 9
            }
            dim {
              size: 10
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "fm/feature_embeddings/Adam_1/Assign"
      op: "Assign"
      input: "fm/feature_embeddings/Adam_1"
      input: "fm/feature_embeddings/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "fm/feature_embeddings/Adam_1/read"
      op: "Identity"
      input: "fm/feature_embeddings/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_layer0/Adam/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/weights_layer0/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 90
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_layer0/Adam/Assign"
      op: "Assign"
      input: "deep/weights_layer0/Adam"
      input: "deep/weights_layer0/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_layer0/Adam/read"
      op: "Identity"
      input: "deep/weights_layer0/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_layer0/Adam_1/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/weights_layer0/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 90
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_layer0/Adam_1/Assign"
      op: "Assign"
      input: "deep/weights_layer0/Adam_1"
      input: "deep/weights_layer0/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_layer0/Adam_1/read"
      op: "Identity"
      input: "deep/weights_layer0/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_bias0/Adam/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/weights_bias0/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_bias0/Adam/Assign"
      op: "Assign"
      input: "deep/weights_bias0/Adam"
      input: "deep/weights_bias0/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_bias0/Adam/read"
      op: "Identity"
      input: "deep/weights_bias0/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_bias0/Adam_1/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/weights_bias0/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_bias0/Adam_1/Assign"
      op: "Assign"
      input: "deep/weights_bias0/Adam_1"
      input: "deep/weights_bias0/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_bias0/Adam_1/read"
      op: "Identity"
      input: "deep/weights_bias0/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_layer1/Adam/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/weights_layer1/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_layer1/Adam/Assign"
      op: "Assign"
      input: "deep/weights_layer1/Adam"
      input: "deep/weights_layer1/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_layer1/Adam/read"
      op: "Identity"
      input: "deep/weights_layer1/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_layer1/Adam_1/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/weights_layer1/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_layer1/Adam_1/Assign"
      op: "Assign"
      input: "deep/weights_layer1/Adam_1"
      input: "deep/weights_layer1/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_layer1/Adam_1/read"
      op: "Identity"
      input: "deep/weights_layer1/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_bias1/Adam/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/weights_bias1/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_bias1/Adam/Assign"
      op: "Assign"
      input: "deep/weights_bias1/Adam"
      input: "deep/weights_bias1/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_bias1/Adam/read"
      op: "Identity"
      input: "deep/weights_bias1/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_bias1/Adam_1/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/weights_bias1/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_bias1/Adam_1/Assign"
      op: "Assign"
      input: "deep/weights_bias1/Adam_1"
      input: "deep/weights_bias1/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_bias1/Adam_1/read"
      op: "Identity"
      input: "deep/weights_bias1/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/Adam/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/Adam/Assign"
      op: "Assign"
      input: "deepfm/concat_projection0/Adam"
      input: "deepfm/concat_projection0/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/Adam/read"
      op: "Identity"
      input: "deepfm/concat_projection0/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/Adam_1/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/Adam_1/Assign"
      op: "Assign"
      input: "deepfm/concat_projection0/Adam_1"
      input: "deepfm/concat_projection0/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/Adam_1/read"
      op: "Identity"
      input: "deepfm/concat_projection0/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/Adam/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/Adam/Assign"
      op: "Assign"
      input: "deepfm/concat_bias0/Adam"
      input: "deepfm/concat_bias0/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/Adam/read"
      op: "Identity"
      input: "deepfm/concat_bias0/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/Adam_1/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/Adam_1/Assign"
      op: "Assign"
      input: "deepfm/concat_bias0/Adam_1"
      input: "deepfm/concat_bias0/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/Adam_1/read"
      op: "Identity"
      input: "deepfm/concat_bias0/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/Adam/learning_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.009999999776482582
          }
        }
      }
    }
    node {
      name: "train/Adam/beta1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.8999999761581421
          }
        }
      }
    }
    node {
      name: "train/Adam/beta2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9990000128746033
          }
        }
      }
    }
    node {
      name: "train/Adam/epsilon"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.99999993922529e-09
          }
        }
      }
    }
    node {
      name: "train/Adam/update_fm/feature_embeddings/ApplyAdam"
      op: "ApplyAdam"
      input: "fm/feature_embeddings"
      input: "fm/feature_embeddings/Adam"
      input: "fm/feature_embeddings/Adam_1"
      input: "train/beta1_power/read"
      input: "train/beta2_power/read"
      input: "train/Adam/learning_rate"
      input: "train/Adam/beta1"
      input: "train/Adam/beta2"
      input: "train/Adam/epsilon"
      input: "train/gradients/fm/Mul_1_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/Adam/update_deep/weights_layer0/ApplyAdam"
      op: "ApplyAdam"
      input: "deep/weights_layer0"
      input: "deep/weights_layer0/Adam"
      input: "deep/weights_layer0/Adam_1"
      input: "train/beta1_power/read"
      input: "train/beta2_power/read"
      input: "train/Adam/learning_rate"
      input: "train/Adam/beta1"
      input: "train/Adam/beta2"
      input: "train/Adam/epsilon"
      input: "train/gradients/deep/MatMul_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/Adam/update_deep/weights_bias0/ApplyAdam"
      op: "ApplyAdam"
      input: "deep/weights_bias0"
      input: "deep/weights_bias0/Adam"
      input: "deep/weights_bias0/Adam_1"
      input: "train/beta1_power/read"
      input: "train/beta2_power/read"
      input: "train/Adam/learning_rate"
      input: "train/Adam/beta1"
      input: "train/Adam/beta2"
      input: "train/Adam/epsilon"
      input: "train/gradients/deep/Add_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/Adam/update_deep/weights_layer1/ApplyAdam"
      op: "ApplyAdam"
      input: "deep/weights_layer1"
      input: "deep/weights_layer1/Adam"
      input: "deep/weights_layer1/Adam_1"
      input: "train/beta1_power/read"
      input: "train/beta2_power/read"
      input: "train/Adam/learning_rate"
      input: "train/Adam/beta1"
      input: "train/Adam/beta2"
      input: "train/Adam/epsilon"
      input: "train/gradients/deep/MatMul_1_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/Adam/update_deep/weights_bias1/ApplyAdam"
      op: "ApplyAdam"
      input: "deep/weights_bias1"
      input: "deep/weights_bias1/Adam"
      input: "deep/weights_bias1/Adam_1"
      input: "train/beta1_power/read"
      input: "train/beta2_power/read"
      input: "train/Adam/learning_rate"
      input: "train/Adam/beta1"
      input: "train/Adam/beta2"
      input: "train/Adam/epsilon"
      input: "train/gradients/deep/Add_1_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/Adam/update_deepfm/concat_projection0/ApplyAdam"
      op: "ApplyAdam"
      input: "deepfm/concat_projection0"
      input: "deepfm/concat_projection0/Adam"
      input: "deepfm/concat_projection0/Adam_1"
      input: "train/beta1_power/read"
      input: "train/beta2_power/read"
      input: "train/Adam/learning_rate"
      input: "train/Adam/beta1"
      input: "train/Adam/beta2"
      input: "train/Adam/epsilon"
      input: "train/gradients/deepfm/MatMul_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/Adam/update_deepfm/concat_bias0/ApplyAdam"
      op: "ApplyAdam"
      input: "deepfm/concat_bias0"
      input: "deepfm/concat_bias0/Adam"
      input: "deepfm/concat_bias0/Adam_1"
      input: "train/beta1_power/read"
      input: "train/beta2_power/read"
      input: "train/Adam/learning_rate"
      input: "train/Adam/beta1"
      input: "train/Adam/beta2"
      input: "train/Adam/epsilon"
      input: "train/gradients/deepfm/out_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/Adam/mul"
      op: "Mul"
      input: "train/beta1_power/read"
      input: "train/Adam/beta1"
      input: "^train/Adam/update_fm/feature_embeddings/ApplyAdam"
      input: "^train/Adam/update_deep/weights_layer0/ApplyAdam"
      input: "^train/Adam/update_deep/weights_bias0/ApplyAdam"
      input: "^train/Adam/update_deep/weights_layer1/ApplyAdam"
      input: "^train/Adam/update_deep/weights_bias1/ApplyAdam"
      input: "^train/Adam/update_deepfm/concat_projection0/ApplyAdam"
      input: "^train/Adam/update_deepfm/concat_bias0/ApplyAdam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/Adam/Assign"
      op: "Assign"
      input: "train/beta1_power"
      input: "train/Adam/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "train/Adam/mul_1"
      op: "Mul"
      input: "train/beta2_power/read"
      input: "train/Adam/beta2"
      input: "^train/Adam/update_fm/feature_embeddings/ApplyAdam"
      input: "^train/Adam/update_deep/weights_layer0/ApplyAdam"
      input: "^train/Adam/update_deep/weights_bias0/ApplyAdam"
      input: "^train/Adam/update_deep/weights_layer1/ApplyAdam"
      input: "^train/Adam/update_deep/weights_bias1/ApplyAdam"
      input: "^train/Adam/update_deepfm/concat_projection0/ApplyAdam"
      input: "^train/Adam/update_deepfm/concat_bias0/ApplyAdam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/Adam/Assign_1"
      op: "Assign"
      input: "train/beta2_power"
      input: "train/Adam/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "train/Adam"
      op: "NoOp"
      input: "^train/Adam/update_fm/feature_embeddings/ApplyAdam"
      input: "^train/Adam/update_deep/weights_layer0/ApplyAdam"
      input: "^train/Adam/update_deep/weights_bias0/ApplyAdam"
      input: "^train/Adam/update_deep/weights_layer1/ApplyAdam"
      input: "^train/Adam/update_deep/weights_bias1/ApplyAdam"
      input: "^train/Adam/update_deepfm/concat_projection0/ApplyAdam"
      input: "^train/Adam/update_deepfm/concat_bias0/ApplyAdam"
      input: "^train/Adam/Assign"
      input: "^train/Adam/Assign_1"
    }
    node {
      name: "train/init"
      op: "NoOp"
      input: "^fm/feature_embeddings/Assign"
      input: "^fm/feature_bias_0/Assign"
      input: "^deep/weights_layer0/Assign"
      input: "^deep/weights_bias0/Assign"
      input: "^deep/weights_layer1/Assign"
      input: "^deep/weights_bias1/Assign"
      input: "^deepfm/concat_projection0/Assign"
      input: "^deepfm/concat_bias0/Assign"
      input: "^train/beta1_power/Assign"
      input: "^train/beta2_power/Assign"
      input: "^fm/feature_embeddings/Adam/Assign"
      input: "^fm/feature_embeddings/Adam_1/Assign"
      input: "^deep/weights_layer0/Adam/Assign"
      input: "^deep/weights_layer0/Adam_1/Assign"
      input: "^deep/weights_bias0/Adam/Assign"
      input: "^deep/weights_bias0/Adam_1/Assign"
      input: "^deep/weights_layer1/Adam/Assign"
      input: "^deep/weights_layer1/Adam_1/Assign"
      input: "^deep/weights_bias1/Adam/Assign"
      input: "^deep/weights_bias1/Adam_1/Assign"
      input: "^deepfm/concat_projection0/Adam/Assign"
      input: "^deepfm/concat_projection0/Adam_1/Assign"
      input: "^deepfm/concat_bias0/Adam/Assign"
      input: "^deepfm/concat_bias0/Adam_1/Assign"
    }
    node {
      name: "save/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 24
              }
            }
            string_val: "deep/weights_bias0"
            string_val: "deep/weights_bias0/Adam"
            string_val: "deep/weights_bias0/Adam_1"
            string_val: "deep/weights_bias1"
            string_val: "deep/weights_bias1/Adam"
            string_val: "deep/weights_bias1/Adam_1"
            string_val: "deep/weights_layer0"
            string_val: "deep/weights_layer0/Adam"
            string_val: "deep/weights_layer0/Adam_1"
            string_val: "deep/weights_layer1"
            string_val: "deep/weights_layer1/Adam"
            string_val: "deep/weights_layer1/Adam_1"
            string_val: "deepfm/concat_bias0"
            string_val: "deepfm/concat_bias0/Adam"
            string_val: "deepfm/concat_bias0/Adam_1"
            string_val: "deepfm/concat_projection0"
            string_val: "deepfm/concat_projection0/Adam"
            string_val: "deepfm/concat_projection0/Adam_1"
            string_val: "fm/feature_bias_0"
            string_val: "fm/feature_embeddings"
            string_val: "fm/feature_embeddings/Adam"
            string_val: "fm/feature_embeddings/Adam_1"
            string_val: "train/beta1_power"
            string_val: "train/beta2_power"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 24
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/Const"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "deep/weights_bias0"
      input: "deep/weights_bias0/Adam"
      input: "deep/weights_bias0/Adam_1"
      input: "deep/weights_bias1"
      input: "deep/weights_bias1/Adam"
      input: "deep/weights_bias1/Adam_1"
      input: "deep/weights_layer0"
      input: "deep/weights_layer0/Adam"
      input: "deep/weights_layer0/Adam_1"
      input: "deep/weights_layer1"
      input: "deep/weights_layer1/Adam"
      input: "deep/weights_layer1/Adam_1"
      input: "deepfm/concat_bias0"
      input: "deepfm/concat_bias0/Adam"
      input: "deepfm/concat_bias0/Adam_1"
      input: "deepfm/concat_projection0"
      input: "deepfm/concat_projection0/Adam"
      input: "deepfm/concat_projection0/Adam_1"
      input: "fm/feature_bias_0"
      input: "fm/feature_embeddings"
      input: "fm/feature_embeddings/Adam"
      input: "fm/feature_embeddings/Adam_1"
      input: "train/beta1_power"
      input: "train/beta2_power"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/Const"
      input: "^save/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias0"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign"
      op: "Assign"
      input: "deep/weights_bias0"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_1/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias0/Adam"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_1/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_1"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_1/tensor_names"
      input: "save/RestoreV2_1/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_1"
      op: "Assign"
      input: "deep/weights_bias0/Adam"
      input: "save/RestoreV2_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias0/Adam_1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_2/tensor_names"
      input: "save/RestoreV2_2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_2"
      op: "Assign"
      input: "deep/weights_bias0/Adam_1"
      input: "save/RestoreV2_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_3/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_3/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_3"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_3/tensor_names"
      input: "save/RestoreV2_3/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_3"
      op: "Assign"
      input: "deep/weights_bias1"
      input: "save/RestoreV2_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_4/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias1/Adam"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_4/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_4"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_4/tensor_names"
      input: "save/RestoreV2_4/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_4"
      op: "Assign"
      input: "deep/weights_bias1/Adam"
      input: "save/RestoreV2_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_5/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias1/Adam_1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_5/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_5"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_5/tensor_names"
      input: "save/RestoreV2_5/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_5"
      op: "Assign"
      input: "deep/weights_bias1/Adam_1"
      input: "save/RestoreV2_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_6/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer0"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_6/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_6"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_6/tensor_names"
      input: "save/RestoreV2_6/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_6"
      op: "Assign"
      input: "deep/weights_layer0"
      input: "save/RestoreV2_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_7/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer0/Adam"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_7/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_7"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_7/tensor_names"
      input: "save/RestoreV2_7/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_7"
      op: "Assign"
      input: "deep/weights_layer0/Adam"
      input: "save/RestoreV2_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_8/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer0/Adam_1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_8/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_8"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_8/tensor_names"
      input: "save/RestoreV2_8/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_8"
      op: "Assign"
      input: "deep/weights_layer0/Adam_1"
      input: "save/RestoreV2_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_9/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_9/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_9"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_9/tensor_names"
      input: "save/RestoreV2_9/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_9"
      op: "Assign"
      input: "deep/weights_layer1"
      input: "save/RestoreV2_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_10/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer1/Adam"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_10/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_10"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_10/tensor_names"
      input: "save/RestoreV2_10/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_10"
      op: "Assign"
      input: "deep/weights_layer1/Adam"
      input: "save/RestoreV2_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_11/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer1/Adam_1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_11/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_11"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_11/tensor_names"
      input: "save/RestoreV2_11/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_11"
      op: "Assign"
      input: "deep/weights_layer1/Adam_1"
      input: "save/RestoreV2_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_12/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_bias0"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_12/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_12"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_12/tensor_names"
      input: "save/RestoreV2_12/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_12"
      op: "Assign"
      input: "deepfm/concat_bias0"
      input: "save/RestoreV2_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_13/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_bias0/Adam"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_13/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_13"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_13/tensor_names"
      input: "save/RestoreV2_13/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_13"
      op: "Assign"
      input: "deepfm/concat_bias0/Adam"
      input: "save/RestoreV2_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_14/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_bias0/Adam_1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_14/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_14"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_14/tensor_names"
      input: "save/RestoreV2_14/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_14"
      op: "Assign"
      input: "deepfm/concat_bias0/Adam_1"
      input: "save/RestoreV2_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_15/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_projection0"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_15/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_15"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_15/tensor_names"
      input: "save/RestoreV2_15/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_15"
      op: "Assign"
      input: "deepfm/concat_projection0"
      input: "save/RestoreV2_15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_16/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_projection0/Adam"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_16/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_16"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_16/tensor_names"
      input: "save/RestoreV2_16/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_16"
      op: "Assign"
      input: "deepfm/concat_projection0/Adam"
      input: "save/RestoreV2_16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_17/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_projection0/Adam_1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_17/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_17"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_17/tensor_names"
      input: "save/RestoreV2_17/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_17"
      op: "Assign"
      input: "deepfm/concat_projection0/Adam_1"
      input: "save/RestoreV2_17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_18/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_bias_0"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_18/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_18"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_18/tensor_names"
      input: "save/RestoreV2_18/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_18"
      op: "Assign"
      input: "fm/feature_bias_0"
      input: "save/RestoreV2_18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_19/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_embeddings"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_19/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_19"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_19/tensor_names"
      input: "save/RestoreV2_19/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_19"
      op: "Assign"
      input: "fm/feature_embeddings"
      input: "save/RestoreV2_19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_20/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_embeddings/Adam"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_20/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_20"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_20/tensor_names"
      input: "save/RestoreV2_20/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_20"
      op: "Assign"
      input: "fm/feature_embeddings/Adam"
      input: "save/RestoreV2_20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_21/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_embeddings/Adam_1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_21/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_21"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_21/tensor_names"
      input: "save/RestoreV2_21/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_21"
      op: "Assign"
      input: "fm/feature_embeddings/Adam_1"
      input: "save/RestoreV2_21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_22/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "train/beta1_power"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_22/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_22"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_22/tensor_names"
      input: "save/RestoreV2_22/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_22"
      op: "Assign"
      input: "train/beta1_power"
      input: "save/RestoreV2_22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_23/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "train/beta2_power"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_23/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_23"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_23/tensor_names"
      input: "save/RestoreV2_23/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_23"
      op: "Assign"
      input: "train/beta2_power"
      input: "save/RestoreV2_23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/Assign"
      input: "^save/Assign_1"
      input: "^save/Assign_2"
      input: "^save/Assign_3"
      input: "^save/Assign_4"
      input: "^save/Assign_5"
      input: "^save/Assign_6"
      input: "^save/Assign_7"
      input: "^save/Assign_8"
      input: "^save/Assign_9"
      input: "^save/Assign_10"
      input: "^save/Assign_11"
      input: "^save/Assign_12"
      input: "^save/Assign_13"
      input: "^save/Assign_14"
      input: "^save/Assign_15"
      input: "^save/Assign_16"
      input: "^save/Assign_17"
      input: "^save/Assign_18"
      input: "^save/Assign_19"
      input: "^save/Assign_20"
      input: "^save/Assign_21"
      input: "^save/Assign_22"
      input: "^save/Assign_23"
    }
    node {
      name: "init"
      op: "NoOp"
      input: "^Deep_Estimate/auc/true_positives/Assign"
      input: "^Deep_Estimate/auc/false_negatives/Assign"
      input: "^Deep_Estimate/auc/true_negatives/Assign"
      input: "^Deep_Estimate/auc/false_positives/Assign"
    }
    node {
      name: "Merge/MergeSummary"
      op: "MergeSummary"
      input: "deep_fm/score"
      input: "Deep_Estimate/loss"
      input: "Deep_Estimate/auc1"
      input: "Deep_Estimate/auc2"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_1/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_d6d05420dc7141c8a09f23291309babd/part"
          }
        }
      }
    }
    node {
      name: "save_1/StringJoin"
      op: "StringJoin"
      input: "save_1/Const"
      input: "save_1/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save_1/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save_1/ShardedFilename/shard"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save_1/ShardedFilename"
      op: "ShardedFilename"
      input: "save_1/StringJoin"
      input: "save_1/ShardedFilename/shard"
      input: "save_1/num_shards"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 24
              }
            }
            string_val: "deep/weights_bias0"
            string_val: "deep/weights_bias0/Adam"
            string_val: "deep/weights_bias0/Adam_1"
            string_val: "deep/weights_bias1"
            string_val: "deep/weights_bias1/Adam"
            string_val: "deep/weights_bias1/Adam_1"
            string_val: "deep/weights_layer0"
            string_val: "deep/weights_layer0/Adam"
            string_val: "deep/weights_layer0/Adam_1"
            string_val: "deep/weights_layer1"
            string_val: "deep/weights_layer1/Adam"
            string_val: "deep/weights_layer1/Adam_1"
            string_val: "deepfm/concat_bias0"
            string_val: "deepfm/concat_bias0/Adam"
            string_val: "deepfm/concat_bias0/Adam_1"
            string_val: "deepfm/concat_projection0"
            string_val: "deepfm/concat_projection0/Adam"
            string_val: "deepfm/concat_projection0/Adam_1"
            string_val: "fm/feature_bias_0"
            string_val: "fm/feature_embeddings"
            string_val: "fm/feature_embeddings/Adam"
            string_val: "fm/feature_embeddings/Adam_1"
            string_val: "train/beta1_power"
            string_val: "train/beta2_power"
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 24
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 24
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2"
      op: "SaveV2"
      input: "save_1/ShardedFilename"
      input: "save_1/SaveV2/tensor_names"
      input: "save_1/SaveV2/shape_and_slices"
      input: "deep/weights_bias0"
      input: "deep/weights_bias0/Adam"
      input: "deep/weights_bias0/Adam_1"
      input: "deep/weights_bias1"
      input: "deep/weights_bias1/Adam"
      input: "deep/weights_bias1/Adam_1"
      input: "deep/weights_layer0"
      input: "deep/weights_layer0/Adam"
      input: "deep/weights_layer0/Adam_1"
      input: "deep/weights_layer1"
      input: "deep/weights_layer1/Adam"
      input: "deep/weights_layer1/Adam_1"
      input: "deepfm/concat_bias0"
      input: "deepfm/concat_bias0/Adam"
      input: "deepfm/concat_bias0/Adam_1"
      input: "deepfm/concat_projection0"
      input: "deepfm/concat_projection0/Adam"
      input: "deepfm/concat_projection0/Adam_1"
      input: "fm/feature_bias_0"
      input: "fm/feature_embeddings"
      input: "fm/feature_embeddings/Adam"
      input: "fm/feature_embeddings/Adam_1"
      input: "train/beta1_power"
      input: "train/beta2_power"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/control_dependency"
      op: "Identity"
      input: "save_1/ShardedFilename"
      input: "^save_1/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_1/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save_1/ShardedFilename"
      input: "^save_1/control_dependency"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save_1/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save_1/Const"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Identity"
      op: "Identity"
      input: "save_1/Const"
      input: "^save_1/control_dependency"
      input: "^save_1/MergeV2Checkpoints"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias0"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2/tensor_names"
      input: "save_1/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign"
      op: "Assign"
      input: "deep/weights_bias0"
      input: "save_1/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_1/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias0/Adam"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_1/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_1"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_1/tensor_names"
      input: "save_1/RestoreV2_1/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_1"
      op: "Assign"
      input: "deep/weights_bias0/Adam"
      input: "save_1/RestoreV2_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias0/Adam_1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_2"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_2/tensor_names"
      input: "save_1/RestoreV2_2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_2"
      op: "Assign"
      input: "deep/weights_bias0/Adam_1"
      input: "save_1/RestoreV2_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_3/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_3/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_3"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_3/tensor_names"
      input: "save_1/RestoreV2_3/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_3"
      op: "Assign"
      input: "deep/weights_bias1"
      input: "save_1/RestoreV2_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_4/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias1/Adam"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_4/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_4"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_4/tensor_names"
      input: "save_1/RestoreV2_4/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_4"
      op: "Assign"
      input: "deep/weights_bias1/Adam"
      input: "save_1/RestoreV2_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_5/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias1/Adam_1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_5/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_5"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_5/tensor_names"
      input: "save_1/RestoreV2_5/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_5"
      op: "Assign"
      input: "deep/weights_bias1/Adam_1"
      input: "save_1/RestoreV2_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_6/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer0"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_6/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_6"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_6/tensor_names"
      input: "save_1/RestoreV2_6/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_6"
      op: "Assign"
      input: "deep/weights_layer0"
      input: "save_1/RestoreV2_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_7/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer0/Adam"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_7/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_7"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_7/tensor_names"
      input: "save_1/RestoreV2_7/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_7"
      op: "Assign"
      input: "deep/weights_layer0/Adam"
      input: "save_1/RestoreV2_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_8/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer0/Adam_1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_8/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_8"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_8/tensor_names"
      input: "save_1/RestoreV2_8/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_8"
      op: "Assign"
      input: "deep/weights_layer0/Adam_1"
      input: "save_1/RestoreV2_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_9/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_9/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_9"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_9/tensor_names"
      input: "save_1/RestoreV2_9/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_9"
      op: "Assign"
      input: "deep/weights_layer1"
      input: "save_1/RestoreV2_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_10/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer1/Adam"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_10/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_10"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_10/tensor_names"
      input: "save_1/RestoreV2_10/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_10"
      op: "Assign"
      input: "deep/weights_layer1/Adam"
      input: "save_1/RestoreV2_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_11/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer1/Adam_1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_11/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_11"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_11/tensor_names"
      input: "save_1/RestoreV2_11/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_11"
      op: "Assign"
      input: "deep/weights_layer1/Adam_1"
      input: "save_1/RestoreV2_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_12/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_bias0"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_12/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_12"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_12/tensor_names"
      input: "save_1/RestoreV2_12/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_12"
      op: "Assign"
      input: "deepfm/concat_bias0"
      input: "save_1/RestoreV2_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_13/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_bias0/Adam"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_13/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_13"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_13/tensor_names"
      input: "save_1/RestoreV2_13/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_13"
      op: "Assign"
      input: "deepfm/concat_bias0/Adam"
      input: "save_1/RestoreV2_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_14/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_bias0/Adam_1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_14/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_14"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_14/tensor_names"
      input: "save_1/RestoreV2_14/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_14"
      op: "Assign"
      input: "deepfm/concat_bias0/Adam_1"
      input: "save_1/RestoreV2_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_15/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_projection0"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_15/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_15"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_15/tensor_names"
      input: "save_1/RestoreV2_15/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_15"
      op: "Assign"
      input: "deepfm/concat_projection0"
      input: "save_1/RestoreV2_15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_16/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_projection0/Adam"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_16/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_16"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_16/tensor_names"
      input: "save_1/RestoreV2_16/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_16"
      op: "Assign"
      input: "deepfm/concat_projection0/Adam"
      input: "save_1/RestoreV2_16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_17/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_projection0/Adam_1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_17/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_17"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_17/tensor_names"
      input: "save_1/RestoreV2_17/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_17"
      op: "Assign"
      input: "deepfm/concat_projection0/Adam_1"
      input: "save_1/RestoreV2_17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_18/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_bias_0"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_18/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_18"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_18/tensor_names"
      input: "save_1/RestoreV2_18/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_18"
      op: "Assign"
      input: "fm/feature_bias_0"
      input: "save_1/RestoreV2_18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_19/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_embeddings"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_19/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_19"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_19/tensor_names"
      input: "save_1/RestoreV2_19/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_19"
      op: "Assign"
      input: "fm/feature_embeddings"
      input: "save_1/RestoreV2_19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_20/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_embeddings/Adam"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_20/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_20"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_20/tensor_names"
      input: "save_1/RestoreV2_20/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_20"
      op: "Assign"
      input: "fm/feature_embeddings/Adam"
      input: "save_1/RestoreV2_20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_21/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_embeddings/Adam_1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_21/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_21"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_21/tensor_names"
      input: "save_1/RestoreV2_21/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_21"
      op: "Assign"
      input: "fm/feature_embeddings/Adam_1"
      input: "save_1/RestoreV2_21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_22/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "train/beta1_power"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_22/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_22"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_22/tensor_names"
      input: "save_1/RestoreV2_22/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_22"
      op: "Assign"
      input: "train/beta1_power"
      input: "save_1/RestoreV2_22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_23/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "train/beta2_power"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_23/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_23"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_23/tensor_names"
      input: "save_1/RestoreV2_23/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_23"
      op: "Assign"
      input: "train/beta2_power"
      input: "save_1/RestoreV2_23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/restore_shard"
      op: "NoOp"
      input: "^save_1/Assign"
      input: "^save_1/Assign_1"
      input: "^save_1/Assign_2"
      input: "^save_1/Assign_3"
      input: "^save_1/Assign_4"
      input: "^save_1/Assign_5"
      input: "^save_1/Assign_6"
      input: "^save_1/Assign_7"
      input: "^save_1/Assign_8"
      input: "^save_1/Assign_9"
      input: "^save_1/Assign_10"
      input: "^save_1/Assign_11"
      input: "^save_1/Assign_12"
      input: "^save_1/Assign_13"
      input: "^save_1/Assign_14"
      input: "^save_1/Assign_15"
      input: "^save_1/Assign_16"
      input: "^save_1/Assign_17"
      input: "^save_1/Assign_18"
      input: "^save_1/Assign_19"
      input: "^save_1/Assign_20"
      input: "^save_1/Assign_21"
      input: "^save_1/Assign_22"
      input: "^save_1/Assign_23"
    }
    node {
      name: "save_1/restore_all"
      op: "NoOp"
      input: "^save_1/restore_shard"
    }
    versions {
      producer: 22
    }
  }
  saver_def {
    filename_tensor_name: "save_1/Const:0"
    save_tensor_name: "save_1/Identity:0"
    restore_op_name: "save_1/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "local_variables"
    value {
      node_list {
        value: "Deep_Estimate/auc/true_positives:0"
        value: "Deep_Estimate/auc/false_negatives:0"
        value: "Deep_Estimate/auc/true_negatives:0"
        value: "Deep_Estimate/auc/false_positives:0"
      }
    }
  }
  collection_def {
    key: "summaries"
    value {
      node_list {
        value: "deep_fm/score:0"
        value: "Deep_Estimate/loss:0"
        value: "Deep_Estimate/auc1:0"
        value: "Deep_Estimate/auc2:0"
      }
    }
  }
  collection_def {
    key: "train_op"
    value {
      node_list {
        value: "train/Adam"
      }
    }
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\n\027fm/feature_embeddings:0\022\034fm/feature_embeddings/Assign\032\034fm/feature_embeddings/read:0"
        value: "\n\023fm/feature_bias_0:0\022\030fm/feature_bias_0/Assign\032\030fm/feature_bias_0/read:0"
        value: "\n\025deep/weights_layer0:0\022\032deep/weights_layer0/Assign\032\032deep/weights_layer0/read:0"
        value: "\n\024deep/weights_bias0:0\022\031deep/weights_bias0/Assign\032\031deep/weights_bias0/read:0"
        value: "\n\025deep/weights_layer1:0\022\032deep/weights_layer1/Assign\032\032deep/weights_layer1/read:0"
        value: "\n\024deep/weights_bias1:0\022\031deep/weights_bias1/Assign\032\031deep/weights_bias1/read:0"
        value: "\n\033deepfm/concat_projection0:0\022 deepfm/concat_projection0/Assign\032 deepfm/concat_projection0/read:0"
        value: "\n\025deepfm/concat_bias0:0\022\032deepfm/concat_bias0/Assign\032\032deepfm/concat_bias0/read:0"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n\027fm/feature_embeddings:0\022\034fm/feature_embeddings/Assign\032\034fm/feature_embeddings/read:0"
        value: "\n\023fm/feature_bias_0:0\022\030fm/feature_bias_0/Assign\032\030fm/feature_bias_0/read:0"
        value: "\n\025deep/weights_layer0:0\022\032deep/weights_layer0/Assign\032\032deep/weights_layer0/read:0"
        value: "\n\024deep/weights_bias0:0\022\031deep/weights_bias0/Assign\032\031deep/weights_bias0/read:0"
        value: "\n\025deep/weights_layer1:0\022\032deep/weights_layer1/Assign\032\032deep/weights_layer1/read:0"
        value: "\n\024deep/weights_bias1:0\022\031deep/weights_bias1/Assign\032\031deep/weights_bias1/read:0"
        value: "\n\033deepfm/concat_projection0:0\022 deepfm/concat_projection0/Assign\032 deepfm/concat_projection0/read:0"
        value: "\n\025deepfm/concat_bias0:0\022\032deepfm/concat_bias0/Assign\032\032deepfm/concat_bias0/read:0"
        value: "\n\023train/beta1_power:0\022\030train/beta1_power/Assign\032\030train/beta1_power/read:0"
        value: "\n\023train/beta2_power:0\022\030train/beta2_power/Assign\032\030train/beta2_power/read:0"
        value: "\n\034fm/feature_embeddings/Adam:0\022!fm/feature_embeddings/Adam/Assign\032!fm/feature_embeddings/Adam/read:0"
        value: "\n\036fm/feature_embeddings/Adam_1:0\022#fm/feature_embeddings/Adam_1/Assign\032#fm/feature_embeddings/Adam_1/read:0"
        value: "\n\032deep/weights_layer0/Adam:0\022\037deep/weights_layer0/Adam/Assign\032\037deep/weights_layer0/Adam/read:0"
        value: "\n\034deep/weights_layer0/Adam_1:0\022!deep/weights_layer0/Adam_1/Assign\032!deep/weights_layer0/Adam_1/read:0"
        value: "\n\031deep/weights_bias0/Adam:0\022\036deep/weights_bias0/Adam/Assign\032\036deep/weights_bias0/Adam/read:0"
        value: "\n\033deep/weights_bias0/Adam_1:0\022 deep/weights_bias0/Adam_1/Assign\032 deep/weights_bias0/Adam_1/read:0"
        value: "\n\032deep/weights_layer1/Adam:0\022\037deep/weights_layer1/Adam/Assign\032\037deep/weights_layer1/Adam/read:0"
        value: "\n\034deep/weights_layer1/Adam_1:0\022!deep/weights_layer1/Adam_1/Assign\032!deep/weights_layer1/Adam_1/read:0"
        value: "\n\031deep/weights_bias1/Adam:0\022\036deep/weights_bias1/Adam/Assign\032\036deep/weights_bias1/Adam/read:0"
        value: "\n\033deep/weights_bias1/Adam_1:0\022 deep/weights_bias1/Adam_1/Assign\032 deep/weights_bias1/Adam_1/read:0"
        value: "\n deepfm/concat_projection0/Adam:0\022%deepfm/concat_projection0/Adam/Assign\032%deepfm/concat_projection0/Adam/read:0"
        value: "\n\"deepfm/concat_projection0/Adam_1:0\022\'deepfm/concat_projection0/Adam_1/Assign\032\'deepfm/concat_projection0/Adam_1/read:0"
        value: "\n\032deepfm/concat_bias0/Adam:0\022\037deepfm/concat_bias0/Adam/Assign\032\037deepfm/concat_bias0/Adam/read:0"
        value: "\n\034deepfm/concat_bias0/Adam_1:0\022!deepfm/concat_bias0/Adam_1/Assign\032!deepfm/concat_bias0/Adam_1/read:0"
      }
    }
  }
  signature_def {
    key: "serving_default"
    value {
      inputs {
        key: "inputs"
        value {
          name: "input:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 9
            }
          }
        }
      }
      outputs {
        key: "results"
        value {
          name: "score:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
}
