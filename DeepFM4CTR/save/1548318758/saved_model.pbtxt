saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "AddN"
        input_arg {
          name: "inputs"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "sum"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "ApplyAdam"
        input_arg {
          name: "var"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "m"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "v"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "beta1_power"
          type_attr: "T"
        }
        input_arg {
          name: "beta2_power"
          type_attr: "T"
        }
        input_arg {
          name: "lr"
          type_attr: "T"
        }
        input_arg {
          name: "beta1"
          type_attr: "T"
        }
        input_arg {
          name: "beta2"
          type_attr: "T"
        }
        input_arg {
          name: "epsilon"
          type_attr: "T"
        }
        input_arg {
          name: "grad"
          type_attr: "T"
        }
        output_arg {
          name: "out"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "use_nesterov"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "Assign"
        input_arg {
          name: "ref"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output_ref"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "validate_shape"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: true
          }
        }
        allows_uninitialized_input: true
      }
      op {
        name: "AssignAdd"
        input_arg {
          name: "ref"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output_ref"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "BroadcastGradientArgs"
        input_arg {
          name: "s0"
          type_attr: "T"
        }
        input_arg {
          name: "s1"
          type_attr: "T"
        }
        output_arg {
          name: "r0"
          type_attr: "T"
        }
        output_arg {
          name: "r1"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Cast"
        input_arg {
          name: "x"
          type_attr: "SrcT"
        }
        output_arg {
          name: "y"
          type_attr: "DstT"
        }
        attr {
          name: "SrcT"
          type: "type"
        }
        attr {
          name: "DstT"
          type: "type"
        }
      }
      op {
        name: "ConcatOffset"
        input_arg {
          name: "concat_dim"
          type: DT_INT32
        }
        input_arg {
          name: "shape"
          type: DT_INT32
          number_attr: "N"
        }
        output_arg {
          name: "offset"
          type: DT_INT32
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
      }
      op {
        name: "ConcatV2"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        input_arg {
          name: "axis"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "DynamicStitch"
        input_arg {
          name: "indices"
          type: DT_INT32
          number_attr: "N"
        }
        input_arg {
          name: "data"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "merged"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "ExpandDims"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "dim"
          type_attr: "Tdim"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tdim"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Fill"
        input_arg {
          name: "dims"
          type: DT_INT32
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Floor"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "FloorDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "FloorMod"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "Greater"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_UINT16
              type: DT_HALF
            }
          }
        }
      }
      op {
        name: "HistogramSummary"
        input_arg {
          name: "tag"
          type: DT_STRING
        }
        input_arg {
          name: "values"
          type_attr: "T"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_FLOAT
          }
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_UINT16
              type: DT_HALF
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "LogicalAnd"
        input_arg {
          name: "x"
          type: DT_BOOL
        }
        input_arg {
          name: "y"
          type: DT_BOOL
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        is_commutative: true
      }
      op {
        name: "LogicalNot"
        input_arg {
          name: "x"
          type: DT_BOOL
        }
        output_arg {
          name: "y"
          type: DT_BOOL
        }
      }
      op {
        name: "MatMul"
        input_arg {
          name: "a"
          type_attr: "T"
        }
        input_arg {
          name: "b"
          type_attr: "T"
        }
        output_arg {
          name: "product"
          type_attr: "T"
        }
        attr {
          name: "transpose_a"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "transpose_b"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Maximum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Mean"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "MergeSummary"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_stateful: true
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Neg"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "NoOp"
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "Prod"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RandomStandardNormal"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "RandomUniform"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "Range"
        input_arg {
          name: "start"
          type_attr: "Tidx"
        }
        input_arg {
          name: "limit"
          type_attr: "Tidx"
        }
        input_arg {
          name: "delta"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "Tidx"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Rank"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type: DT_INT32
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "RealDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Relu"
        input_arg {
          name: "features"
          type_attr: "T"
        }
        output_arg {
          name: "activations"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_UINT16
              type: DT_HALF
            }
          }
        }
      }
      op {
        name: "ReluGrad"
        input_arg {
          name: "gradients"
          type_attr: "T"
        }
        input_arg {
          name: "features"
          type_attr: "T"
        }
        output_arg {
          name: "backprops"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_UINT16
              type: DT_HALF
            }
          }
        }
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "ScalarSummary"
        input_arg {
          name: "tags"
          type: DT_STRING
        }
        input_arg {
          name: "values"
          type_attr: "T"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_UINT16
              type: DT_HALF
            }
          }
        }
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShapeN"
        input_arg {
          name: "input"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "Sigmoid"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "SigmoidGrad"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Slice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "size"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Square"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "StridedSlice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Sum"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT64
              type: DT_INT32
              type: DT_UINT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_HALF
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Tile"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "multiples"
          type_attr: "Tmultiples"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tmultiples"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Transpose"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "perm"
          type_attr: "Tperm"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tperm"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "VariableV2"
        output_arg {
          name: "ref"
          type_attr: "dtype"
          is_ref: true
        }
        attr {
          name: "shape"
          type: "shape"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
    }
    tags: "serve"
    tensorflow_version: "1.3.0"
    tensorflow_git_version: "b\'unknown\'"
  }
  graph_def {
    node {
      name: "input"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 9
            }
          }
        }
      }
    }
    node {
      name: "Placeholder"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    node {
      name: "fm/random_normal/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\t\000\000\000\n\000\000\000"
          }
        }
      }
    }
    node {
      name: "fm/random_normal/mean"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "fm/random_normal/stddev"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.009999999776482582
          }
        }
      }
    }
    node {
      name: "fm/random_normal/RandomStandardNormal"
      op: "RandomStandardNormal"
      input: "fm/random_normal/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 1548318758
        }
      }
      attr {
        key: "seed2"
        value {
          i: 5
        }
      }
    }
    node {
      name: "fm/random_normal/mul"
      op: "Mul"
      input: "fm/random_normal/RandomStandardNormal"
      input: "fm/random_normal/stddev"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/random_normal"
      op: "Add"
      input: "fm/random_normal/mul"
      input: "fm/random_normal/mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/feature_embeddings"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 9
            }
            dim {
              size: 10
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "fm/feature_embeddings/Assign"
      op: "Assign"
      input: "fm/feature_embeddings"
      input: "fm/random_normal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "fm/feature_embeddings/read"
      op: "Identity"
      input: "fm/feature_embeddings"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\377\377\377\377\t\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "fm/Reshape"
      op: "Reshape"
      input: "input"
      input: "fm/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/random_uniform/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\t\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "fm/random_uniform/min"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "fm/random_uniform/max"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "fm/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "fm/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 1548318758
        }
      }
      attr {
        key: "seed2"
        value {
          i: 16
        }
      }
    }
    node {
      name: "fm/random_uniform/sub"
      op: "Sub"
      input: "fm/random_uniform/max"
      input: "fm/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "fm/random_uniform/mul"
      op: "Mul"
      input: "fm/random_uniform/RandomUniform"
      input: "fm/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/random_uniform"
      op: "Add"
      input: "fm/random_uniform/mul"
      input: "fm/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/feature_bias_0"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 9
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "fm/feature_bias_0/Assign"
      op: "Assign"
      input: "fm/feature_bias_0"
      input: "fm/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "fm/feature_bias_0/read"
      op: "Identity"
      input: "fm/feature_bias_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/Mul"
      op: "Mul"
      input: "fm/feature_bias_0/read"
      input: "fm/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "fm/Sum"
      op: "Sum"
      input: "fm/Mul"
      input: "fm/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "fm/dropout/keep_prob"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "fm/Mul_1"
      op: "Mul"
      input: "fm/feature_embeddings/read"
      input: "fm/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "fm/Sum_1"
      op: "Sum"
      input: "fm/Mul_1"
      input: "fm/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "fm/Square"
      op: "Square"
      input: "fm/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/Square_1"
      op: "Square"
      input: "fm/Mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/Sum_2/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "fm/Sum_2"
      op: "Sum"
      input: "fm/Square_1"
      input: "fm/Sum_2/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "fm/Sub"
      op: "Sub"
      input: "fm/Square"
      input: "fm/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/mul/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "fm/mul"
      op: "Mul"
      input: "fm/mul/x"
      input: "fm/Sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/dropout_1/keep_prob"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "deep/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\377\377\377\377Z\000\000\000"
          }
        }
      }
    }
    node {
      name: "deep/Reshape"
      op: "Reshape"
      input: "fm/Mul_1"
      input: "deep/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout/keep_prob"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "deep/dropout/Shape"
      op: "Shape"
      input: "deep/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "deep/dropout/random_uniform/min"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/dropout/random_uniform/max"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "deep/dropout/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "deep/dropout/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 1548318758
        }
      }
      attr {
        key: "seed2"
        value {
          i: 44
        }
      }
    }
    node {
      name: "deep/dropout/random_uniform/sub"
      op: "Sub"
      input: "deep/dropout/random_uniform/max"
      input: "deep/dropout/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout/random_uniform/mul"
      op: "Mul"
      input: "deep/dropout/random_uniform/RandomUniform"
      input: "deep/dropout/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout/random_uniform"
      op: "Add"
      input: "deep/dropout/random_uniform/mul"
      input: "deep/dropout/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout/add"
      op: "Add"
      input: "deep/dropout/keep_prob"
      input: "deep/dropout/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout/Floor"
      op: "Floor"
      input: "deep/dropout/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout/div"
      op: "RealDiv"
      input: "deep/Reshape"
      input: "deep/dropout/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout/mul"
      op: "Mul"
      input: "deep/dropout/div"
      input: "deep/dropout/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_layer0/initial_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\274$Y\276\261\353\373\274-\025\335=\370\0224\275q\026\377\275\247\343\262\275B\234\343=\236\356\'>^CS\273^-_=K\320\032<\324\352Y;\200U\234\276xV\323=\177\251\203<m\240\277=\0023\032=H~\202=6\202\023>\227b\313\2730\250\031=\307(\213=\036\360\332=6\033\225\275\330\037\205\276\005\276R=t\251\021\275\212\341\223\275+\231\030\272\264\025\356\274N\301\017>v#\275\275`\026U=\t}\342=\322J\255=\006\"\030\276\366\373\">\375\217\376=u\215<\275\240\335R\275\205t\354<~u\026\276\356\202\302<\025:\006\276\240Q\001\276\017\230\202\2765\302\301\274$\206l=r\223\354;ll\023\275\213(\336<h!\331\274\342s\033>\260\302\n\275Mx\236=\004\347\222<\201!\031\276\315/\021\276Z\\C\276\323\344\014\276L@\242=p\252\363\275\2659w\275\201\331E\275\3078{=\375\200\344=\347\327\242<\201\266\252<\240\204\333\275\336Z\255\274lK\327;\350\273\271=\0103s\275\372G\024\276\231\225\304\275\230\202\206=H\027l\275\n\356\262\275\220\000\267\2756\224\034\276\321\221.<6\343\261\274\243\212\231\275<\ti\276!~\354=\227\030\247:\230\230\207=\225\215I>\375\320\327=\372\250F\2759XN\276\321\235\n>\225\240\014\276\363\210\257\275\271\207,=Y\275g<}H\004\276\366\263\036=\352*\216=\244\177\200\273\224iw=\356\265\216=>5\031\276\267!\"\276\245v\310=\255(\r\276\036\251\021\274)r3=\203\240\231\275\253\306\037=\352,\036\275ae\276\274_r;\275\031X\017\274g\356\255<\024\302\"\276\213\021S\275\345\324\267=\216\201$\275\351\250-\276\220k\303<\220!.=B\037\342<\226\026\336\274;\302\312\274+G\032\276\315\354#>\227\312s>\202\037\030\276!\261U=A\271\355\273BO\277=|TS\276~5h\274\rl\321\275\2653\344\275JF\203\275\374\006\265=\246gY>|\307\035\276\022\375]\275\224*.=\037b^\276\'X\264=\252\361\302<d5\217\276\243\007\002=\033\004\244=\337\205\303\273\343r>\275Z\0141=\305.I=mH\034\276E\221\374=dx\225=%&\264=\245\322<\276\366\004\337\274_\243\206\276\206:\001\276\004\220}<\233r\n>\244\274\371\274\366\313/\275\023f\376\274\235\237\007\276x\002\032=o\024\241\275\037\007]\275\033\320U\276\030\377\235=L\253W>z\004\216=\361\361\242=\313\016U\274\037\362\020\276\024\327\340\275\014n\264\275\370=\'=\230\2753>\252\277\241\275u\026T>\220\240.\274\306\335W\274Y#N>\364\330\316\275\237\237\354<\210\276/\276\202\311E\276\253R!\276m\345u\274\261\266\223\274\377\362f\275lkU=\013\206Z\274\311O/\275\301U\306\275\025\304\217=f\207\273=\035\367\025>\360p%<$\242\356\275\323?\335\275\313;.\275\323K\277\272\360\276\371=\216\221\202\275\2658-\275\231Ru=2\003.\276\242\227\360:I\341:\273\203\327n\275\224<*\273\3477:<Y\002q\2767\'V>\373&\021\276\226\313\303\275\346\320\364\275\0241\200\275\331\367\230\275h\r\000\276\027\214\031>\277\262\022\275r3\365=\316\035H\275a2\341=}\345\005>\310\003C\275\034|D>r\251\213\275\265\204?\274\2148P\276\250\023\313=\242W\213\275[I\372\275t\310(=\257\225H\276\217\261\253<\311\315\013\274\360\016\026\273n\304\233=\246\256\016>\304\275k\275\234\254\364=&\'\001\276\3630(=E!T\275\r *>Z\307\311\275F\205I>d\031M>G\257\204\274g\033\017> \344!=\213\023\035\276VJT=\321\216\243\275\230\224\316\274&{J<f\\\r=\013\'\004=\273<\r>\026F\215\275\035f2<i\312\310=UJ\007\276B<F\275\205\271\334<;\300\250=\200\214\t=b(\224\275$\270\265\275!;\024>x\034\330=}b\013>j]\006=N0d=\320\"\303=r\206\247\275\213\301\327=\352\343g\275I\266\357\275\212U\241\275\033\353\226>\377P\312<\327\006\256=\221\312d\275\017\327\363\274`I)\275)\353\364=\307(\323\274T\235\017\276\342;5=K\361\343\274\231\216\362=\234FY<wQ\336=J@L>\026]\331\275\033\235\247\275)\375\240\275 l5\276\323\203\304\275\337\341\222\276\326o\002\276\353\r\234\275[\016\227=\305\311\232\275+5\205=\035\251\342<nd\252=\342\231\n>0g\265=\275<.>\217_\326=5L\350=6\327\021>\362E\257=\346\311[\274$,%=\304\022\315=\207\254\t>\315\375\257\275:\343\003\276/\330M>\215\007\024\276\033\264\177<\025\274\002\276\363O\364\275\317*\235=h\232(\275\021c_>k\305r=\014\362\035\275\2525H\275\020\324\250\275\2664\366\275\3276\206=e\334\337=A\307N>\031\370\246\275\220\340\202>\301\250\217\275:T\354=h\327x<5\333\031\276T\030\320<9\2762\276\353}H\276\343ek=\231D.>0\337\013\276\tmL>\313h\232=\212\231\216<N\177g\276\263\306S>!M\307\273\032\335#\275S\373\213\276\017\276\336\275\307?\203\276\034\315i\275l<\273=\253\206\300\275\3009\275=j\nk>\231\273\366=4\007\020\276\273N8\276%\263\276<z\276\355=\271T\013=5\rq>\321\231I\276\320\255Z\276I\260>=+y\000>\337\316\322\275]\004\302\275\366[\033\276\372q#\275\344\222\373<\264\355U\275\013\352\233\275\252n\245;\343\361\272\275S\347\203\275q\243\261\273G\236\025\275f\t3>Y~ >\\%\020>\262\300\327\275\351\316\253>\275\346\225\275\313\303\031\2752u\333:\347U\021=\277\322\243=\003A\274\273\004a\334\275Y+Q\276\207\232\346\275p\036\230=I\257\020=\236\321!\2760\034\321=\317\240f={\023\000>\027Sq=\310u\317\275\027\303\366\274\253d\300=\355\260_\276\241`\341\275\035P >\2664\244\275\334\346j=1\225\214=\241^\\\275\201\240\002=\216f\341\275\222$\010\276\304\353\262\275\024q\007\276\030\265\260\275T\034\302\275\313\255\357\274\304\t\\\275\315\360\020\275\377\275\014\275\025\267@>\263J\322\273u\365\'\276\202C<=\314\312\377\274\252oz=\300J\231\275U\334\256=\235\272P\276\014J\032>\232\035\273\273\262c\320<\007\377\365\273\037\303\205=X\027\232<\355\326\244=\004] >\354g\314\275\021aP\274\020\245\267=\230m7\276w\216\206\275\032,\017=|\370L<hgd=\374\002\214\275\212\367\337=\334\325\033>\036\212\267\275?\255\370=*\200\034\275\337XA\275\315\036\003>\251\010\021\275\377\025\303<m\013\365\275\255\016\315=\241\204[\276\245U\240\274C\317a=\247\243a\274\244\n\037\276!\206\313=\003\326\270\272\206\345\">\220\035\241\275\r\264\374<X\230\306<]\\Y>U\325\270\274\366\205\022=f\362\001\275\256\320w\273\361\030/\274\r9\036=\003\351\362\275\232P\016>LDD\275\317\231\236<\271;\277\274\221\0230\275\343T\245\274\245\200\312\275/\273\020>\325\366\203\276\310BJ=\374-\206\275\374\274\005\276%\317\227\275R\217\374=\231\365W>\0243\212\275\032\260\n\275\307\004U>\'I5\275L\2129\276zs\t\275\216\332\227=\271\300\356=\264I\304=\240\372\261\275\2309\363\274,\332\367<@\354\302\275`U\244\275\226\373\006\276\3259\305\275\273LF<\351\221z\276lK\233>\022\215q\276-\r\013>H\233L\276P\356r\275\r\226\205>W\006\n=\277f\211\273\254\017=\276\363\017T=\275\013Q\2758x\031>\260\026D\274<\222\373=W\216\340=\223\306\030>\246\355T\275_\334l=C\351\211\275]\317\227\275\354\301\327\274j$=>\347\233\262\275\211>B>|\025\306=+qM\276\242\253\313\274]\305\007\276k\004\311\275tA \276\300\342\004\276\312\267D>\251w\001\275\024n\245;\025B\025\276\233K\230\275t\341\250\276\301\366\370=(\243|=MU\230\276\213S\240=\225n\244\274\033\231\346=\207\367B\276\260\216j\276\361\205\257=\245\345\371\275u\251\016>\270\304\217\275\000\300 \276\016rj=B\337\322=\257\037\243\274\346^v\276s\026};\306\346E;\260\226y=P\374\250<\222\014\001\276\365\207-\276\177b\023\275\371w\233\275\035\332\t\276\241+9\276\224Z\357\275\010\341b\275\366\266\200<\033\343\211\275\337\240\352\275L\007\303\274\353W\303=\243\030\t>p~A=\352\337k=\202\"\271\274k6\314\275st\217<\317\243\331=\032\026\366\274\271\276m\276\226\241\024\275\007?\350\274\266(\350\275\337W\013\2754\032\243\275o\335\037\275\256h\030\276\254\"\355<\210p$=K\323\241\275\251\227\007\276~\"\376<\307\t\230<\242\252\323=8&\313\274\025gk=$\321r\275V\355a\275\235fG=\202f\233=\027+\034>\3357\001>W\206\324\275\261\275\'=\217\377\234\2750\371\225=\263\3154\2759aC=\031@\355\274\nc\374<(WG\276\325k\335\275\024x\220\275\302\262\020\275\205\3438\275\373y&>\250.F>N\201\220=\002\324\007\2763\247\216\275=\013\220\274q\274I\276\362\357\325<*\355u<*1\"\275\242\220\006\276\236\355\342\275\263R\215=\260OK>yr\224\275\215hD>\243\256(>\306wI>\314:\036=\310\010<\273\003\264d\276X\262\210\275\026\014\353=\030\314\355=L\206\017<|X\363\275\212~u=\027\376H=(J-<Xe\213\276\212\322\022>\265\243\322<$\303\022=s,\344=\366\245s\276\360\220\272\275\003r\262\275\036*\260=Sh\223\275\225\352x\276\264s\224\274\263\360\034\275\272\227\247\274\037a\210\275\334\306\315\275\2069\346\2740\241\217=U\361\t\276\2040\227\274\315\244\230>w\326\240=b\2031\275[\376\374\275\206*\t\276\234\361\237\275\322\240\354=`\n\366=\376\265\326<%\262\375\274d\034\221=(\216\250\274\244\220\235\275\2225\347\275\364M\330=^\r\267<\216\3262\276\327\307\315\275\201N\247</\'\352\275\300v\241\274\321:\201\275C\370\177\274\240g\345=\331\001\322\275k\255c;\026j\023=I`R=_\002<>(zB=\016\010\241<\017h\226\274Z\370\002\274\032\027\366=\033\006\361\275\320\277\333\275\'{\324=.~V>F\260\177\274\347Z1>mf\335=a\355a=kN\024<d?\237>Q.L\274\024D0\275}i\037\275y9\203\2735jM=\177\024\274=9Q\223=\037\375\307\275\264\314-=\026\325\026\276C\030=\275znM=F\245E\275\321\355\206<5k\325<l\2755>\365\323\245\274\367\262\340=;\361\033=3v\010\276\362\004\026>0\2532=\334\374e\275\376L.=&\025\375;\037\177\301=\252B\035\276ba)=\366\307\004\276\245\214\242<\305\371B=\235\250\310\275#\345\034>\225\t\201\275\342\225v=]\027\311\275\331&2<+E\214\274\352\240>\276\304R\314\275\334~S=w\304\347\276%S\330\274\212\216O\275\260\2150>\375\314\210\275\036Z\321\275S\275,\2759[\002>{\260\023\276P\020\320<Xr\234=\362\0306=E\247C>u\"\253<\226\007F\276!\234+<\205h!\276\314v\241\2754\207\306=\276\025\016\276\247\"\264>G\2467\276_\231O=\251\036\375\275!\356\004>|\261\312=\236\3304=\314W\354<j2\355\274\005\256E\275\271\027\353=C\032\375\275\332\006\210\275+1\231=\035u\026\276\302=\'\275\007/\010\275\377\326p\275I\330H\275\2021\020\275\220\365\256= K\270=\246\333\031<\223\352\376\274\211\377\341={\321\344\275\367\270\026\275@\242\353\275\230\302\231=\3032\324=\007\255\344<\022\005\335\274\025\224\243=\241\021Y\274\247$\005\276\2147Q\275\324T0\276\301\252\327=y:-\276.\336b\276\3636\224\276\272\273\250\275e\016\241=\215\230\240=:\\\231>\307\234\251<\304\216\000>\034K\037>\315^\257\275ON\205=\037\010\300=\337\030\362\275\3052\006>\341q\336\275]\027\370<K05\276J \014=\206<\021\276\322\371\273=\244#.>*\203)\275\243,\213;\332\220v<Q\024\330\274!\217\203<7\006\265\275\346a\207\272\217\353\003\276\252\327\r>l\033\375\274\3673\004\276\351K\004\275\300\277[>\356Q\211\274\374\'o;\n\301\031=\354\224\244;\344\231\236=\361\203\244\276,\345\365<I\204\213\275^\202\005\276\021c\000=<\306\253\275\305B\316=\021\315\373;\243M\326=4\355\347=G\333\354\274W\206\303\275\034:\201=\347\364V\276\020i,>|\344\334\275\322^\307<\240\n\361:\354\257\272=C\023\246\2745P\310<[\204\273<\006\223}=\324\251\005\275\317 \272<y\353u=\220N\252=,\242!\275\367\201\317\2754\306\304\275\360\032\311\275\002tg\275\212\'\000=\230\305c\2756U\234=\227\352\000=T\357\356\275\217\013\250=\240\253!\276\205\311\305\275W\025\302\275,JD\275\227\230\206\274G\232b\276\270\364\316\275\031\206(>\020)\371\272\242\244\032>p\327c=+Z\243=vh\246=\006\023\021>\372\021K\275\340\363?>\033\007\030>\220-\034\275\352[\2509\252s!\276\034\374<\276Q\251$;\337\2124\276\357x\261=cR\314\274\302&\t>^2\215\274<\357\231>\303\207\233\275\2321I>\357\322\037\276\317\271\321\275k\365@>]\022w\276\374\373\351\274Il\010>w\021\247=\241\335\322<\277\350?\275\234\277\214=\332Hi=\33268=p\230f>6\251\201=X\363\'=\311\227\204=\256\177|\275\300ph=A\030\343<\361J\031\275#0L=H\310\221\275M\264M\2758p\314;^ \204=*\"I\275\223qe=N!M\276*l\212\276\024\311\006\275\350i\224<\343g\202\275\026X\231\275K\325 \2765\231\345<M\361s=Y\355\273=\262\305\000\276n\317\031\276\376\007M>Y\342a=5(<\276M\226\374;\355\246!=\272\246\365=\353\352\375=\200\0022\276\212\177?>\036\316\217=\260iE>\260\202\205<\267\353\221\275)\353=>m\nF\276[\034\344<\344\274f\275\036R\365=\276\014\263=r\3605=\272\272\334=tq\251\272o\225\253;\"\272\277\275(L\200>\"./\274\215\213\312\275\037\357\270\275\217v\307\274\364\350\206<\362%5<\376\360\226<\025\223.\276\312\374\361\2750\233\315\275Y6-<\304\273\000<\017 \312=\224D\271\275\230)\252\275\033\036\027=3\323\315<\337c\261=h\363n\276\373\032\237<\375\225)\276\304CI\275Yb\302\275\027D\302\275\200\247A=\344#\343\275\324\236\235=\233\\\203\275\302GV<\336\221\024\275\374Rp\275\303\352\220\275\311u\\\276{\323\t\276\257R\010\276G\306\215=\0040\324\275\304l7\276\337\303;\274\266\353S\276\021\033\330=Gp\000=\017\226\260<|%n=]\256U>\370d\010\2764\265\023\274\231W\004=\027d\230=\341\3067\275g\t\242=\200\347\220\2740Z\030<O\321k\274\203/\300\273\211\356\027\276=\277\365=\275\300\032>d\321\\\275\370%\364=m\350 \276\3053\271=\215\363\376=)\036%\275\224\036y\276xc\362\274K\003\026>\017?L>\251fz\275\223\247\352=\354pk<e8\351\275v\017\323<\360,\227=\277$\021\276\246\2045\276<D$>>\202L\276\244\267\302<\273\rK;\374\327f<\221\331W<\321^\341\275#\366\266\275iAH=B\032\227<h\245Z=:\014\324=H\356\007\274\3661G\274\230\227]=\010\325v\274k2\232=O\2542\275k\030J\274t\324\347=\034[\324=\353l\203;\374\274m=\217\344\323\272E8-<\220h\243=\333\007\220\275/]\343=d\237\205<Q\235\002\275\256\310\233\272\256\225\323=S\230_<\243\261D\275\337T~\275t\307\252\275N\341F<m\034\032=\350L\225=\313\350\243\275\006\311\026\276\275;\266;\271\346\323=\374\030W=\037\0068>Ho\215\275\272\254\251=\300\003\216=\313v\037<\203I\343=k\335\367\275X\276\375\275}Z\305<\267\356\023\276\333\331\305==\333r;\n\026\217\275\246\335?<\311I\007\276R\335\251\275U\024\275=j\364|\276\r\302>\275q\274\213=%\355Z=#\t5\275b\364\033\274Bm\007>\re\255\275\"\272\202<\344\301V\275\204\270\001\276#}\251\274b\242\313\275e\350]\2754-S\275ON\2579L\203\014=,\006\217=\207!r=\375^_=\204\022\355\274\022\356\234\274\033EA\275fP\257=\223\314@>\244\227\345=Cub=\013t\304\275\202\277\\\275\300\023\030\274\360\020x<#\347\237=\025\235|=/X\004\276C\013\204\275\324)\"\276\316\323\030=\231\240\021>\331\026\025\276\234\276\033\275k\016\236=?\001\311\275*\013Y<\324C\311<\030\303C\276\010\202i\2761\231\252\276V\362<>\r\344\377\275\302\346\210=\'\350C\276\232\254~\275]\347\347=\331Q\027\275\340\001\265=D\343\035\275\274&\246\275\321d:>5vW\2764\035\327\275Xs\004\276\362\241\342=P\n\356<S&\226\275\273\302\006\276I6\211=_\325]\275\233w\261\275YG\227\274w\233\022>\001\373o=\010YS>\272u\302=\325\204\222\275\370BG\275Jpw\275^\263i\276\367\251c\275\311@*>Q@F\276\343\376O>\373\270\013\275\t\272\025\276\033e\216\275\203g\355=u\\3\275WP\037>\230\'5\276\004\236\204\275\r\375\246\275\2428\301<m\014\354<Qz\020=O\224\231=\322\037\265=\243\274\362\274\215\\*\275k\265\304\275\t\327i<&GJ>>\200:=\033\264\013\276\362[c\275\352\r[<\2146L\276Ie\231=\211\241\007\275\333\365\201\275\014\270D\276*G\004\273!99>\035&\255\275E\245\242\274\324*\236\275\350s\257\275\254\361>\274=y\341\274\334\343.>\241\240\002=5\255\361=<\231\247=p\\\003>\345\313?\276\316o,\276\325\177\037=Z\337u=c\200\263\275*\333>=\266Jw=k\321%\275\227\273T\276(\254\242=V\030H>\305@\251=\206m\261=/\2363=o6\013=\027H\310\274\3116\330;\007\271\221\275\247\210\276<\264\"\260<\332\317c\274/9\227=\006\253\202\2761D<>\035\033\225=\237\300\203\276\276V\345=0\027i\274{\3175>\311\215m=\255\023\273\275\236t\252\273$}\241\275q\t\017>\322\371m>\000\221\030\276\234\"#\276\225/\351\275\200f\213\275\002i\350\275\344\327\264<;O\267\275\275%#>\016\n\240=\022\027~<\t-q\272n\274\261<Kt\226=\344\211\010\276\212\276\275<@X\336\274\377#\346\275\244M\213<\363\314;>)\322\366=X-\211\273\"H\300=\355\233Y=S\357\307=Z|0>\342\247\025;\027\026\030=\252\315&>\222v\244=\337}\361=\324\035\237\274\311\206h\275\212\360=;\224n\372\274\352]\214\275Z\257\005<\2568\216\274J]2=5\336\177<-x\'=hR\025>);\370\273\343\016\231\274r*\t\276\366\336&\275\362\335\026\276\022\220\221;O\326C=\214\216\000\276$\\Q>.+\206=v\373\221\274\220\245\310\275\204\020\342=\206\334\255;\362\256\247\275\261\272#=@E*\275\216\226k\275\023_{\273\223\275\220\275N\374\375\275CU\t\276\364K\200<t\320\213\274A\230\231>D}\027\276\205\035\'\273\335\353\r>\346x\254\274k\252I=(\031Q\275(\003\025>\341\344\204=I}E\2750\315\241\274G\243\374\275S\227+\275\207S\272\275\202L\204\2741\314\254\275m\t\322\275\247r\243\275\254\335n>\222\210|\274\326\375\211\275\215\036\311=\276\372\274=l\020a\273\334\001\212>\243\370H\275Bq\021\276\377\225[=\307\010.\275\353:\261=\370\022\322\274\321\256H\276\212\r\360\275cf(=\350\342\006\276l\346\311\2740Ze=\001\026\340\275\216P\375=\331\311x\276E\344s>2j\213\276\266\305\210=\304\037\017>\0229\323=\214\215\207\275\335L\234\275j\253\206\276*?\265\275\"\346#\275\"\004\243\274V\331\005\274\203\004;<m9}=\204\362*=\256\210\353=3[9<\317\214\204\274,8\003>\373\264\215\275\2521{=\271\270\267\276\024[\313\273\327\216\236\275g\221\312\272\317\360\313\275\310Y\233\276\031\227\020=\307\262\023=\366E\222=\257\356J\275n\2726\276\374pP\274at\013\276I\035i;64\263\275\244\230\023\276\r\025\343<\216\311X>t\231\307\275\316\326\360\275\373\273*>\265\371\222\276\262\360\235=K\366\230\276[\234\005=\2312\336=\3641Y>B\212\224=\022\024p=\246\273e\276fD\242;\304\267\335<\303\305Z=\245\370O>O\276\253\275\375\200\271\274QU\000=(\025{\276z\345\375\275\rC\014\274\027\245\205=\'fw\275?\003\241\275\013\032<\275\025\302 \273\372\032)\276s\224\007\276D=\005\276z#6>\340^\002>^Tg<\207~\200\275\177rM>3\357\017\276N\207?>!\367C=l{\200=4\326p\276\242\031!\276\260\2701\276\277\307\001\276{5 \276z\221\037\276k\021\230\274\022.\255\275!\325\252\275\317)\266=\307\003\036<\350F\332=\201\366\221=KT\034\276+\364\030\276>\272\254\274\365\220\220\274\266\376\256;\002k\343=.\207j\276O\262\223\275l\251\222\275ab\277\275\326\tp\275\360\373\006>\301-\315\274P\312/:7\255\366=_\276\017=\274\0015>!x\210>\333F\360<\244\251P=b\335\305=\364\343\202;\310\320\365=\235\244\\\276b\377X>\205\273\363=\361\243;=\270 \036\275\020\202\263\274\035Z\032>\273{\r\276\217\237\030\274\272g\273\275\222\3763\276\342\333\223=\370-\032>P\037\246=;N2\276@P\345=\305\026\024\276\313\342R=l\010\353<-\304\334<\366\241\254\275\006\374\213>\336\3202=\n\237\267\275T\256\305\275\207\001\007\274\312\355\345\275\201b\305\275\225\277}>>\020\034\275\241\261q=N\227x=0\377W\274\005\3535>\275\031c\274\013nN\275\201\314:>\362\251\263=\252\376\366\274\002\t1=\303\357\014\276u\3578=\206\313a\275\314\324\005>\345,\305\275\003\250X\276\352\364\'\276\247\330\030=\212\223\177\275-\362\327=\025\352\274\274\245\224\014>Z\204\021>\324]\001\275\004_#=\331h\026>\013a\004>\2631+\275\344J6=(N\255\273F\267@<\301m\371\274\021\002\216\275\370\010W\276\337,\356=h\314.>8T*\275n\030#\276]Ef=O\334\253<.\260\231\275\256\322I\276\243\246\204=R\300\030\275\230M\236\274\235\376/>\253\203\\\275\233q\342=\247&\311\274\336;\272\274\231q\261<\253bW<#\237\211\275\374o2=H\257M<\213\347@\275OF\245<\254O\241\274T\375\240\275\263\013\334=V>\034=$\261\305=\336!\310\275\360\216\210=\275$\307=\016\371\242=\3501\341\275\305\033\357<5\021\230<\331\337\237\275\276\315\004>d\300H=L\330\317=\256\236\016\275E\2557\276[\333~=tc\353\273\371h\202=\010\226\024\2742\rl\276I\357\252\273\220\352,>\037\373\370=5\310 >\274\336\357=\350\3725>T\251\016\276\240l\343=\210\226\231\275\347\300\226\275u\335\211<\373\272\232\275\361?\373<\204\350\241=l\272\"\276:\356L\276\355\331\352=\343v3=|\032f\276Pt\000>\362%\203<\251Z0=\352[\017\275s\301k\275Q\024*>\216\031\035\276n)\202=\024\234\036\276\375\216L\275@\320\372;\375\007U\275\354,\251\2756\321\023\275\306\244\025=3\200\235=\313\301%=\330\260H>T\213\305<\331iD\276\375p#\275\220jb=^y\216\271\243\322\010>\345\351E\275\204\230\242<)]\215>\241\257\262\274{E\034\276\267\301\314\275\302\315\032>\221\310s\276\220\241P<tu\246=\304\271\210>\201#\262\275h\202\001=x\202\330\274\355\302\340\275G\331;>\250tl\276\2557\303=r\273\033<\235\264\022\276\360\220\273=\273\366-=~\211\275\275\207\237\334;\252\206\223=.\373E>\260\033{\274Z\232\243=\213\010\206=\200!\016\276ul=<\344\0038=\3269\311=\214\270\301=\027Gt\2751\310\212\275\002\261\031>\236\rg\275F\367\022\276\010\243\035\276+G\222\275L^\360<0\213\326=\027;\312\274\0217\275=H\267\213\275\223;\335\275m\007X\275\270\263p>\216\032\322\274\226$\322=\335p\221=\007\022I=%\321\336\275\213\"0>\276}_\276}\366\000>sL\376\275,\200\324\274\230%k\275G\242\016>\2674\217\276\212\274Q<\253\241\303\275PNe\274\206n6\276\226\016\205=\317\2538=\013\320\304< \200\217=1\200O\2758\336\002\276\262<\366\274\343\260b=C\225m=!-\257=.n\037>Z\346\253\275#E\037>\233\342\246=\264\206\377=\020C\n>\375\214E=\375\006\225\274\233\273<>\'\374\200\276.(\356\274\245&-\274/\324!\274\036K\203\275\335\267\353\275Bp\206\275\341\213\023>\234K\352;\270\220\247=\037\002I>\031][=7n\236\276i\027\215\275c\226\277<7O\277\27345i\275\212!\007\275\016DJ>\342\235*<\325\3646=\303lz=n\314\035\276np\230\274\336b\220<`0\240\275\233g(>{\207|\275\201\363\177>\210c3>~sZ\276\002Fm\276\343\327\262\27591\314:@\324y=\360\r\371<p\275,>N\223\265<l\3700=7K\212\274\206\\\002>\317\302\251=\002\373\000\276\230l\033>\312\232W=\332[\200\276h#\306\275\372{\270=\355k\346\274\003m\001>_rJ=G\013\005\274\334\220\203<\214\302\201\275\031\211\213\274\304D\\<\264>\214=\006\347\277\275`^\216=q\367\002>4#\212\275\331J\273\274Zq\207\275\321\303M\275|0\274<\330\226<>\347\266|\275q \303=\230\272\240=}(\274=h\226^\275\017\210\202>I\331\211\275\267(\346\275\265\201\344\275i\252\242=\263\250 \274\200\2261=\037\337\320=L\224u\275\241\030X=\345;\365\274\235\007\223\275\312=\030=\253\r\226=n\014 >\244\312\020\276d1\347\275[h`>\231F;>\225\211\266\275\360\242\001>\337Oe\276\"Zy\276\326\365Z\274O\335\303\275trW\276>{[\274\000\216R\276\232o\003\276\220\315N>\250\026\317\275\006Lf=\245\304\236>\013+c\276\001\344\372<\302rQ<\265\340\372\275$I5\275\033)\211\273\277\364(>\320\325]>\030\327s\2746~s\276\007LG\2762g\320=d\033\372<\307\3000\275\264\262\362<\276\3064>\302\274r\275\254\236\241>\312\313@=\240\033\231\274(`\336\275X/\375\275\344C\363=\301\000\235\275\337\322\367\274o\033l>\037\255\217\275\022q\021>\231YM=1\240\207\274D\023\r\274M]\223>`\364\301=\272%\212\275\006\333\007\276\267\240\372\275\nnm=\330\353\326\275\241\252\231\275\225\032\n\276Q\3320\275=\240\332=;\0232>v\r\233\274T_\317\274H\311\257=F\336\252\275\006g*\2758l4\276\245\324\301\275\267\245\t;\361O\314<\255WI=\327\003\211<\014\030a\276\026R\234=\373LC\276n-\014\276\203\356\001>_\nX>\273\317(>-\324\335\275\364\177P>P\271\">\322\342\253=\265\r\036\274\357j\260\275\306\364\227\276\201TY\276+\214}\275 \377\312\274\245\325\203\276-W\363\275\031#\343=\003k\330\274\212\221b=\334\312\236\273\253\306v\275wv\016\275q\256r=\303\035\005\275\177\016D\275\023C\241;\364\366\201=l\301\225\271\245-\377=\321\236\251\274\210\376\274\275\037\341\t>\277\253\352\272\025\371T>\331F\267\273\235\216\320<(\303\217>\332\237\224=\034\323%\275\010\032G\275\250D>=\210LN\276v\">\276\334s\036\275\\\335\020=\220\316\233\275\250\363\251\275\334q5>ok\331\275I\325:=\350t{=s\204\317\276\"\360\246=:\312\242\275F\'D\276\361\273\233\275X\263\272\275\341q\210:\312\346$>:]\237\274\373\035\220>\3741\244\275\023\353F=\014\335\216>\314S$\276\2160\372\274,\022\227\274\335\310\347:\255\247\240\275+I`\275\352\215Q>\n\020\006\275\200\345\211>&\327{=$#3\275~\'\003\275e\032:>\256\'\213\276\270H\034\276+;\177\276)\257\017\273\023rq\2766\212\252<\017\240\022\276\002\313\272=\020+\016\276\202\263\311\275\341kf\275*L\235<\261\020\033=\300\340\264=\215\234\227=N\265\213;\270\271\211=\030\0325\276M]\035\275\000x\216\275\356x\n\275\\\367\370=\363\374\017\275v\353\177\274\034f\316=\334E\360\274\257\002\010>\006\2217\276\355\267O<\260\325g>\254f\023>C\211\035\275\016c<\2752=\250\275\246\265\224=\037\351\007<~\312\022\276\323p =\206\0311>!4+>\2059\026\276\301\002\264\275\301.M<w\251\031>\213\217h>Y{\347=b\021\331\275:\361\334=\311\330\206=\275\035J\275{\357\000=\367s(<\307\247\030=R\235+\2763ZB>\320?\000>\017<\314=\016a\036>\330Q\026\275]\341x;`\2149=>sV\275\001\372\220\275\256l\302\274)S\002\276`\032H>N\275\022\275\031\224\215\275\304f;>gr\247=v\236\027\276\3430@\275\332$\246=\305`\002=\376\372J\275\262\215\222=\302\243\317=\327[\010=\221\240\316=z\322\361=x\376\201\275\360\323\001\276\351)G>\256\222B\275\004\321\030\275\276\351\265\275!\237\244\274\254\362J=\033\017\230<\037\263\202\273\205|\321\275\327\355X\273D\345L>\307\327o\274l\365!>\215g\211\275\201\332\006>\370\030\010\274\254\231\332<Q-\244\273\333\264(\276\266\327{==\n):-%\036>\334/\210=\233\244\"\275\265\364\321=\217\216\262=\336-H\275\320\315\215=\377\r\253=x\307\223=\367\014*\276\2509\230\275\213\364*=\360\006\371\275\216\016\274\275\252+S\276\032d\007\275\211\227\265\274?3\330\275\034\3243\276U\366\352=\354\342x=\242\025y>\335\036\312\275\255\\\177=6!H=\313J(=\037\263T\275\313v\221\275o\000\331=\232\270\343\275m\371\341\275\005\215\374\275r\324I\276\026\302\365\274R\347\234\275\210*\340\275\2467)\276&#\007=\356\265\024\276a\256\223\274\217\233\010\275\375\224<=7=\260\273\355\325m\275\230K\022\275d\316\n>\313)\036>\322\336R>\364U\004\276aX\275;\254p\317;\324Gf\274(\350\371\275\3249\225=k\214\216\2753\002\361<\236\021N\276\274\351h>g\"\323\273\023H\373<4OX\276\267\356/\274\203Q\200\275\372\336.\275FN\000=\320p/>g\266\177\274\326r\370=\254\0330\276~<O\275;p\014>a\373\017\276-\001\307=\273\3335>\237\210\303=\216\272\004>\314M\254\272\316\324\004>\252\347\267\275P2\023\276\271\224n\276\206y\322<\023\300\236;\314\306\214=voJ\274\205$\357\275\327\264[\274E\203\'\276?\322\277<\330\006\021\276\001\233\t\276\356\375\007>\261\222\314=\236\000\203<\365\'\300=\252\211\365\274x\276U\275V\300\003\276\036z-=\335c\232\274\267\332r\275\225h\034\276\363a\032\275\207\354-\275f\333\023<\315\017\235=\224\256\255\275\355\237\275=1L#\275\326{\277=\247L\222\275\301\257\224=\213\006\227=\246\316\020>J\330\246\275\017\333\305\275\303R\200=n\372\376\275\266(\200\274\240\322h\275\204\315\231=\302\217\374\275>\203\277=\306\375\013\275\021\347S\276\365\252\036\275\331\214\035>\227\273\277\274\343i\030>\305\257\001\274\027\005\241\275\346e\177>\3070\251\275mw\177=@\3123>\321T\320\276\2138\237=\300\337\350\275G\375\203=%pP>\356\344~\276p\221\305=\326\032\001;\261\200\013>\033O\205\275L\246\230=b\212\375\274\313Fq;|\224\244\275\327\020\034>\262\000N\275x\265\020;\002\3061>\361{\006\274}\337$\276$\234O>\034\321]\276\353\027\217>E2\035\275(\224\177\276\005y\005\274\213\3422=\030x\023>\367\311\311\274\272\254\244=\032\213\204=\301\306\004>@b\363\274\270EG\276\273\335f=\371K(<\021\341U>!\347\311\274\023<\016\276e3K9~\031\013\276\210\014\002=*\245)=\355s6<O\322K>\224d\234\2751%\020\276\362\255\224<\272\263)\276\317\332\322\275\004=\300\275\311\366&\276f\000\353=\006\316=\275\374h,:\021\365\036\276\202\231L=y\214\027>\272\367p\276\021\357!=\243\364\026>\353\"\036\276x\376v\275E3\200=\345\021\275\275\317\207(\276\210W1\276\245\344\201\275O\367\246=\025(\237\275{\370\323=\357\021\340\275a\251+>\010#\215=>\245\023\276\000^\"\274\304\027\255=\020\324\032=\371i\244=\360\t\262\275`&>>\363e\373\274\343q\226<C\230v\275X/\034>\021\'[>\376\2774\276\276\2770\276u\314`\276\224\025\022=~[\302\275\251)=>S\211\025\276,9\354\274\344\2710<LY\235\276\372\200\374\274\257\302\257\275\344f\275\275\374\001\250\273\256\017\246=\2044\202=$Ou\274\337>\242>\367\260\341\275:\225\310=\306k\033\276\312\241\353\275\211r*=\021OT>\314\214\004\276\n\360g=\326\205b\275\023>$=\267\"\025\276\335tE\275\244\005\023\276\342&\034\276\371\3766>3\365\216\275v\354\000\275\206\237\266<\360\240\263=\320[\003>6\271\200=R1\362\275>\271\212\276qc<\276\251\274\025>L\216\275\274\274\034\233\273AI\256=\324\222/<\314\244\310=^X\244\275\021\026e>)\032=\275\333\320\314\273\367E\210=\235\016\342\275\250A3\274V\264$\276\240\023\231\276Fr\262\275\312\354\030;\224\370~\276/\2302\273ZJR>\212\260\255\275n\332,\276\320/\347=\313vl=\2474V\275\303\367\270=f\270\363;\215+x=\254\255&>\204;\324<\2507\214<\2038`\275\016\023\177=\325a\032\276Xt\207\275\024\300\353=\332\033\237=\270\314\021>\230)(\275~\212\343;\311\0002\276&/1>\320\312s\275Tj\022\275\rP\221\275\364 \330\273k\342\200\274\376\342\262=\206c6=\210\007\246\275Upz\276\023}?>\246\350\242>\305sz>=\033\n\2757\306z\276\212\332\213\275\306\001\255<\271E\323\275\241,\203\275<\201\215=\007\304\325\274\037\034\254\275\333}\272<\r\3628\276\246~\236=\014\254\035\276f\030\217\275\034\241\234\275\2035\024>\260&j>\307\251u\276I\353H\275\236\316x\276\213\203$>\025q\347\275\257\312(\275\344\177\237\275\275\2424<(@\256<\373\253\231\276\016`H;\336\242\321=%\201\304=\332\255I=(.&\273%\200>\275s\357\352\275\247T\307=\210\321\265=]\241&\274\310\000\255\274_\366\314\274\242Ov>\301\201\247\275P\327\213\275\271\217\024\274\364\242\342<\344\026\300=\350\267:<a\032\314\275\337\357L\276\325\302\275=%\264=\276\202\275\206\276\035u\036\274#\354T\273\220/\350<\031j\t\276V\353\265=\275\'\r\275\205\347\271=x\360D=\022\016\034\276\3561\346<H\023\331\275\330@\001=\003k:=\314G\322<\322rr>\352\323\255<\227<d>\317\354\370\275$L~\274\204\321&>\372\2664\276\3149G>\226\366\350=\265\373\357<^^I>\020\004\022\275\034UE\275\010\002\332<\234^\221\275\377\362\026\275\347\'\035\275\264\263-\275>n\354\275\000\372\201=\352\304\'>\\w\363=.\037\360=\343i\227\275\n\352k\275w,\037\274^%\270=\237vo=\357\343\002>\261\013~>\037;\210=[\333\t\275VE\331\275E\236$>U\016\352=t\343\332\275p\206\270\275\246\213\022<\254\372\333\275?\005\230\274N\245\372\275\020\255\203=\345R0\276N[\004:g\355\237>\321\330\355\275\275\331\212\275\020\014\244=\310a]>\021\325\247=\344\312\214\274\255p\201=\0239%=\321\'\007\2766]\360\275\261~,>\035\353\236\275C\244\371\273<9\275\274\346\266\314\275\257\010\265\274\363\345E=g\"\030\276C\235\314<\227\364\204\275\230c\316=\251\006\301<\342r\201=\362\233\037=u\002\000>\362\303\270=0:K=\255\0024>\304\230L=A\210\226\275KR\010\275\373\211\347\275\202\213B=\016|\025>\202<\274\274k\245\346=\364\3456\276g\205_<^\211N=t\356\021\275\035r\236\275wP\247<h9\320=9\347\207=3\243\014>\321\251\370=7c\004>\302G\365\2751\311\r\276T\265/>Sg2=\000\310\342\275s)\303=\200F\251\275\007\356\256=.:\">\035\364h=\361\026\312=t\323\212=\004#\023\276LW\255<\277\304B=\263R\337>I\021+\2762\210[>\\\263\373<\231\3667<\235AC;#\207)>U-%\275\204\347=<\007S\217\275\300\257h>\320\356\351:\215\003\031=\020\001\320\275\327-\300=?w\214\275K\260Z\276\332R\036\276p4`>\211d\321=\273\215X=\200F\341=\270\302\324\274\254\304\267<\234h\'=H\264i\275\252TJ\275\265\033(\276\303\264\317\275\357H\304\275nn\370\2758:\336=Y\3138=\302\237\013=\000\001J=a\027\010=(\371.=gA\353\273\251\204\324\2756\\\002>X|\271\274\206\217\267\274Cg\330\275\014e\354<\230\231]=`j%\275\334\363!\276\030\000\243\275\265\362\271\273\371r7\276\"\203\366=\241\3027\276Wr4\276\022\356l\276\346O\335\275\2245k\275\\\275`\274\270@\307\275\305\253\310\275\346\275\215\275=t\372<\0172\326=ML\036\276$V\370\275\220\361\211\275Th\364\275\\\363g=r9\306;\245\370\305\275\347\356\205<z\252\303\275\224\363)=|\333\207<\'-\275\275\023u\201\276\302}\276=yx\302<\t\220\371\275K2\311<\373\242-=\200\367T\276\313r\217\274*\343\215=l$\257=z\267$=\341\003\313<\266!2>\n_\337\275\213\305\212=X\206\356\274\323r\201=\316y\362=2s\022\275#>\032>F\205z=\312\324\335=IZ\033;\034\373\032>\026\354c\275\205\0277\276o\201e\276\277\230\201\275\230I\364=O`N\276I8V\275HG#=\237W+>A\006==\262-e\274\260\244\214=\n\013+\275\314\037\220=\016>\020\276L\265\274;.v*\276\232\200B\275j\340\020=@ia\275#\274\004>\005o8>\014\316%=\264S;=\355[\\=7\362i\275\321\251\004>\203N\205= (\332<\332b\247=\200\nO\275\321~\272\275u\260\263\274\311\243\221=\262{\313=\025b\226=\032\320\003<}\353\321\275\266\240q\276\3407e\275\274O\024>\000\200i\275\232lJ;D\366\325\275\210\356\214\275S\232\251\275\007\365\254\275\341\3075\276\304}\227\274<\030\352=vm\303\275r$|>\033\342\036<\277\266\224;&\373\362=\302\357N=Z\313g\276\'\363\347\274\030\':\275\225\236\024>\261\302\310\275\003\333\307\275\274\033D\276\215\214\332\275\023\256\232\275\'\210\215\275\251\000\373<\372L\255<\255M\373\275\'\270\320\275\354\256\003>{\374\341\275\305\007\222=!\021c=\003\267!=B\237\360=r`\363;\351$\230=c\352\351==H\375\274\022B.>_\036\270=\335\024\246<\316\r}<\206\'\'\274\224\234\363\274\341_\242\275\030q\032\274K3f\275\r\253\r\275j\333\024>\0227\223>\204\344\263\275\032\177\375=\362u\357=&\326!\276\010\320\341=\245x[>\223_\376<\226\263m=\230\351(>B\252\026>\240\315G>\223\221\001=~o\314\275\034\223r\274\026X\211=\022\345d\276\340\3539>2\202\240<\274\313~\275\340\003\013\276\307~\001>\334p\321=\360\240\037>\301\227\254=D\351\260\274\252\013\013\276\2357g<>\210\206=\375d,>\265\0072=V\034\202=\3456n\272\005\267\342=)\217\032\276o\267\347\275/\207\037\276\242`N>$\234w<\365\\\364=\002\313\350\275\273\220\361=\301\035{=\317\375\204=M\274\320\275\343\340\203\274\'}X\275\3414\267\275>N\366=\207\204\273\274@\264C=\277Lc\275\374\276M\276\210d(>\237\306c;\242\000\032=#\275\314=\213\344$\276\360\1771>\306)\001>\202\325Y<\374\254f=\276\300\206\274 \256M\275z=\030\276\245l\370\272a2\013\274\355\252\333=#[\210=:\300\255=sU\014=b+\330\275s\r/\272;j*\276\331&\256>\2507\214\275x#\300=\265XY\275%rS>C\006\005=ej\342=F:6\273\353\310\003\275\016\377\337\275B%T<\207\202\014\275\rf\311=/r\231;\366\334*\276\003\361\331\275\246\"\204\275cm\256\275o \210\274\275\267f\275\347\307\270\2752\250j=\352\224\346\275n\323\314<J\344\243\275\323H@\276\314;F\276\316\225\337;\034I\273\273T\366\205=b/\236\273\340>\361\274\216\022t\275pb\207=\2521\033\276\343\371\r\275j\354\016>s\260\245=8\222\330=\376{\372;j\271\377\273D\020\026=\223G/>\022S[\275\376\n\014<\016i\004\275g\317\221\275\340\020?\275\254.\030\276\217\372\255\274g\350F\275\374\013L\276-|\213>\250W\"=\033\300\264\275\360i0\273F\035P\275H\272J>\310\213\313\275\337\036\370=CP\000>\372\312 =\200\266\242=\314w\360=~F.=\217IR=L\305\364=\034\'\245;,\320\320\274\314\332I>\036\366\346\275Q\312\205\275\236\231\324\274H\r\252=\036HK>\363\212\005>\004s\257=\033\327?\276\322\253+\276u\n\342\275\3762\016\275\321\002\024>\204\235\004\276x\311\216\275\226,\256\275O\230B>\361\375\271=2\200\234<)\010\370\274\225\344\203\275\r\314\000\276\003\"\200\274w\035+\276\032A\232=;\333\362\274U\235\022=\243\033L\275H\351\225=\005\273g<L\004(\276\230EL\275\3724\353=\216\017\357<\242y\204\276\340\237b\2753\354\264=\206%\250=\355^\274<\277hI\276uS\227\274A\034\n\276\2502P<{\230\255\275\321\331\252=\203\207\237\275c\347\310\274)\014\036\274\360\260}<\213\305w\276\264\270\214>\255\024\343;\350\264\230=\233\216D=\373\344\325=\245MB\275\014\372s\275\251\354%>\274j\351\275\353\325\321=M\351`<\236\036\351\275\215\026\341=\036\344\247=\357\210\204=U\251\000>+[\242\274N\363\331=\274n\205\276\205\222\373\272h\301s>\245fK\275\273\037\353=\017$\227=:\023\"\276jb\211\275\361OB=\0379\226\275\034\010l>?\311!\276\252\n&\276\255\334\230=uO!=\324P\315\275|O\034=A\333K<(\2373\276*\353\352\274\016!\n\275\274\256\363<\217k\022\276\356\2531<n\273\357=)\005\000\274\376?e=\367\241,\276\r\337l=mN\303\274\346\2044\276\"\326\221=S\032Q\276\366w\223>\000\245H>\'=\022=\310 #\275m\215\'\275Pl\376<\261\300\306\274\232\241!\276\331H;\275\225\326-\2757{\'=\024\251\016\275\\\320\356=\025\213\020\275I\014\226=\310\205\021\275\363\264\330=\235$\025\276G\272R\275!\241]\274\232\350/\276\272Pq;J\257\227\274\301\014\361\275\022\200\227>v]g\275\307\022\376\275\351bU=\316\026\';\201\216\346\275B\335#\276\021\243E>[!\320=\252cp\276\024\310\221=\346l_\275n\201\212\275\330+7>\335\261f\276\223\016\030>Ktm\276s\200\\\276\030\0354\275\nh.=\327=\357=-\237\222;\007\213&=R\246\217\275cWc=\271,\250=\314E\253=E\351\201\276\213--\276Tl\270\275\262\033\247=\035\354\014=\351\322\214\275\226\327\363\275S\025\021\275\222\224\375<\0023\334<\313\331\202\276\277w\357<5//\274?r\231<:\014\031=\252=\003\276\244\241\211\275X\345\t=W\264\341=$\337\273=\236`\223=\332FA>\243n\014\275\353\273\010\276\316\035\277\275=\262G;_T{>\221\217\366=+\204\374\273](\332\275\035;\362=!\373?\276$CJ\275\034\332%\276E6\312\275\216c\202\275bf\017<\263\223\241\275He\210=CC\350\275k\337[=-\\\035\276P\371?=627<8H\350\274\214\251\022>C\373\247<\ryG\275\364l\226=\300H\004\276\267\275\220\275\234\021$\275\220H\244=\307\330\320\275\276\001>=\224\377K\275H4\205>a\'\271<{\277\035>q\333\203=\247z\333=\247\256->\325\3461>\241\206\026>\206\241x\275\034\240\337<<\362G>\201\252\326=\201\225\275=j\321l>D\365[=d\273!=S\256:;4W*\276D\311\206=\372+\\\275\206v\372=\227\035\336\275\215\365D\275s\361\325=\223\237P>\252\322F=u\271v\275\r/Z=\033-9\275\212\272\365=\026C#>*\354\372=23\244=tO\266;\006^{>\3257\367=1\354M;6q\n>\203\300\355\275\021I\375;\r\027\001>\312K\211<\303c\005=\217\377@\275\244\372\001\276\350_\301<\034\227\263\275X\214\242\275F\362\343\275KI$>\340\331\200\275]\"\364=\362\303\035\275\3572\014>\206\351\001=8\317\010\276_[C\274\322M >C\235\373=qT\206=l\034\260=o\222\020=\330\203i=n\007\322\275\035\322\205\275W=\201<\006&\020\275\364 \031\276mc\210\2742\033H=\346\014\375=\224A\366\275p\010\204\275\"\231,\276Y3\014\276\250\2036\275\202\243\n\276\013\271\207\2757g\021=\261\320\274=\207\203\323=\235*,>\r\237\363\275\006\350\031\276\356\334\212>]\002F\276{\361\007>\005Tz\276W\003\022=\203\247\277=,\003a:)7\353=\020\2219=\274\006a=>x\367<L\233\370\274\014\201\334\275\324\264\375\275\356G\351<\223\345\212=,\020\353=\252\324b\276Ay&>\366m\344<\242n\225<\275u\277\273/\373\262\274e\255\241<PnA=\036j\212\274^Y\277=}\310%>\201\t\035\274|w5=~I\351=I\214\337\275\242\236Y>F\374\266=hi\310\275\301\265\245=*7\316=h\013\324\274ck\260=\233\236\202<P\331\t\2764=>>IX\331;\312\267\224\275\325\374\013\275\332\r\346\275-\231U\275\013\233\\\276\0131\033=\\bS=Hqu\276T%\020>=\341\257=\253F\242=\tf\242=\316\206C\275\327\372\254\275e\'S>z\334+=\"\374\205\275\037\331\r\275\202\310\220=6~\366<\326\252\005\275#\370<\276-\230\352<\371!?\2760\336\004\274\037\024\346=R1\003\274d9d\2750\264\343=:\306\242\275R\262\203\275w~\230>u\034%=L\t\017\276]\261\220=\341\307\"=\340_\030>\203\356\216\275\337\030Z=h3\027\276\224\326\003=\311aM\275\004:\025>\026\266\251\275\246\341\331\275\254\306\367<\220y\224=\215\000]=\212\376Y\276mU\344=\362a\021\276\252W\362<\034\241\213=\261\372\024\275\307Q\352<\254\352l=\232~\013\275\275P<\276\311\310\\>\261J\326=\332\220n=>\226\n\276\357qE\275\266\263+={\021\023=cW\002>Y\3030\275\376h\356\275\000:V\276\034h\246=\262\2257<6\322\321\275v\220s=7\275\020\274\306\307\236\275\010\343%=\331.\000\274\346P\025\276nk\213=\314W\305\275\360\205\336=\027s\306\275\303\217\341=Y\334\200\276\307\367\267\275@_\227=\243\033\352=\376\246\206=\377\326\261=\314> \275US\224\274\331\232\237=Q\313z=\037\214\310=^}\203\275\034\232I>\374\263\225=\004\341\005\276\212\272\231\274\232\316\303\274\030\331\314=\022C\300\274\340\004\323\275\004X\370=\2431\262\275\254a\273\275\004>\367=\266\343Z\275\275\006\t\275k\033\301<k\277\342\274\224>\001>\206\0014\275\257s5\275\t\\\003\275\036\022\357\275\237\225\r=pL\203\271\351%\222=\312T\225<\355\252\245\2749\326\222\274C\014\323=g\2521=\351\331\202\275e\324\320\275\276K\n\275RQ\310\274fP=>e\330o\275lz3\274\001\340F\274\230\276\213\275T\365\322\275@\336\302<\215\366\216\275\230\264=>\253\203\202=\006\244\242=F\003T\275%\212\376=yS\017\273\223\342p\275\016\036B\275\332\'\246=\372\335v\276\375{\364\274\215\274*>\356\231\223\274\3007\022>&m\n\275\317Q\"=\230\270\260<LMY>\334\367I=\217\373H>\213\310q<A_\245\274\232X\223=5c\263=\027I@\275\220\304:=\335\351\332=\323\271\";\304\273&\276\320\n\322<\205\2766\275\277\036\320<\302\354\024>\240\354\013>\017\023j=oX\241=E\366^\275\327\325\001>/\226:=4\207Y\276MS\211\276\374R\312\275\262\216\307=\250S\344<\031\320\271=\247\354\265\275\307s\330\275Y\221x\275Q\236\366\275\224\367!\276|\000K\273\335!G\274\273E\365\275m.\270;N\035\r>\202\035\225\276\t\002#\275\342\264%>\223y*=z\2158\276\036D\330\274vFQ>vC\022\276p|\260=\r\010\004>\231:\347<T\010\317;KN\357=S\204\335=\0335U>\326c:\275\231\356\337\275W\305\205\275\206\344/\274\037\200}=\3500.\276\200Wr\275\216bz\275\373\273\333\275\361\204?>\234\312\306=\277+\031=\007\220K<\326f\315=\205\227i=\346\027U=\363\206\324=\r\376\022\276\016TE>\203K\351\275\214u\355\275\314<;\275w\363\251\2741\311&>/16\276\337\013\273\275\270\343@\274\335\244\303\272z\201j\275\343\027\261=\370R;\275e\200q=\241\365\330;\222^\253=B\215\344=\017\363}=J/\006\276a\256\365\275q$L<\255C\260\275\214>\253=\2063\237=\2126\231=d\244\300\275\323\352\326;&-\231=\333\017\360=\326%\"\274\351\010\226;/\026\376=q$\027>D\372\214\2740C\320\274\364\236\177=gy\022\275\320\377x\275n\274\271\275f\362]<\354V\352=Ib\276\275o\327,\276\225\030~\272\310x\357\275mr\273=\317\213Q\271\342\251\021\276\3352e\275\035,\2029\351Q\316\275\311\177\277\275\373\364P\276+,\006\275\2556\337=\306Z)>\242\017\204\274\r\227E\274\216\314\270=\275.&>\340\313\375\272\243\373\306=\372U\350\274_\236R\275\336\220\035\272Sr\t\275\020\275\265=\n\306\343=H\213(\276z\013\325\274D\201\311\274\216\361\243\274\027\346\210\275\250\365,\276\246\217\004=\321\334\027<\223!\024>Z\325l=\375\025c\275\212\337\n>x1q\2744V\216;\316\233U=$\310\373\275\246h\335=4<8>\266v\013\276\205\345\266\275\013lW=\203\326\337\275\272K\211=\365-\350\274c\265_\275)b\252=\303\021R\275O?\035\273\007\357\253\275\237\237/\276}>\205\275\207\256-\276\362\351T=u\370\311=W\221\236>\336\220\303=ErX\276\311$q\275\027}/<L\240x\275\261\367*\275\241Q>>\245`\262\275\035\245\316\275\223\232Z\275F\205\333=\266j\007=\315\031\320\2759T\254\275\376\222-=\235k);\377-\376=\344\335\003\276ZC,=\377\370&\276\003\310\010\276V\256\321\275YJU=\371\253\274\275\307QQ=\372\225J\273\022J\251<d\262\001=\271k=;9D \275\"\001_\275\317d\362=d}0>\231/\261==E_>\315b1<\"<\332=5l\252\275\301\216G\275\036\310Y\276Z\032\005=\316\363\206\276w\0329\276\235T\353<u\232s<\323R,\274\311aI=`b\303\275F\235N\275r\365\004=\323\262\303=nC\204\275cD\026=w\2434\276\301\241d=pa\202\275\004\300>=\337\322-\276\202\3574>\307h\240<\n\034\004>\361rr\2768X#>/\371n=\332G\020=\254\335\216\274)\177?<n\004\266=D\023]\275\n\227*\275MV%\276\255M\014>\245\267\016\275\367Y\000=\305\r\241=\316\025\t\274\217\366d\275)&\370=M\263\214\275\343ZB\276\243\324\256<-\257\243\274\240T\360\275\r\302\357\275\306\025U>5u\"\274S\367\254<\213\304\352=\346\3062=#MN\276\204W\022\276\263\337\243\275\022\254\007\276*)\230=|\221N=\323\r\017=N\357\021<\325\234\033>\265L\375<\233\272\227=\207F\355\275\001\262\r=\005o\341\275j\304:=n\365\254\275T@\234\275\247$\303<\217LS\276Y5\312\273\035\220O\275\240\341\372\275J\357E<\364\240\252>\312W\236=\316N\201\275\244ce>\315\021\234\275\014SU>\346A\031\276T\243\004>?W\232=\262#S>V\035\r\275\007e;\274\r\266\000>\205\250\237\275\026fV>3T+=`g\324\273\005s+=/\036\342\274\330\312\337\274\377\005\234<\255\365\031\275\310\3036\274\372\214\211\275\371k5>\251W\213=\322j&\2766\341\337=\034\335\230\274\224\317\374=\206e\010\276\252\265\267\275N\310\375\275\270\264\260;\364\370\207<B\311\000>\000F\252\275\007\366\037>\371\215\245\275\217H\034>H\022\036<{\303\221\275\025\204A=\323\254`>\013\2552\275\n\022>\276\243\203F\275L\217\026=\220\320\257;\222\245\312\273\007\300G>\307Q\'\276\332\213~\275\275\031\333\275C\303\361=K\3061\275\373*L\275 GU\276%\213><DgT=_\231]\275\203FO>hsj=\213\206\215\276<2\352=\313\262\363\274\025\246\020\274\337\350\217<\365\027\344\275x\"\346\275H\305\206=\016\343F\275\341\273\211>\341I`>\340Ns<;kK>\312\366\335<\236\376\206<\332\241!=\255@\303\275\266\307\264<9\225M> \314\216<\nPA=i\264\024=`l\216\273\222\222O\275\301\\J\2760\226\006>\365\246\302;T\231\020\275[\031\034\275K \304\275\225\254\257<V\346\253\275H\270\003\276\014,\276\2757\365\332=\371\2778>\277\265\377=\374\355+\276$\244\024\276\2070\n>\235\342\n>\031f\315\273\032\363\315=\'\217\235\2755\335\272\275\355\317=>\035\025\325=\300\372\252>\365\365\014\276\026\363>>\312n)\276\310B6\276\366\200\006\276\261\273y>Y\014A>\346\316\022>[hD\275\003!J\276D\033(\276\321\343\221>\265\003\237\275V\205\036>\177k.\276\236-\347<\007\200\243=R\356\222\274)A4\276\214k*\276.\017m\275\321WU\2769\014\321<\314\376\346\274N&\313\275\002\236Z\275A\210s\275\231\271]<vy\001>\324\022s\276\227\332\371=\306\001\020\276Ez\234=K\237t<\027\205\264\273\201\252\235\275}\tm>\354\350x\275\317\273\022\275z\'\016>[\217]=\024\005\256\274\220\200\335\275\276\333]\275\232\241\201\273\037\202\021\276\341\334\232\275\347~\332=z,o\275\031\002\001\275\000\300\035<\346x\006\276\035;\r\274\231\356\265\275\362\024\007>\223+y\275c\301\216\275y\203Z\276Y\356W\275\377\216#>\333\221=\275A\374;\275\201\376\r\275\301$[>\016<\241\275\247B,>\034\335R\274#v\263=dV\254=\\\n\035\276\312\247\023>\375\270\017\275\213\230\253=\332\212\177\2743!j\275\315\002\376=+\230V<\177\221R\276\221\t\346\275/\313u\274)\267G>DH\'>\031\313U=\372\226\252<\241\317\350\275\313\036\001\276\374\362\014>\240pM\275\024\367\311<\2401Y=\317X\233\275J\311#>ZX\305\274\310\313!=\022\321C<\234\323[\2764\331\260=\335\371\033>m\n<\276;\207\300=|\207\316=\007\026$=4n8\274Gkx\275p\354\226\275Z\2276\275\025\332O\276\233\010\217=GG=>I\362\376=U\326!>@\351\267\274\255?/\276\377\377\007>+\200\254=0]V\276\004!\230\275h\206\264=\226\270\027\275\230\024M>L\336\010>\251\377\302=#\220\010>d8+\276W\256V=\371_\355=#\242\360=A(\322\275\250\t\267\273\210\336<\276\225\0356>\000\231\224=\027_;\276\2502D>\371\327\330<\005\353\204\274\270;\020\275\231\342H>\027\025\022\276]d|=\216\231p=<2?\276\311\270\022\276\316S\226\274l\312\310\275\223?\324\275\030\323Y=\217v.>\242o;=\235\372\277=\252\026\211\276\215\360\366<}u\200=\334\036\354=\251\223\346=\311)\027\275\255]P;\325\340\251<\033Uq>-\333\036=\256n\206\273U\001\215\273 P;\274\361%-\276\374\263i\276$e\230\273\372=\363=q\341\353\274\246\373\347<\033\375M\273=\034_\276(\'\363\275Hg\004\276\"\373\3169\200\367\031\275\343\326\315\274{\202o=\363\312\211\275\222\360(\276\255_?>&`\350\275h\341\366\2753\312^\276TO\315\274)8f;\033\326\242\275\343\017\033>\3169\006\276\327m.=\336J\256=\306\275\200<\252x\245\275\252\321\253<e\357\013\276\326\267\236=.4\333=\251\361{\276\247\314\035\276\037\331\376=\310\023D\275\265\223\035:\210^*>\334\355S\276\001\271\017>\t\031\220\275\232\303\227\275\177\336\221\276\335CE<\217\016\254\274:6\324\275)\271\347\275&\304\200<?*\217=P\035\r;\336U\021>\317\264W>\216\201/>\002,&\276t\353\323<Y\3641\276\236\361\310\275\246?\"\275\337s\262=\242Z\220\275\374\370l\275\272[\022>\315\260&>\2152#=\226\177\">\373\370G\275:\222D\276\262\331i\276\3325\002\275\242o\304\275\252\037\003=\035\353\342\274\302\260\222=\301a\224\274\324Ah>\233\375\277\275\323\034\310<m\346a=\260^Z>\rk\216=C\n\266=\311q\267\275\t\345\010\276\277\353\t>\">\000\276\336r9\276\001\222\352\275w\215\347\274\2377\036\276\317\'\276\275D\373`\274\315E/\276Q\272\253\274K\206\323=\325\210\017<7M\216\275>\245Z=\312\254f\276G-\014\276\r\263\247=\327\005\003>l X>\\\037\r\275=\316\257=M\275\215<\021\256\332=\376\243\341<9\266L\275\235c:>\003\035\233;\020\213{=!\270\251\274|Wg=\275O.=\224\224\214\275\261fx=\306\000\376=\002z\321\275Kx\376\275\353/\357\275/DD\276\2360\005\276\350\325 \275\002\357\014>\364M(\275\246\t\016\275\210\205\351\275\'\367!\276\315\305\021\276\255\245\312=\022H6\275 n\375=L\3510=\023-\217\275T&!<I\366A=\206\017\324=C\214\205=\220=\322\275\222u\203=A\245\r=g8M\275o,\236<\334\373\213\2759\336\026\275\271\205\374=\026\004s<6y&\276\327\353*\275\3314\212\273\027\206\203\275\213t\331=\263\3428=ap`>\327^\037\275x\215\033>\267\241r\274\241\236\332=Q\330r\275I\343\307=\010\336\244=S\256\210\274\332\233\216>\227\010\231\275VS\017>\345\242\\>.\014\001\275\307\020\035>\340\033\330\274\270\316\227\271{\316\025\274\341\335\036\276e\030L><\345D=\211kc=?\361\306\275\311^\200\275\222\315*=\363/\243<\274\245E\274\267\336\312\273n\343[=\232x\032>\242\207\207;\n\264M=\036Z+\275A\235\224\275\r\225>=\214O\251=\263\345\311=\363Lr\275\017}3>\222\016[=#;h=\326\346\001<\025\376f>\350\260M<pk\201<\340X\216\275a\177\230;%\215\211>\235\n\230\275\353R\211=x\2319=m\005\245;)t\200\274\346|$=\215\252\351\275\326\020\270\2748\342\334\275\003\032i>\276\270A\275\226,\310\274\274l\017\274\350\300Y=u\035\211=\260\327\023\276\030\032y>;N}>\222R\220==R\261=K\nc\275\035\345\317<\226\344\036\2754\217T\276Wv6>\030hY=\305\025\343=\013Y\027\275vI\231<\226\306\013>w\032(\275E\016\226=\003\250\013>R\345\010\275\300\207}\276%\031\020>\240A\237\275-\201\301=+\031C>\355\312\020>\212\365\326\275\365\005\025\276\237\365\202\275y \256<\r2\350;@Y\014\276\327z4\276s6\232\275\336\2212\275\262w\251\275\t^\247\275\005\020\000\276H\336\316\275/\245\"\275\225\233\335\274\037\342\266\274\2743o\275P\323\262\273\254\257\354\275!\211\260\274:\003&>\263t\263=\325\252\022>\224=\203\275\r\200\234=\310<r>\340-\316<\332\t8>I\310\200=\246\336]=\346\035<>\375\260\005>\264\345\006=*&`=\234V\277=\007X:\275F\231\326\275\022K\321\275q\214\243>\nT\352\275\320\267\246\275\235\017\022\276\316\216U\275\352\030\346<e9\007>Di\201=\025\242\352\2747\277\266\275\242\342D=\365\207\203=\336W\230\275Ss\364=\354G\213\276\2563\257\275\027\023\310<\375RJ\276\333|\245=&!_=N\330\215\275\033\032\033>\303\332\000<\004\351\340=W\363?<\350\037\220\275\244\267\316=\373\372<=\251I\245\274\001\034G= \006J\276\334\237\231\275i\345\036\276\301@\244\275\266\3662>\274I\304\275\277\223\231\274Xp\325=\266 \272\275\327r\271\275\311\270?\275\323\243\322\275\355q\266;KZ\010=\014\n\027\276\355\247^=\204\006\362\275}\350]<\025\325\345\274tNn=^\270\t>\311\3362=\306)\343;s=\320\275\211}\000>\347\250h\275*\205\005<G\375\221\275\262\234\231\276\242\332\264<9*\316\274\272V\321<\347\036n\276\022\022\254\274@\201\343\274\212r#=\010\331G\276\227\326\321=\333j4>I\307\277<\321\014\226<i\307Q\274\033\031s=\320\226x>*\271\232\272\334\306%>\020\277\022\275\266\306I>\236N\261<\207\001\310=\325A\322<\246\034E\276@\233\200=\233\033{\275\267\207$=\206\277+\275\274\0265\275*\224>\276L\357\271=\305~%\276\004\362\351=\305\277\016<\233\302&\276<\331\273=\276_\321<G\302\002\274\230\2676>\237\202W>\255~\264\272\352\376K\275)\202\224>\201vT=\352\016\377<\n\003\033\276;:S\276\313\364\263\275g`\201=\014\251\022>\301%\354\275\241\267\004\276\020>B\276L:\253=\010p\276=x\246$>i@\357=;\351\317\275\376\376\266=\276\231\033=\031-\251\275\250\326<\272\265#*\276\200\375.\275\r_\235=\263z,=\210\355N\276R\373N\274a\311\r>j\255\311=k\246U>\343\253\035>`\255\024>!$\357=\314\354\014>I\320;>\267zu\275\371\017\032>\\\347 \274\264P\243\275\2763\360=t\312\212\276\202,\025\276\205z\202\275Y\370,>H\026\271\275+\207\363=\231BM\274{(#\276\362A\037>\363\274\351=\023\245\355=(k\351\275xB\214\276[\277,>\354\256,<\253\271k<\257T\301=\277az\274\357It=|\025_\274\373\331`>f9\313=\241\210E\275\346\215\277\274g*\206\275\345\010\033=\304\302\341;\240\214\371\275\262A\272=a\373d\275\241\327\232<\022\177\241=\212\376\234=\236\032*>\317:\013=\177\371\200\274\310\272\n\276%:\376=\323\307h>W\000:\2753Y\246=&2<\274\207\'\322\273\313\313\360=\324\225\205\275\237z\312\273s\225\225\274\367\3258>H]a\271\032\031.=\213;E\276\n\323\026\276|}\206\275\266\234\252<%h\202\275R\270\237\275H\001H\276\352\033\030\275\231\353\303==\202\333\275\007]\377\2736$\350\273#Z\247\274\342\251k=G\031-<\315\244\013\274\037X\344\275\274b\301\275uB\'=r\347\210\276\201\314\026<\217\263F>c\360\010\276\210\'\225=\272\215\267\275\200\353\263<\003\240\030=\016\201\266=\317\227Y=\3778\322\275A\244\330\275\374E\204;\254\374\357\275F\216\017>q\302\267\275]\365\204=\200\031v\276\213\027\234\276\300\'\337<\366\036\002\275i\320\241=+J\265=\024X\260<+\240E\275\002=\004\275\344!\214\275\211\374d\276\247<|\274Q\306}:\347\322E\274\276\272\000\275\271\241f\276h\376\246\275\304xU<=\0264\275n]\024\275\304g\007\275\336\020\301=\215\022|\276\005j\026\275\3274\333\275\323^K=VcZ\275\007\350\227=,fr>x\244\004>\251\314\372\275\357m\236=Y\354\231=\2610 \276\240X\226=\347\242[<\203\205\257\273\267\373\023=\273K\260<\177q\262\275\302&\261\276\236\031-=1\260\206\275\341W#>%H3=PO6>8\2303=9\200$=\336G$\274S\366\202\276>.0>v\345\004\276Yp\327=\273j(\276\250i\377\275\264\350h>\023\231\r\275%XQ>\004\243U>\325\323l\276\263\223.\275%\244\237\2763g\310=C\230\276\275\233dB\275xbk>\340\241\234<\002/\240=\306=\016\276z$\210=8\240\261\275u\222\221\275UO1\275\355o/\276_\263d=\r9f>-\372\266\275\021\234\272\275\304\301\315\274\003`5\275\266F\246=\010B\214\276?\027\362\275\262i\257=m\247p=\030\021\032=\206\314\217\275a\327\340=\222\373\324=\304:\t\276\265n\246<\023c\274\275\204\201\366\274\322C\016\275\266\223\321=a\237Y>\364\251_>9\\\305=e\n\213=\356\032>\274Z\344e\275\205\214\211\276y\310\355\274\205\256B\275\351\262%\2767\225\372=\007\244\322\275\336LR\275\023\252\255=\316j\013\2760/\006\276\340\352F=\005/\033>\335\301N\272/g\274=\004\2457=z\013\315\275\263\321\035\275\r\226\342\274/\311\336=VK\237=\3269\315\274\003\2077\276\340\303\275\275\323\200\222<\300\272\024<d\247\237\275\205\'\314\275\310\177\306\274g8c=\2270o<9\024\212\275\243\204\247=bz\213\275\375\312\355\275A\017\257=.T\002\275v\342!\276\021\031\227<\"d\204<#\272\335\274\220}\264\275\277\220\007>\203\323(\276VL8\275\033q\206>\266\354\271<\002X\031>\326\2468\272{\270\267=\352\275\001>\347\206\305=\216\024\354=\244\234\301\275\301\315:<\016l\354=c\r\206;w\336\032>^3x\275O\356\320=lp\375=1d\205\274%\254Z\275\273\221\377\275Zn\265=\034\355\272\275\211D\002\275\2269\305\275\221\031\230\275d\247\251=\233\274\221=X\020\263<i\026\316=\3603\022>{}\026\276 \217\376\275\245~\024\276+P4>\244\322\246\275W\237\312\275\006)\033>\365\354\325=$\314\021>`\212\251\274\317\034\340;\006+\352=V\021F\274\222U\267\275\303\020?\275j\274u\2754\275\371\275\000\230\245\276\260y\227=\232\317U\274\324\237\260=\374G\203\276|B\244\275\353h-=\226\203\347=\310\200\217\275\215i\366=\277\303n\276\363M\331>\361\352\006=;\215\240>\277 \347\274>\314d>\023\335%>\201\325\231=\326\267\215=m\035\233=\325\244\251\274\352\226\243=G\306\024\275FEC=K\276\247\274Ae;=d-z>\177P\303\275c\356)=B\227!>\372\250\265=\314f\017\275/\342\341=\342\350\370=\025*_=\262\306)\276\243\305I\2753\341\021\276\007MP=x+\006\276\203\306\033>\342\006X\274~\226W\276\244\333\311=\022\334 >&\223\330\274\333\2308<\350\316A>\243\346\016\275)\217\374\275aeu>\231U^\275\201\263\n=\233\211!\275eKO\276\327\023\271\275\315\200\017\275\3055\211<ZJ\304=\217A\210=IV{=NlJ\2763P\243\275\017\246`\275^\361\203=\217\032v<w\315J\276<\337q\275\270\307_\275\215}$\275)\372x\274}\2461>B\202@\274\237\325\210\275\267\315\214\275\006\327\215=\322\367\322\272\217\350\'=\020\277\250\275K\370\277>uN5=+\263\017\274\305o\'=\300\022\216=4\332\256=\322xR=[3o\275\342^\251\274\353\255\233\275\353\330\247\274\241\")>\377?\021\275\027Y\212>\213\313\372<K\364\023>\'\370A\275\364\010X>\037\333\242<V\364\036\275\000r\027=SvI\275\342N1\276\341\006\205\274\265=\014\274z\336\204\275\032_\024\275\223<&\275\323K\306\275\341i\262=-\227t<]\326Q\276\3476e\275\341\013\326=h\2201>6\014i=\362E\325\273\251.!\276\212\263\351\272mW\331\2743\3470\276\240\033\273=\336$\305:#~!=\026Z\212=|hI\275\253c\005\275\225\3679\274`\332\373<\010\001S<\036\0013<_\021\026\275?\230&;!\341\342<\037@\255=\320\314>\276-\023@=\260\247\203>\255\322\207\274\324T\217\276\237k\027<\235\3308\276\374\237\314=Kv7=\3603\245\2755\320\216><\376\001=\230\0010>W\303\216\275\254B{\274g\323\237\2759(\365=\243o\327\273\207=\003\276Z\314\313\274\310\262\005\276\274tN<\243M\014\276\234\2265\276\3758C\275\306\223\032>yu\007\275\356\356\216=\245+\014=iHV<\271\231v=T\353\326\275u\3058\275\252\235\261\275\027:\302\275=\273\212=\244ap=h\222\226\275\263C\262>\312\222\n\276\024\001L\274\307\000\353=#\334\342=!\323\346\275||\262\275ZTp=\245[\022\2764e\306=\3574\375\275@4\r\276\301\316}\275F\206\026\275\014\326s\276\024\230\024\275\274\311\302=\275J_\276\272\033\341\274\022\255\'\273w\r\010>\351\352\210\275\n\255\245=g\360\342\275\177\306\300=p4\300\274\177=\347\274\022\"\203\274\004\r\210=\034_p=OY\t\276\277\321\002\276\270v\023>~\334\261>/\000\031>_\205\336=\200\341\034>\236\r\020>\227\206\362\275\035,\340=\313\220\341\2751\344I\276)\023\260\275M\316\000\2766O2=\223\325D\275\2140\201\276\037\261\234=`\353\314=\026\360\007\275\305\243}<\005\256\227=\375f\034=S\267\005>\243\013a\275\305\333~\272\357\330\337=\032\243\005\274\254MY;>+a\275\337T\014\276\370l\010=\217\224\207\276\241\250\210\274\016Cy=\020M\341= .\254<`l =z\013\003\276\000\022-\276\364\367\310;\3367Q\275p\356\207=%\037\014\276g\250G\276Bb\r\2744$\021\276\024k\313=\250M\t>\252P(\276\023\2408\276\222@\331\275\025k\234=9\332\305:\251c\026=\307\032\322=\006\357\352\274\354\007L>wl\375=G*\277=\003\2529>\306\3378\275\365i\n\276xH\251=\002\347\347\275B\327P\276iVk\275\232\374}<\222/\275\275j\356Z\275\2639Q=\360\316\007\276\363\236\230\274\313[\016\275+\314q=\033\302\206=\n\000Z;\246\324\243\274\024UF\276\316\244?<\372\344\321\275?RH\276\257S\r\275\010\370\372\275\2147>=\245t\270=$s2\276\340\225\336<wm\022\276B\252#>\032H\314=\352\237\374\275\3342\242\274\340\236q=\024\017\354=Y0\255\275Qh\222\275\337\262\261=\377\340_=\257\225\235\2750(\212=C\r\271\274\313b\000<cUU\275\233\374D\276Mtn\275)G[>\344\226\210\275\251j\237\273\247i\027\275\000\272\237\275O\265\373=\315\312z=\246\332O=\230\362\374\275\356;\354\275\007\247r\275\026\2432\276y\000O<\374L\257\274\026H\033>\310\373\220\274\377\246F=\274\025\211\276\353?\325=\272B\345=\206\007v=\200\314\263\274\246H\n\275\031|\025\276\246\305P=s\262\005=y\372\270\275\366\203\026\276\211\365\\\276\037\212\211=\350\021*>1+\200>\233\017[\276Tp\024>\025\214B\275\221^\252=\037\022_>^\276\010\274\0109\257\274E\240\013>\024\223\251\275};\017>\'\023C<\316=\344;\225\352\014=\263\256\240=9\305\013>\020jV\275\002*\033\276=\250\027>H>\367==\370\310\273\226\326\r<x\334\013>\367\267*\274\233\366\224\275\375B\235\275\325SD>\032\247\210\275qx\010>\234\2554\274\227\311u=o\377\267=\3172\305\275\372\023\343=\004\222)=I\342\013=\375x\365<V\366\321=\326\264\301=\022C-\276\036\241\357\275\304\375\312\274VB\316\275}\204M\275\2078\235\276\363Z\271\275q\345\365=g\003\035<o\002g=\302[$\275\':\224=w\216\272\275O\334\203\276k\376\242=\310\322\026>Y\032\013\274\342\272\311\275\337\225\005>\274\204-\275_\363E\276\307\020\342=\225\200*\275?/\342;\241;8\275\243-:=\001\274\350=\370\370)=S\271\345=\275\215c\275\367/\t\274~\031\241=\376\1776>\251\217[\274\232$\332<\217N\021<U\332\267=%r\007>s\002\213\274\210,y\276O_\330\273\206\345z\275I\260\367\275V\333P\275\246}\031>\262\265\275=\223\237\372=6\n\266\275\036\217\312=\207\306\304\274\300m&>\231\215\226=\371\353&\276\263z\366=\271\245\177\276~-b\274\023\274==\313\314K\275\251;\264\274\rg\316=\226\255\223=\236\034\216\274\332_\271\274;\257\335=\227\252\315\275\344VP>\315\205\344=z\331\037<\333\223\215=H\335v=\346\324T\276/\034E\273\031B\235\275\330\317A\276N=\023\276\3007K\276\335=\356\275N\304Y>\301\313\373<cM\220>\244\016\344\275r~\314\274x\327\344\274(\214)=\251\352R<\215\275\324\274\235\365M\275t\0223\273\032\016\261\273\265\213\t=:cL\276\306\215,=\364\363\020\276 v\337=\325\010\215<\234\022\206<\247\362\010=\215\214\355<z\260|=\220A\270=O\352\365;C*\263\275\204\005u\274\220\230\337=\22669\274y\352B\276\242\306F=\370bQ\274\335\235\034\276D\362Z\274\251\375\344<K\375\\>\251\321\r\276\030\002\270<\24317>\210\345\217=\017\344\351=\341\320\030>\352\0109\276\205\354$=\365\301\211\275\240\255^\275\343\305e\274\017\235K\274]\032%=Y\027\343=\3737\237\2756\302\026=\324\325+<_\023d<\030\227\303==u\002=\317\334\375<B \255=\351\007\207=r\252s=\300_v\276h\216\345\275\316g\351=\347\357\214<\rx\203=\036\332\205=\2366\335=3X\231\273\317\330\366\273\207P4>\'\301\003\275(S\250\275;L\267<\370\306\336\274ML\343\273\354@\364=\271y\235=A#\001=\256T\305\275\273\202{=\314\301\025\275\316\205i<\203c\'\274\342\376E\275\310\353\317\274=t\361\272\203K\242\275\3779d=&\345\277\275\'\236\234=i\265\004\276\236\244R<$\333\216\275\344!\245\274\276\267\350=\354\230\017\276p\302K<\373\263\\\275S\371\236\275\355\260\013\275\352\266V\276\211/+\276\363A\311=]\322F>,K\355\275\367e\222\275\234G\207<?\274\014\275\002\373E\276\207\276r\274zf\222;\356\241\221=\260\006\367\274\3425\300=\350\320\006\275p\023\365<G\301\020>\003\353\372\275\253\213\020=\230\232\">\004\3421=*\016F\275x\215\247=\365\346%\275\350\005\245\276F\216\267=\002\037H\275\032\031\210=\202\243Y\275.\316\331=\330\342u\275y\027\035\275\376L\272=\326.\246:u\303T>\020\275\313=\346)7=_\202+\276\032\234\233\276\\x\235=\272\2665>/\257\025\275\336\231\276\2753y4=\314\372\273\275\024\306H=<\373F=\266\t\036\274H\013\005\275F\270+=\304\371\301=\354\265\242\275\205K\272\275[\341,>v\355\316=akc>\234f3\276\267\367H=t\222\224\276/!\223>\207\200Q=\020)\210\275+\317\251\274\r\357\217\274\312A\036>\376Z\262\274=\322\203\275\203#\303=\250(\r=P\250\021>\366\326\021>\036}v>\316\'4\276L\251\331\275\200\243<\276\301}:>\t\226;\275\262\2646;?\315\221=\231a\244>\253\260\024\276\240\314\245=\335\340{>\247\036\361\275 5\217\275f!\020\276?\035\216=n\336\211\275-*\200>\302O\326:\316g3\276)\267\336=d\373\024\276v\355\001<\214\235\025\276\367H\337=\356m\223\275\035T\231=S\177\302\272\212\321K\275\374\337\016=\003<4\274\377\364V=\021\205;>\337\210\224;\227;t=\327\247\252\275\301J\010>\037?.\275\3432\027>\2412\035\276\354\326\243=H\322\212\274\302\200\337<\356_V\276?\300\r\276]\201\254=\317\221\346\275\324P^\276\347\312.\275o\311\371=Z#y<\217\372\347=\363\304)\275\002\202\017>[f~\275\005\200$\274D\224\024>\367ly\276\025\260\220\2752\357\013\274\210v\222\275\377\221\327=\'\3166>\306zC\276\233\366j\275\343]\256<\204\3276\275T$\226=\361:\334=Tm\320\275\341\270Z\276\353\253\234\275u\027b\274\227X:=[\n\305:\n\330\211=04\364=F\032\177\275Q\227\265<\210\365\n\275\211\027\373<\335\317;>)\2322=\247\307\217\275\243\373\323\275\306\334\342=\007\366\224<\333zG\275\264u$<\237>\374\275a\367\003\276Jz\'\274\004\245\243>\001\346z>\367\247\200=\276\231Q\275\260\311\325;LL\207\274\234\351+>M\366:\2759}\263=\0277C\275\257\326\325=\263\352\353=\363\031$\276\013,\323\273q\311\035=\255\302$>\214\016\321\274\034\260\243\275\300\034\027\276\006\272\224=\3337\250=[\203\231\275!\204P\275\340\361\212\275{\210\026\276f\263\034>\374\256\270=&\276\264=.\272\267=\364\321V\275\374\233\004\274\334WM\275r\007\326\275\007g\233=\372\355\235\274\265\260\272\275\277\"\200\276\232\211\363\275\221F\274\275\323\201\233>\363\210/=\tc\'\275\347\331H\276\345\223%>\231\345c\275nc\271\275V\221\036>H^\017\275\373\241 <$\251$>9\245\303>\214wZ\274Y\347\206=\204\214,<\255.\253=v\345\376\275\363\010\345=\353\217\213\275\245[\200\275\306N\036=%\213\t=j\247\335=\003\230|\275hC\234\275\325\312\374\275\t\026\031\276 \003C\276\2540R=\315\320\000>\220\244\305<V&\002<\314\266\n\275\366\304\317<\310\000\265\275{c\231\275\357\347\360<\031\026\205\275\356es\275\347B\224\275\251\333\234=\nb\n>\300\320\t\276H\002\"=1\316|\276\217a\205\275\257\331\242=t\376\250=\225j\022>\225\261=\275=\005\237\275\373\206\022\276^\304\030\276N\'\016>\272[\357<\016\306\017\276\221$ =\264T8>OqC=\246H\010\276:\352\354=\221\274\323=\026W\020\2756\353\255<\223\'M\275\266S\252=H\307v=\007\276N\275O:S\276q\343\355\2759j)>\237\206\'\274\017\374\231=|\226U\276\251ma\272\256cE\274b\357\r\275\336\010\243=\247P\236\2759\211\216<\231\351/\276\356\216\357\275|\272h\274\204\203\322\274\010\277\004\276\245\223\177=>\005R\275=\320\257=\340C\203\276\345R\313=\032\235\304\275\357\363@\275A\362,\276\241\327\255<\263@\246;\033\246K\273^\3049>\363\307\207\275@\272!\275x\025;<\326OH=@=\244\2741\225\216\276MB?\275\351\267\340\274\0369\361=\224\321*\276rj\t\276\304\365\025>A\330\017>\027.q\275\217\366\">\255AC=L\337\220\274\271;P\275r\254Y<H\3204=\251\363\347\275\033\221E=\326\307T>P6\245\275ju\321\274\033\010\220=NS\375\275\316\243+\275+\016A=8\017\227\274\330\223\247=Ht\213<\217\273\001\276Og\022=\205\227\334=!\217\246\275\"\320\347\275\303\301m\275\216.\235<\344\315\207\276\352\241\273=9*r=\014<\254=H\212\252=y\304C<\246\214\250\2758\006\263=\232]\371<a\244\371<\327/\247=\003Z\225=\026\332x\275Y2\033\276\020y\222\275\376W\311\274\rD\027=\021\301\313=\242W\021\276\350d\347=\212\322I\275\343Er\274\007\245\n>\330-d\274c\343q\275\372\021\013\276\'\260\001>WA\321=\376\325\\=\2443\375\274N\203\023\276N\201\322\275\177\027`=\031C\n>D\235(\275C\266\333\275\034#p\276rIw\275S\274?\276\037\336\210\275uz4\274\215;\"\275?\365\275\274k\310(\276e\301b>;,\242<)>:=a\004\024\276T\262<\276\256\250\343=0\024\367=,\234\202\276\020\314;;4\377\007>\375\033\t>\233\215\232\275}\265\363\275\027\376?=\'\241\334=\335\177Z>i6\341\275\t\203\213=\022%\014\275\321\315\213>m\t8\276h\360\242\276\350\3260=Al\270\275\022\236\003=\0037\367=[\370\321\275\321\245\240<\303|\360=i\023\036>\360\303C<\nK!=\257?\274<*\316G\276eP^>\325;u=\373\003\372\275+>\372\275O$V=uQ)=a\007\315\273\236[H\276J5B\274$\340\327\275\362\245\242:\035\227\214\275\231\237\320\273\366\262\256\275IK;\276\027q\311\275\342\345u\275\317gH\276\327\240\234<\304\342\307=\310\307u=\244\245\223\275\335\325\002\275k7!\276\264\212\361\275_o\260\274\013\251\037>\217\354\222\274\016q\001\276\334i\036<\214\022\002\276\3750>\276p\222\312<7\341\004>?\316m=\n\205\256=5\032\363=\324i\314=\n\372\244<\340\364L>\036<u\272\240\206/=(+\214\275\244\272J=\323:2<\001\362!\276 (A\276\331\023A>\335]R\275\342\037\331=\234\320`:\253[+\276\371\004j<._1<\350\375\016>\227W\247=G\342\260\275\322\264X\275\3005\034>\253\255d>\373\305\031={$-=\367\356\271\275\267&\\\276e\235L<X)\022>M_\346\275\300\307;\275:N|\275\270\220\207<\253}\307=\375\237\235=2\035\026\276\\9\004\276\207\322\">\177X\325<&\023\026=>\313\324=s\023!>gg\005>\037\373$\276KU\276=\006\230\257\274\266\361\221>s\275\371\275!\nQ>\270\303\004\276\371\277U\275\207\177\277\275%\265\005\276r\254Z\275\364.\321=A\305\372<p\327\217<\216E\301\275\014\321;\275._\205<t?x\273\3525\306=J\327\237\274o)\361;\177Q9>\376\005\206>\374\021\253=p\216\371\275\002~W\276t\362\233\275\271\212\266=\253\266c\273fP\t>\345\202\\<M\371\343\274\001\262n=\337\314\356=>\312\345<tY\214\276\010.\006\276\260\204/>\330O\257\275\241\222\256=\375\313\307\275\025}\200\275\344zT\275\ra\024\276\350\245\255\273\376Q\216>L\232:\275\177\021y>\236\3773=\202\013\352=\217ZF>"
          }
        }
      }
    }
    node {
      name: "deep/weights_layer0"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 90
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_layer0/Assign"
      op: "Assign"
      input: "deep/weights_layer0"
      input: "deep/weights_layer0/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_layer0/read"
      op: "Identity"
      input: "deep/weights_layer0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_bias0/initial_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\\C\352=\034\232\207=;\007\365=E\334s\276\223\032)\276\016\t\005\2751\213?=Hu\230\275\226\nL\276[\242\177\275.\337\333<\t\322\353=H{\207\275A\035\252\274F\365\267\274DT\243=\262\007\252=7\225\241\275\000n\026\274\335\2576\276_i\226<*Z\220\274\022\024%\276/Yv\275\361\3158=\242p\275\274\243j\274=\330\270^\275\304\224a=\200(?\275\262\372\333=\347\231\005=\235\n\014\274\262\324n>\003\313\201\275\301\022(>4\304\245=\237\323\375\274\220\022\356\274\343\321\370<\366\022\213<^nx=B\177\031\276e\234f\275I\344\363=\320\304\032\275-;\202\275\031\202\234<\217&\223=;\340\356=\371\007\225\276\\\2003\275\221\220\207=\360l\232=eoH=\322\310k\274?\367\3328Y\014\022=\312H\030>\'2\351=\221\310\244=\377\320\226=\021\234\353\275Nx\257="
          }
        }
      }
    }
    node {
      name: "deep/weights_bias0"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_bias0/Assign"
      op: "Assign"
      input: "deep/weights_bias0"
      input: "deep/weights_bias0/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_bias0/read"
      op: "Identity"
      input: "deep/weights_bias0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_layer1/initial_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
            tensor_content: "\3525\220\273\332\216\243=\224N\216=#\221\034<\324.[=y\260\253=\353\314n>\037\034\206\275\037\016\177>H\311\344\275\276\023\211\274r`\344=\232\362\355\274\\\355z=6\314\203>\"\230\213\275[+\005\2760V\337;\232\017\361\274\222\006\010\276\234q\324=d\356\353\274_\227[=\010\2723\276\324\315\335<\253\014\347\273\303\252\232\2755\005\221\275\261\026\320\274\346\224\023>?v->\204\333\016>\034\373S\275\303S#\276Q\320\007\275p\226\353;\023\313\031>\311\205\037\275?\3167\276\235\022,\275t.\221=v\375\204\276\363\356\202\275<\033!\276\351\334\223\275D,\371\274\240c\205\275\365\250\274=B\316(>\345\322\331\275j\247m>\274\216H=\030X\251\275d%\274\274\222\312\307\275C\276\272\274(\234\275=\302\2021=\016\274\217\274\027\271\003\275\252\270\204\275\322hm;\202\023\214=\032\322\204=\010\3204;\001\227\034>5\'\026>-\001\224\275i\230\341\275u6\253\275\025\223\231\275\313\224\306<\345\003\212=b8\207\276\2610\205=7\202\254\275\024\336*>\207>\276=kK\266\275q\210\325=\327G1\276h\003\203\275l\315$\2761\005\026>\224\001\021\275\206\315\312=\021\024\307\275s\227\244<4\324@>\341Q\013=,\321+\275=O\036>\3634)>p\234\372=dW\236=\336\034\332<l\270b>\330{\261=\236\200\230\275\336\204\322<\375\353\004>\242\022\352=\023j\340\275+W4\276B3 >\341\363\222\275\235\265\376\275\252\331f\275T\212\376\275\020\263\'\276\341\0322>b\203}<_Y`\276\t\354\252=\233\237\274\274\304\0260\275\234\325\306=\354\262\t\276\3609y=\0103\267\275\354\351B\275+\374E=\207\227$\276aR\032\275\226\347\326\275<o\252=M\\n=\336\274\r=x\326\026\275\235\223\301\275\025!\005\276\243\023$>5\314\312\275\224\223`\2750\244\n\276\257\021N>\311\273\210\276\326\224m\276\020\243\277\275\177\336\221\273\346\215\246\276\263E\017=\254}-9\266{\372\275\202\317\305<-8\246\274\272px\275!\332?>/\301\345\274\"\343\035>\376Ya\276\374\264\312<\2245+>\322%\363\273w\004\256>\371+\217==\354\260=$\335\204>\026\234;\276\017MT=9\376\312\275A\253v=4\334\013\276\200\000\302\274Ku\005\276\350\033}<\316\312\034\275\250\236\374\275\203[_\275\207\214\234=\223I\277\275\021\266\360\273c\230\320\275\022\236\215=\200[\277=\\\363\325\274\304\220\245=U\\\327\274h\212\216\276\350\364\016\276\372\235\321=\203\217\215>\002\307\266\275\265\200\231<\207>\201=\254\030}\275\303v\226\275%6\025> \254\"\276\215\373\034\276O\031S=\230.\306=j\300\243\275\212?\017\275\367\323E=\3175\037>\332\006\007>\313\002p>hR8\275C\373W\276Gc\215\275NFi=\325\277g\275\316\375\340=+K\'=\004\360\"\275\\?\205=\033\004\027=\317/?>\252s?\273R\323\253;\333Q\315<\314\3534>Z\357\017>x\251p=\314\177\231\275\273#\022\276\240\217?=Fz\003>\322d;>\204\013\026\276\272\306!>E\307\255=ix\257=\020\220\257=w\245<>ce(=\240\323\324\275\205+\006\276\357\262\001=\307)\375<\345\337%>w\n\032=\">\316<\035\2107\276\230\035]\2745\322K\276\324U\010\276\033?\001>\301;\013\276\241\221\024>\307\025\227=\273Yg\272\204Pq>\375\005\213\273!\325w=\253\343o\272n~2>\211\264)\276~\333\322;\240\317\366;/\275\363<\224\'\312\275I\274`=\306\037\345\275\205\375\317=\333g\202\275\376\r\330\276\333p\326\274\006\362~<\312\265\214<\350\320\263\275=?\217\275B\267\316\274\365\356\321=KN\325=q\373\230\2768\344^>\212\256H\276\215S-\276\224\307\013\275J\332S>\304Ph\274Fm\'>\346\r\030\276\241\276\030=\374\231\272=\327v\222>2*\023\274\004\347\374=&\027t\276\344\252T\276-v1>l\214\251\274\000/\200<\2420\304\275i\357F>\325\3007>\237\224i\275\036\203\023\276Ew\240=\317\032\327\275\330a!=*P)\273\2660\241\276b\354\033\274\033dL>\224Q\034>i>\204=x\037i\276P\373\247\275\2241O>\271\311\034\275\330T\313\275G\3446<\246\025\005\276\350\223\\\275\354\250\310\273wg\212=Z\231\\\276\233\345A\276<(\230=oE\263<\305\231e;\346\351\251\275\362\235\t>g\213\217=Q\360K\275\311\017\333=\220|\205<E\372*>V|\025>\315\2302>o*6>\363g\014\275\2028\350\270\342\231\316\274J\037\031>l\263P=\006\252\316\275\251\217\337=\031#\212\275fB\014\276\205\230\004>{\275*>\3227\300\274\243a2\275\n\271\211\275\037B}\274\003\360\003\276\2169\247=_\262\033=\2166\224>:?I;\253$\022\275\n\331\222\275\275\356\330=a\342\233=4\317\300=\344;\206<%\023\355\275\271K\276;\037V\202\275\2678\236<\225\364w\275\377\3163\275\204\331\203\276\371\373\205\276\006,L;\273\210%>\027\225\333\275U\204s>K\3150=\\v\016\276\231\202H\275m\313\020;F\322\335\275\216D!\276\306K\202\276\376\267\347\275\213\007\010\274\315\276:\275ELw=?b\347\275\275\036c\276^\224\306\275|j\030=ub\023\276Ug,\275\274If=\270\201\036>s\004\017>A\351\373\275\3235\350=+\034\006=\031o\037\272;\241E=\277\354^\276\2641\250=\0241]>Jy\035=\345\256N;\260!,=\361x\326\275\250\231w>\2269B=\350iU\275\205\314\314\275\262,Y\275,T\031\275$\376F\275,{\024\275\362\036\204\275\324]\t\276\301{\033\276\'p <\0177\217\274\245<\002\276\007\237\032=+G\252=\225\031K\276\264/+;\320\274\360\275\203\250\002\276p\271=\276~\2055>\022\037\032\276:y\214\276\177($\274\036\322\324=L@\262\275\327@^=\027\031\252\276\005\302?\275\031~\212=\206\203\000\276\346\343\311=]\240X=8\272\355=\377\253\021>C)\033\276;q\207=\003\277n>q\343\034=\224\246{>\263!x>\337\033q>\267\242)=\260\033\210\276\255\335\006\2767_\262=\022f/>j\227s\276\325$G=\303\333\313\275\261S1\275\273\341\333=\266\363\224\275\213\017\010\275\233s\314=\003\364\270\275*,$>4Hg\276*C;\276\020\336\024=\261\217\\>\317\261\237<\335d\223= !w\275\274|\347\275\251\256!>S\013Q>\'9%\276\006\311\030\276\004\204\242\275kH7>\006\237\t>\261\232r=\020\215.\276\273HB>\217\023;\275A\"\037\273o\014\314\275\037K\213=7\036\367\275\305\216\376=\275\313\366=y\241\363\275z\233;>%\357\\>\306\310i\274\033(/\274j\030\230=i\2342\276\343c\256=\017\351\342=h\246\312=r\211\212=\361\357\311<\317\223\007\276\273\223\373\2759c^>\226\016\024\276\276l\234\275\234\210H>\240\363Y\276\221\225I=\203/\330=8\350\023\275:k\017>\001\313\007>$!\250<\314A7\275/\341\216\276\261\267\374\275\021l\365=>8k=^i\241\273\203n\331\274\373yE\276,\004\025\276\215\347\220\276`M\320\275\315\350v>|\260(=\002\345\316\276\372\231\303=\241\207\006>\232\246\224=W\331/=\201p\020<\311\350F\275\307\034\356\275(\013\224=7\310\377\272\\\202J\274\350W\201<>\020\004\276b\205f=2\222N>4C\227\274\243p\024\276\214\025/>Q\336\371=-\350\276=(~\221=\231W\277<\326F\002\276\023\331\333=\347?\331\275[8?>\333\0322\273\010~z\276\',h\276~\340(>\233\177\217=mr\325\275\255\335\010\275\237\230\255\275\252\354$=i\t\024\276\206_\227=1\360y>\240(\330<\276m\210=(\217\'>dM\021>\017\277\366\274\252\246`\275w\363&\2757fq<\365\246\033<HY\005\276)\327->N\306\225>\363q\205\275e\216\266\276\027\311\001\276\317K\332<4]-<\331\201\022\275w\202E=\000\225\024=\355\035\376\274\224\034\312;\013\261b=&=D\276\210\035\243\275\304(,=l\334\340<\257A\253\275\351\321\275=0\363N\275\246m\001<Y\245\356=\355]\241\275\205\244\340\275\"\362\033\276,~\034:\356\274\010=\233\204\346\275\030\206\253=&+\037>}\305G=\206\216\325\274\215\310\033>\234\361\266<C\307\017\275 \330\021\276i\326\n>\352q\351=\223\354\332<\020\275[>\3103\211=\216\237\243=\314\340.>\303 \031\276n\230\322=\247Y\246\275\014\005\355\274\305\005\322\275\254e#\276\261\344\341=)\037\234<,\355\360;OT\303=\264\224\177\276x_\327\274\027\350\264>t\335\233\275\3551\337\274Zl\233\275\252\022\247\274\336\026i\275Q\001\026\276\002\t\267<\370\253\177\275\350\035\242\276qL \275\355<\021\276\t\017\322=\247jZ;9\001\360<\3569p>T\010\241==1\033>d\332\265\275\215q\215=2$\220<Z\310/>?\353Z\275\273d\244\275\34694=\325t\267\275/\3515\276\322\035_<\275\272\207\274\302\273\r=\364\007W\275\025\231\201>\317\306\375<\t6\233=xn\347\275\256\336l\276\230\031\243<\206\330\370=>{U=\201\273\321\273\212\307[\275+\323G\276\233\024I>_\351\006\276\267\030(\275\031 \2529\245\220:=t\252\240\2759\241N>\351\276\324\275\256\242\360=\376\021&<#\020\360\275m\330\230=\177b\266\275\223d\272\274\202g\267<\277\327\002\276\273\217\272\275\0010\034>\336\340K\276\255A\005\276\330\226\326\271\204\222\317=\352\027\377\275\031\024\216\273 S\201>\346\013\340\275.\252_\276\344xJ\275\022\027\207\273\362]\330=?\202H\275<\200\321\275\0355\320\275Ql8=\333\312\246=H~\371\275\264\374T\275\326\3265\276\205\"J=\317Q\263=}Z1\276K\037F\276\035\320\023\276\240\336\307=$\360\201=\254\002\243>]\267\363\274Ig\253\275d\201c=:L\253=\303\221\310\274\216\027\321\274@0\265\275\177\0179=6\322F=\365\275\320;YS\231<\001\004\354<\364m\271\275K\225^\276\224\222k\276\313\237\274;\360ZV\276d\'\325=0+\033;\\\3119\275\350\217\345\274\312\221\'\276\373\207\246\275]\204\364\275\270l\235<\227\033\244<\006\270Y\275\365\001\001\276\2227\006\276\311^\252=\001\310\221>\242\023S=\020QF\276\251\014\244\274p\233A=n$+;\336\266\014\275\351\270\271=x\245F\275\270\331,;\023\256\273=\350xD;\030H\261=\2763j\276i,\337=\320\361\322\275\235\346\307=\216\305}=\2531\242\271\247{\027\276\367\236\017\276\321\243\200>\213o\324\275\036C\344;\014\017\000\275\2200\357=\321<\333\275o\244\236=\377\014\310=\014\213\010>\n\201g>U\371\017\2749\244\272<\325\302 \2766\225\272=\360k\323=^2d>q\320\221\276\372\337\026>\340\025\027\274\211\271\277\275Xe\010\275F\316\365\275\235$\004\276c\363B\276\311\200\242=\265=f=\323\276\234=\342\030*\276Z\207\341=>o\027\276\303:\036\276}\220\245\274\2113 >\304\322T<\242\025\257\275\215_\023=\023\303M>\235u\247\274\267\t\255\274\234\355S>\375\337h=\303t\322=\221\344e\275\351nW=\205m\230\275~@\255\274\270\203\300=A\241{\276\016\320{\275\203\"\255=6\242\000=Z\325\217=!\3260=\rW4\275I\016\024=\342\240\032\276\014\236\240\275\345\260(\276a\330\306=\370\001\201>\026\231@=o^/>z\263\223>\354\036]=\273f\255\275\267\206\307=\024\207\274=,\356\340=%\274\230\275\252\230\366=8\257\343=`$\364=g\221\230\275P\225\312\274+\262\\=\203\314i>\316\323\262\274\325\313*><h\233=qD#\276Q\004\334=`9\316=\350\201J=\201f\232<&\",\276\327\206\t>\375A|\274\377\340\313\274\3130H\275:U2>k<\254:%\217`\275~\350\005>o\"*\276\326\333\205\276\030\247p;\020\372:\275\313@\356=h_\275\274^\331\203\275P#J=\352e1\2761n\251\274O\336\250<\025\211\t\276\026\227P>PVc=d=5\276\265g_;\200\326\372<\010\240_>\264\355\212\276\031\206\016>}\261\022\276\247\262\234\275\234\\?\275 \206\271\275\355\003\255=\202~\276<\343\024\304\275\2660\021\276#\236\211\276\307|\250\275`o\206\275\037\226[\275\025@\\>{m\203>\267#;=\372\201\335=\274\275=\276w\003\306<)\\;<\253\361\n=d\206\236=\225\t\251<\\\000i\275\2257\005>\224y\332<\010\001\244\275\373\037\230<\352\'@=\365\232\022=\31334\276*Y\014\273\244\242\260\275\351\\\303\275\274\016/\275:=,>\226\020\327\275V\273\236<\344\001\335\275J\244\022>\260\027\307=\010Z\030\2750~\242=\355\324o\275 \276\244\275\230G\333;>\317\372=\372\337\254=\215v\213;\334\034`=\025\257\307\274\026J\240;\213\3652\276\321\301C\276\020Y<<\017q\307<9\332&\275\002\352\312\273U\325\001\275j\372\372\275\035\240w\275\311\3343>\035\211\037\275\246\027\353\275\216\321\021\276\035;/>\340t\363\274V\237\326=\335\313\023>!G\250>Y\330\210<\225P\r>3D\201=\010\224J=s`\226\275\256\2724\276\024\322\320=\032\303+\276,6L<\370\266x\275\334\237\237\273\215\r\262<\031\233\031\275\205\206\265;\n\021)=m\204\"=\373\375!=\371\244\204\275\350KJ=A\033\340\275\311\246\036\276\013\353\222=\361\254$<\201\211\">ww-\275\023\304\277\275\3226O=\377\021f>\244\316\350<_\267{\276\244\215\006\275j)9\275\3200\315=\333\223^>\300\366\007>/\246z\274mY\025>\327Y_\276\210>\036\276+5\323\275\034!<\276j\240\266=J\313\202=?\337D\276\327&/<A\325-;\243:\014\275\213N\246\272LA\022>\224U\024<\022&\331=&\210\220\274=\014\245=s\340\263=\256O\026>\360\223\325=\360\234\251<\242\027C\275\364\025\000\276\220\232\341\275Z\365\246\275h\177[\276\312\341\264=\212tv>M\257\030=\236<\300\276\231\034\211=\360\250y\276\367<\226\275=\200;>~\212v>u8\225=\265o\326=o\353\241\276\037\025e>\271\252q>:\'\264=\035A\330=/\\G>`\014_\275\203@\004\276\371_\302:\341\002\271\275\264B\316\2757G6>7w\375<Cp\252>[\204?\275f\207\213>9\340Z>M\355*\275\374\216p>\262B\030>\234c\371\275\256{O\275\324\225\347\275\324\220\216\275\234R\202<]u\003\276~\220t=>\262\247<\261a\267=\202I\021\276\222\314\037\275\227L\303<i\365\271;D\3049>\020\n\033>\376E\267\276\202i\215\275I\261>=\320\276\222\274\235\221\031=\003\231\027>\3241\200\274%lZ\275\010\016o={\223\246=\267\345\000=T\263\362\274\313\216\007\276\263\3304\275\332\305v\276]\362\273=\343<P\274\021u\233:z2\340<\202TG\275V:\244=\351\342\211\275\354\350\205>\271.\350=\204\327\257\274J\265\034\276d>\371=\177Yf=\177#\344=\'\263\376\273\337n\003>\353\366!\274tn6>N\001\315=\334\274\277\274\343\224\220\2760\2251=\350\024\220\274\2565\372:\214\233\t=\220\221=\276\325\207\375<V0\205\275\013\215q=\2174\335=\213kE\274\'\030\310\275,\022\017\276V\006\205<\370\2321\275\264\362\037\276\262\273v=,F\025\275\326\007>\276\365\366\014>\004\360\213\276\265\341\277;1\177\361\275\335r\215\272\003J\200>)Jj\276\"\016\352\275v\345\306\275I\230.>\364\031\363\274B\022d=\332\221\004=\325\354t=\033\337>\276Y\212:=\351\212\020\276Q\320\230\275\347s\325=\225\010a\275D\220\265=\342Q\036\276X\322\"\275\024:\201\276\377\210\240\275\357\221\354=\034\250\276=4}G\276Wfw\276  \362=\236j\252=\tX\215=\304\037\030\276\324\026;=N\025\035>\370\013u\276\242I~\275\370UQ>\027\236\244\275G\205\023>N\352\235=\236\201\245\275\322\220\005>E\362\024>\031\200\324=;31\275\325\330\221>B\245!=A,\270\275Y\000\010>%\364s\272S\333\005=<\230\210=L\365\236<\214\022\013<\002\374j>?D\031>=\252\364:\367\237\325=\004 R\275@\356\233\275\242\0368>\364\032\335\274\031\270\212\275 c\305\275*\302\230\275\227\261\347<\3253:=E\362\037>mk\217=[\332)\276|\232~=\216\177#\276DG\255\275\237.\303=n\013\254<\\\207m\275\226\213X>\240\'\204=`\036\025\275\255\256\245=\263A\302\275V\003\027>|d\032>\3248(\275H}\322=\271\370\025>!\216\304\275Z\'\005=\355\220\303\275x\307\365\275U )=\256\265o\275m\215\024=\232\271\221\275r2\350\275Sx\373\273\033\263\224=K\272\361=td\031\275\'h\267\275Y\337-\276 \324\310=Z\322\277=uo\324=-|\241\275\331s7\276UD\014\276\\\201\372\275\257\225\301=\323\200#\275\'\030\'>\265\310u\275\002\344V\275K+\312\275\246{\232\275i\375\023=\373Q\236;h\026\212\275\274\234$\275\370>\250=\254jz\274sV\241<!sX=\006U7\276\363\016\243=\367k\340=y\356\000\274_N\323\274\205 \254\272V\210I\275\364X\317>`.\031\275\303\323c\275Q\211\272\275J\356\210=^\303\316\274\227bQ>\301\n\251=\257\037k\275\032\343R\276\027\023^\274tr\007=\267H\350<\267\301\215\275\206\370\252\276~\242~=\221\306\'\276\006\245\271<j\010J\274\242\274\335\2758\013t>\226\001\377=e\323\210\275\204\355Y\275\362\3413>\316\234\000\275\026\035J\276[H\242\275\213\000\342<\305d\204>\351My=8\206\026\276\023\250\227\276 \356\027>\242K\374=\335\025\254=\367\350\'\276f\371e\276B\370\224\275\'\374\362=iJZ\275\230~N\2753\351\034>\3328/\276\014X`\274\213\230\247<\366\210 =B}*>\347M%=\362\024\016=z\213}\276\373X\345\275Q\251O>E\264\236>}\367\243\275m\300\252\2755\361X>\272\375q\275o(.>\271.\021\276D\022\262\275\230l\200\276N\312E\276\243p\014>\363\207 >\366\307B>\335\200\342=\277\"\301=\371|\024\275!{\316\275\313k\314<\254et\276G\255,\276|\271\353=2s\216\273\345\301\361;\263\347\022\275:9\270;bt\257\275\000\226\036=\271t<\276Y\311\261\276c\013v=)72\276\242\031%\275\333o\322=\320`[>\010\213 \276\232`\"<\346\001%<`\274\242\275\014\000\271\275\344\016$>\t\316K\276U\372\320=\023(\261\275c\343\302\274\221H\372=\010G\240\275\376\036\031\276\374\300\'\276\271e\225\275\013\004\025\276\023\004\374=,%-=l\354\374=]\276%\275\250\267\365;\337Y\337<}\240\356\274\214\322:\276\325\270%\276D\357\026\276\000\373\207>\360\252\310\275C\241\325;\327u\364\275\315\327\027>\026\216\323\275\202\276\365\275\227\301\245>:n7>\204\'\261=\034\337\014\275\256\373\306\275\266\351\350\275\237\\\021\276\223;r=\010\014\300=\271H\356\275\210\350_=$\317E>\272\"\235<\200\240N\276,A\277=\360[\221\274IZ\256\274{\t\024\274\276\3766\276\014\234)\275\227r\260\274U\225\032\276T\224\247\275N+\214=\334\t|\274\312\324\222=\262\n\262<^\242\260\275\344\226\252\275\373\213\000\2720xq\275\326$\265=/</>\363\233\356=\203ao>P\253{\276Z\326\244=\014\353\001=sub=\250\202\353=~\0106\276\321Yy\275q\350\354=<D\020\275\267\367\301\275Uc\350<\334\234\234\275o;s;\250g\365\275Ww}\276\250Z\216=m\206\272>Xt\t=*-\255=\367R<=[\3147\276\006V\240\275+\311\022=\305u\313\274\177\226J>\222[I\276\200\200\231\275u\204\264=\004\345\030>\213LL=\324AN=\216~|=\306a\014>x\311\201\276\311\013\325=\243k\205=\200\373\330\2755\300^\275p\226\200=\361\251$\276\017\301\t\276\312\247\003\276\260\302r\275\317\243>=T\340\315=\026\204b\276c\327\036\276\030\340v\275{\367\020\276\247\tH\2762H\013=f\340M=\306(\227\275\271\0177\276\261\020\314\2741\263\257=C\362\200>\0326\000\275\034\242\001>\277\220\177=\362\337J>\335\032#>,\356\002>\374\344n\274}\267?=rm?\275\000P=<\315i\">\224\332c\275\331\032\202=\332V\264\273`O\266<\"\001~\276\367\235\355\274<4\235=*>\220\274BpO\275.\027\024\276\'\023\320=\2557\r\276\321\021/\276\331\270]\2760\350Z\276\255Yt=|\023\327:\331\276\253<\307\372*\276m\237\230=*\010\373\275\265\306\332\274]<\252>\365\311;\276\233\357 >r`\035>\327\023A>\\U\022>\377\372\026\276Y\272s>\222\334/>\236\307H\275\232.\315=`\266\256;~\322a\275\330U\r>3\221\021>\016\2549>D\300:>\"\253p\276\225\302\353\2751\273\202> =?=\340\024\334\274\006{\270\274\343\251\265<\344\3007\275\357\327\324\275\311\233\367;tSv\276\264\'\220\2750rn\275\006\362%<\260\370\305;\231\204\356=\330\311\016\276j\\\262\274N\271\"\276\025b\333\275\216\n\204\274\310\344\311=d\333\332<\326\207I<\r\332.>\366\323\364\275V\365\205=\033\2466\273\260tA\275G\225\301\276\274z\340<\326A\202=!\275\324\275\273:\273\2743\260\355\275\253\033\257\275\002h\3118x=F\276U\324\234\276\227\261\316\274\207\240\352=\201\276v\273\003I6\276\262\345\236=\343\270\036\275\251H\250=\002\2103>`\032\325=N0\260=\351\266\272\276\030\230C\276\204_\310\275\274\243\"\273\222\271}=\361\246\020\276\367x=\276U\215\">\210\306\244\274\331\250\016>\003M\302=<\317\206\275\033\020\370=\'\t\202=\346\362\272=\024\336%\275XF4>\333o\035\276\210\260\330=\241\224\024>B\330.\275\336l\n>\220\035\206<(^y=\242b\234\275\n\356\204<\033\003\224\276\031,\006\276\335xi=\334\372\210\275\367l\210=\n\270w\275\244\267\003\276`\215\035\275\201\250d\276\004L[\274\000)\302\274\345\263\273=\027:\242\274\334+\232>Z\316*=K,\002\275N\314\346\2754v\002>\206[\212<\263\215Z\276\306%|=\017l\237=p8\246\275\004\201\021=N\325\221\275\273\313~>M\364}=P\302-=\013a\324\274\026\230\202\275\363\255e\276\'\023\223\275+c\267\275\260G\221=`\357f\275$\365\214<;<\035\276\003\316w\276;\006(\276\177_\336=\3226\332<@ia\275=\177\377\275\366\t\003\276\233\202\232=\366R\201</<\214\273\266\001\303\275D\311\276<\006\262\243\275\375g\232=\000\333\004\276\217\257\202=\002\202\257\274x\272\222=\001\311e=\352\t\006\276\236\306\207\275\224\001\350<\013G\213\276\273Z#<\007\rg>@ Z\276s\244Q;\341[8>t\254\205<\"\024\217\275\214\003\203\276\211-o>\222\353\224\275*\3615<\342\254\023\276\2345_\273o7\034\273z\344\342=\223(\320=*\277\235<\014\177\377\275\241\270\017<y\360\023>\022W\214>K?\375\273\314\035J;J\375\320;6\023\340=k\375\'\275\305\3566\276\352_\363\274\333NG\275\247\255>\276\342\037\304\275\005SF\275\300\255\302=\323\272\354\275\311\262\240\275\023\035\006>XY?>\374\354\310=q\311\357\275\030\273#\276\020v\320\275y\0026<\232\275\271\275\250\315&>\306\337\227<\"\306\320=A\303\316<\363\265\024>\014]\371\275\211\311\032\276\243iw>\346\306\272\275y\216\303\2759H\246>\317\243@>\371\225\031>\215\204\024=ln\320\275@\017\036:)\354\310\275\267\374\275=\212\321}=\373\031\371<~!\204\274=\004D=\037\312&>(\306\266=\332\275\212=\2319\005<\177\235\026<\321\265\362\275\027`\375\275q\336\264\275\344\356\375\274\260~\001\276)\364\211<\372/M\275\373M\027\276\251A9>\363\206\324\275K\361F<\251.\310\275M\020M>%\227\201\273\257\342\003>\035\227\035>\327\360\234=\024D\200\274,\215\256=\\\014\300=y$B=\2025\366\273\202{w<X\304\247\275\376\317W=\200T!\274\2516V\2752B\227\275\306\246a\274@M\352;\352r:\276\205y\352\274\265\3121=\337\320\255=\217\306X<\r\213f=Q:\n\276A\313\313\274\255\004\330\275\216n\370\275\033*\353<\373\025\351<2\222\375=\\!\024\276\236\t\214=\233V\036\276,m-=\'\374\347=\273g\243>\267S\">\253\016\344\274\\\252u\276\217^7\276\016\251\212\275\326)\234=\2772[\276\312I\024=\371Q~>\333L-:\315\024\225\275\361\262d>\016\327\r\2757:\307=\237\231\333=\371X\314\275\274}\237\274\316/\020\275\t\357]>\370\207==r\341\311<PBy<\004\341Z\275\276\2415=\260\2214\275\365R\244=Mut=\t\037\010>\214\344\006\275\037\273\275<H}#\276\320\302\001>f\244H=\307\317\n>\276)\370<3\352\374\275~1Y=\367\311{=\253\200+\275\337\030\207\276\274\016\235\2754/\027\276\262\225\270\275\315\003W>\3569\342=\211e\t\276\317\372G\276\3743\307=\246\003\022={\261D>\324\211l\275\005$\273\276\tC?\276OY\301;\214\033e>\252t\037\276\2706\254\275\037qp>\223\313\016>y\215]\275\253\373!\276\272\221\014\276\"A<\275Tz\201\275\242\216\354=\270\207\'>\333\230\241=\365\323\275=\0103J>\361\276\252=\373\373\016=!n2\276\242R\007=*\353\214\275\354\377\267=m7\366\275o\207<\276\002d:=\207y\270\275\240)b\274\355m\252\275\252\243\323=~\355\277<\034\3327>\213\261\315\275\330\217\230=g*[\275\027\372V\274A\346:>w)\222=S\334\375\275\372\361\323\274\017\343\315=\034 \017\276EU\031=>\207W\276\345\312\021=\360OQ\2766\314W=\324a\016>\254h6\275\033\217\027\274j\r\374=\305\177J=N\255B\276\213E\324=&\305x=zI\322\274\224\332\037>G\273\200>F\344\326\275|&\230\275>9\216\275F\2465>\275\254\000\276\271 3>\211\364\313=\330\341$=\247o\r>j2\345<#)\326\275\003]\177\274\336\240\337\275\364\364H\275\3675\305=\214\265\200=uy\362=k\236(=\342\022\324=\252i\353\275m;\253\275A\020\341\275\204\227\231=Jo\312\273M\222\023=\347\213:<4\351%\276\234{\322\275\324)\250\275zO\033>p\"\370={3\013>\330\344z\276\014\326{=\014Yp>C,\3509\274\276#>\346\324\t\275\304\271r>\234\2153\275EJ\366<\262\261\021>]40=>\024\367\275\232F\235\275\031\256\326<hv+>G\036\006>\276&\254\274h\366#\274\016\024\347=\206\\m>\213\375\217\276\2733\262\276\240\216A\276\307\036\365=_\271\362\275\017PJ\276\356]Z\275\2538#>\271*\223\272*}\230\275\325rC=\302\217\354\275\246mq\276\211\256\322\274!-\234=\225\036\213\276(\006N\2758\276\252\275*\257\274=\204\0161\275\345\310\353<`\033\221\275obE\274\002\274/=\\\036`>D\036l\275n_\346\275\255\\\223\275\345H0=c\365G>=19;\234\304\343\275)\263[<\240Ir<)_\360\275\371`\256\275\260Q\211\275\337y\371=\324\260\205\276\005\211\373<p\310\327=\360{\351\275\234#\010>\242<\243\274+\234\306=a\234\303\275\310\371\214\274\357\014\220=\227\353\035>1}\216=\251\374|=e\225\225\275\270%\257=\253\003\037> \2207=\244\321\211\275\277\007:=\277H\006\275\356\\m>\240Ss=\030-\036=m\0215\276\233\025\022\276\327!2=\344\016\006\275YzN\275z\032\242=\203\0310=L\257D>\221l\305\275\034\333\253\275N\225\274\275<T\335\275k\3641>:N\214\275\3418&>\305\035\234\274\005{\201\276!\303\025>\210a\241>n\334F\275rz\375\275\351\244\271<\225o\314=\313\"\007\276\302V\205=\037\253\321=\023\214\021>\257\245\275\275T\035J<)\317\336=&\226\233\274\205\241{\275\320\234\036>\224\353\027=o\244\275<\235\000\202\275h\357\325\275\026L\341;\361\326<=W\3216>\213}T\275\210h[\276\270\276<<\257\323\347\274\272\265\263>\363%\354\275}m!\276o\022\016=}\306\230\273A\212\241;\340;N>\247\t\357=p 0=\007\363\240\274A\227\262<\265\314\205\274;W\004=\303\203\035\276\025\256\212==e\247=F0q:\\\273\245=\273\224#\276\225\024\243\275-\216\306=M\013\013>OD\022>\3476*>\2774\301=\336\213\372<\017S\000\275\322\233\376;\321\'\370=}D\321=\365\321\303\275H*v\275W\356\030>\301\344<> 48>\346@\357=t\033\212=\371\032\241\275\356_\207\275\017H,\276\0011\375<\337\254\316\275No\246=u\\\305=\260c.\276\037\200M\276\256E<=\361v\337\275\343\\A>\266\001y;\364qo>\272}\205>\030\205};\316lV\276\311\231\204>\035\271q\274y\0177=O\035G\274_\316\353\275\244\r6\276/U\300\275\336\345\235=kf\000>s\374\n=\356\373[\276\243m\231\275\032@\267>B\247\">J\312\237=\335t\013>\327z\201>\205d/\276\253t\005\276Y\360\222=\277\027\013\274\032\265\312\274\275\314\200<\343_\231\274\255\365\002\276\303\213\213<7\206\002\276|\216\375;\250\333\262>C\235\346=\371\362\014=\254\177\257<\321-f\276\270\r\037=\336\304\022\275\273\260\272\275\262\247\010\276\376\025\362\2757\225;=\216T\327=\031,\000>\204\305\'\276C\253\217\273\315\342>\275\2556K=\316\251\277<*\242_\275\032o\204\276G\361P\276*\227\321\275C\330\303\275\260s\'\276\241O`<\377\017k;B}\245\276\314\225\211\275\313\345\026>!\304>\276\000h]\275o\\\213>\364\201\200\275t$&\275\3275r\276\235\006N\275\025h\362=)\316\217=\215 \025>>\234\264>\214\365\316\273\335\243\212\275\344\330\246>\316\272\336\274\363\201\226\275\r\030i<\000L\004>\2613\207\276%&7>\r\345\212\275O\303\236=\026\315\032\276\002\030\002\274\022F\245=\256\304<=d\030\356<#\353\272\273I\353\275\275\252\"!>\306\037\224\276\025\256w=&}\204>\021\352h=\244\300F\276\252\262\210=\"\303\300=.>\332=\340\262\010\276\311\013P=\237\n\034>\014[\336\275U\324_>cWw;\313x\350=\324\240d\275zs\326\275\ti\265=\033\362M:\240z\005<DAF\276^i\335<9\224F>\035\255\r\276\266\211\207\276\363\330\234>\316\351\203>q\311K\276\336\233e>\227\231\366\275\207\207S>A!h\276\014\315v\275\204\356\372=\257\026\016\276\300\234\306\275\327\333^>\234(&\275\332\265\233=g\017\003\276u\236\016\276\n\315\001>\325>\327\272\355~\357\274L\200\336=\351\266\264\275\305\010\224\275\217\232-=\226\340\212\274*q\275\274\311\267\227\275\310\300Y>6\274F>v\327<=\264\370z={L\201\275:\315\237<\310fL>D\376\245\273\216-\355=L\031\270=\253,\326=\361J\214;\\R\224>)kJ=\221\301^\275o\244\010\2768)\013\276\317\177S\276+\024\332=F\013Z\276\214L\320=\223\3471\276\3605?\275n~\222\275\223\026\212;EG\245\275_\031\301\275\003\320\243\275\335\341\003\276\0343\357=l\253j>5h\004\276\202\231L>Q\233\205\275\304d/=\234\r(=\365z3=\243\376J\275\254%\346<A{\217\273\217\007_=k\314[>\256q\247\275\020\004H=\337\352\231=\003\353\334<\311V\210\275p\023%\274\217\315}>C \233\275\374R\242<\324-:>\210K\356=\'\264\334\275;wg\275\307(\232>NT\264\275\027z\201\276\000\205\020\276\237\224\205=\000W$\274=\031Q\273\025 u=*\336\033\276)\243\257\275\251d\363\274D\001U>\025q\305\276.\221\302\273\274l\275=\307\2602\275u\316\001>\215\357&\275\231\337\255<\226Y\n\276\316\3245=\364\351\365=s\320\215>\0001}<B\364l\276\007\007u\274\320h\022\275\351u\363=8\334\035\274\240\274T=\353\236\276\273\225\037\251\276r\035!>\202\3476>\341u\r>\023\3615\272\326\322\010>\202\022\351\275\202>\017>&\201\016\276\210\327\000\276\t\233\366<Z\332\332<\353\257\211\276\001Y\030\276t\236U\275\0229!\276\267S\310\275{\313\273\275@\351\252\275.\303\322=\362\223\373\275\341e\374\274\312\304\302\275\340\242(>\322\301\206\275\324\336\203=\221\226z=\2712\272<\205\277m\275\345v >\317\231\233\275Z\202\233\2754mU>\036\345\004>\221\036\216\274\235\372m\2755L\037\276\227\320\302=\031\357\322<\037G\360=<\265`>FoF\273\225;B=g\267\017\275}K\'=vN=>\313_E<\311J\337\2756\274M>\277Kf\275\373\001v\274\326D\246\275=h\265=\311\001 \275\226|\274\273n\\G<\264\222\346\275\247d\t\274\247\273\010<2l\270<r\370\027\276\010\351H<\237\004\213>\236\240,>\254\n\324\275\006w0=v\324\224=\325\240\210\274K\202y=_t\024>d\364\246=\334\3373>u\335\204\274]\344\351\275\212\367\364\275\335\364\t<\362\347\203=\010W\215\276\252\025\265=T\325\330=a\275\241\273^hC=\'<$\275\030E\033<h\203\355\275\313\310\205\276\255\351\205\274\246k\003>\217\201*\276\336\200\263\275\220\363\005\276\247\242l<\001\335X<y\0314>\315\370\353\275ry\334\275k\373/\275<//\275\363\027\"=\226<n<r%\324\275Dk\027>\376$K=\224\375K\275\3356Z\275\20263\275\006\200\222\2754`\230=h\326b>X\342G>\374+\033\275\360\274\353;]\374\027>/a\306\275\324&c\276\304\362Z>\341\361\226=\326]\371=\333\016b\275\013\0148\276\216\322\362=6\376g=\222\254\347=\240(r=\333\343+\275\014\207\332=s\272\311\274l-\034\276\204\005*;\267\337\204\275&\252c>\231\231\324\274&\225\247\275\372z%\276\200\020\201\276(xG=\311\376\314\274\306\300\024=\235g>=q\350\301<D\037\234\275\246\304\016\276\250\323\262;\213^\226\275pS/>\001/\177\275o\016z;\321\341\211=\223\217\022>\257\251W\276\352\001\346=\346+,<P{\214\275Ho\226\275\317Q\377=}\207>\276:E\313\275\027\350K>\212Z\247=\2031\223=\023\350\367\275\314\334\261\275\213F \276\347\350\201=n\3102>\030\276\000\276\270\\\\>2U\310\275+\332\373;ZS\203<\344\246\345\275\305qr\274\371\224\220;\030\227\037\276\016\236\255\275\3569)>\246(\303\275b\\\336\274\343\366m\276`6\017\275s^\005\276\311<\307=\355\223\023\275\021\"{\276\2124\251=\305\2747>\304?\231\274\356x\211>\316o\'\275\022\366\r>G\034#=\017\210T>\201\214\207\274\337\256\261<\351=\037\276G\275\312<\240j\001\276\217]\301\274\372\303\231\275\021\252\023=@f*>\035\352\370\275\226F\233\274\373\337\223=\213\214\005>\360\262\037\275\002\3778>\003\255\255=i\212\321</\t\356\274\'\246\266=\254\177\261\275#\375\245=\301\206\305=3\376k=I3\010\276\326\346\247\275\035\251\375<\006p\223\275\274\350\315\275\311}\232\275W\266\307\275\350\220\217>f\277x=\264\377C=r\025\312=\010\214\220=\271\373a>\327\0344=\177\316\t>\242\006P=2n\245\275\211\307\247\274\270`\333\273\244\213\022\276\241@\215=\004\235\247>GI\036\276\217|S>&\335\036>^\363\264\275\\\356A\274\370JF>\\\333\023\276\315g\016\275Q\3503>\234,\000>F\277C\276\2725K\2741E\"\275\274Ba=\013Y3\275\350\311\n=\267\000P\276\252\257\204=W\312\253=\240\274\273\275\307\200\255=\014R\254\273\231\244\234=\230\013\260\274P\345\237\275\317\275\364<\347>\342\2734\360O\276\254\024\006\276(\3713=Xm5>{\324\254\275\034cf=L\301\331\274\306x\206=\265\206\375\275\316\227\363\274\360u\222\272\204\360\263\274h\275\220=Xt\017\273r\201\342\275\021B\317\275\201W]<\201A5\276\257\203\252\276mc >\253\226j=(L4\276\221\303J\275c0\312=\254\241\250\274\347\0040=MO\024\275\376=7>\334\355O=W\371M\276\310iN>\002(\207=\201\017\004>\377V\352\275\250\024}=xo\266\275\253Y\032>\373*U\275CKF\276\323\302\">\273`_=\216\004\252\274\204\313\005>\317\304\n>\250\027\t=Z\016\356\274\374\3176\275\262\024\234\275b\343\375=\250\210\205=\355\265\355\274\324\230\316=\221\366X\276#\374b\274\262\017\307=kb\215\275t\272\014\276<\350\r>7\306I\276\271:\036\276g\346G\2764l\226\275\314\233\337\275l\006\306\275}Q\003\275B\3503>(:\003\275dD]\275\354VJ\276/,g\276\341\032\320\275\321\366~\274\303Z\236=\234\316\251\276.\270\'=\271p\200\275G5/=>\305\222=\367\341\231=\260\243\305=.v\307\275H\252\205>U\336g\275\376\203\261\275\257\322\r\276\0019\027\274\017I\320=w\344=>[S\353=\372\nB\274\3702\037\276\312\035\314\275\003\016\034=\306\261\304<\211F\233>\022\324n=\345;\346<\336v\207>\320\363\017\276\\\035\205<!\331S\275\014yI\275\317x\370\2751\214\n>/\207\356<*vC>\324\303\214\275P\340\257\274\343\241r=4\224\223=C\263\020>YC\206=wB_>\330\253\204\2755\245F>@\250\365\275Zx\335=\372\327\302\275\274\330\215\276\334w&>\255\216\263:uY\330\273+\242\245<>4\017>\216>\352<\342\243L>\355\215\321=M\256\302=\373\332?=W\232G\2760\274\362\275\304\020\336=,\342\000>\340e\216\276\224W\"\276\204\343&\276}\345\010>\313\032\221\276s\334V>\263\307\006\274U\005\"=:\205\303=\376@\203=c\203\265\2749\037\303=\272\270\363\273\305N\237\272;v->1\0316\275\024xt=\307\343\335\274:\247\371=\216\002\354\275V[\330\274R=e\275\201<\\\274lq\246\275\002S1>\347\264\253\275\270~\355\274B\250\232>\013\243\227\275\231\017\001=\317\353\200\276\300z\337<L\271\034\276\025yh\274FS\010>!\351\374\274\237Wv>7\364Q=\010\377\246\275\200\263a=5&W\275\317\200@>\300\375\230=\241n\\>\311\037\346;A\035\343=\343\200\337=5\272\227=\207\002\017>\326\347\214\275\034\315:=\347rc\276\017\312\342\274\262d7>\253\274\303\274\300\036\350\275~\365\336\275\215\334\007\276i\255\341<\270K\245\273x\3345\276\315i\220\275\311\213d\276\346\277Z=\207+\233\275\2265\022\275\245\222\r>\314\254\341\275\260:\203>\010\0251>\225\363\027\276Up >\004\006\356=\315\375\365\275\034Df\275T\213 =\241\272\206=\226\330\024\275g|\261=\217\303\302\273y\303\330\274&\344\212=%\212\306\275\025\376\234=i\007\226>\'&#\276l\003\334=\307\010\243<\007\013R\276\215\377\272=h\007[\276\276\356s>\374\322=\275 ~V>=S?\276\360KV\274}\373t<\312\031\276\275\255\321\256\275\"\222\346=\002\234\203\274\223`\r\275\324\202\201>S%k=(E?\276\267\374\307\274\027\312\266\274\255op\273A2\032>K=\006>\321\373 >\377O!\276L\227\331\275\320>\213=@!#\275\270\177\206<\316\324o=A\371\307=\257vf>\343\200\352=N~\001\276)\2456\276\245\017\323=\324\276\211=m\223\311\275[\246\246\274\361\215\220\276\265\250\233>\226B\020<4\262\360\2751b\336\274\346\260\030=W\324\203\275\313=V=\021\362\356\275\374\305!>:\320\333=?\016\025>`:\303<\351\302\251\275\001\314\036>\201gA\276\350,*\276r\350\346\275j\325\200\273AxV>\273\323\312=j\014\316=8\323H\274\337\315}\276\220\207\021\273b(f\275\324H\036\276\345W]\275\216T\373\275\315\233q>\004\t\332\275=s\267=n\"k=)O*>\230\221\254>\370\"\356=\303\'\274\275\256P\255\275\341p\332\273\013,\">\031\325\322=\242|\325=;+\203\273\372\247m<zY!>\216f\n\276\320\341\006\275\222\307\247\275b\341>\275E\254\201\275O\275B=7n\207\275\302&l>\2477\007\275xk\233<\271>\002\275\312\357\204>\220\203(\276\340\250\241\276$\024\327=\3141\030<\255\357\016> \202\001>0gR=\2024\037<W\014\315;\317\377\303;\203\227\n\275\356<\302\275\2328W=\235t\n>\222S\t<L\353P\275\014\002\032\275\356\242\027\274\r+\253\275a\254\002\275\204.f>\375\354\310\275\222\350\377=QE\241=@\325^>\200*\200\275\304x\232\274\310&\356\275\276\014\321\275,;/>\246b\226=\306\223\342=\023\346\202\275\322\202\001\276\313[j=\225\210\213\275WD\016>\027\376\207=\311G\251=\224=\222\275\034;7<\220\245Y=\226\237\235\276\313\353\'<G{\263\275+\232\'>iP\024\276\215dZ>l\372\010>&\235\260\275+\356\274<x\022\226=\274G\005=\275\277\222\273\274}R>\363Ig\276\307.1>\236\251\207;\206$X\276\324\317\221=\367\230+\275\324B\023>\264SJ\275\3568\222>\036\364>\276\327H7\276\266\366t\276\016\n\307>(\345\217=\233\201i=\335\264\272;.\311Q=\316b\006>D\006e\273\010\264!>\301\216\032\275^h.\274\t\260\304=\363A\221\275\211>\023\276\315<\344<\320\3428\276[\264s\274\312\303Y\275\332\177\335=\343\354\253=cw\243\276\004X.\276\214Mt\275[\t\254\275~\014;\275\003\\\264><\236\016=Lb\326\275\311,z>\233<\037\275\007\277\360\274\326\316\326<z\371^\275g*\207>\225\213\305=5\3656>\212\374\260\275K/\261<9p\021<\020\312i=\313p\326=)\321\377=`C\214=[mn\275+\200n>qw\031\276GY\022>_F\261\273h\034o\275wR\360=\345Q\226<T\007\226\275\022y\211<7\211\237=d\272\033>$\275->\001\303\220\275%\014\t\275\016\220\331\275_\223\360<\222\273\306\272\001\013#=\323\000P\275;Q]>\376`\232\275\253\371\267\275\253\025q\276\213Z\205>\206y\005\2751\033\275=\271\212\025\276\372~/=\267\235s=\317\212\211\275:d\022\275oe!\276\306J\000\275\0047\326\273W\020\255\271\2047\304\275\270\313\026\274\363\201\246=\365\274\033\276\322a(=\301\325,;I\224\014>\320)P\275\363\242\361=*\352\300=\337\346\244\275=Q\231<\206\277\355\275\227\352!\276\242_\217=\376J\217\275\017\007\265>\365r\034\276\341b\261=\226\003\000\275q\000&=\000\325\201>G\267\363=t\204\266\275\264\241\337<56D\276!\t\222\275\313\205\030;\2522\304=\230\374\207\273F\271\201\275\222\332\001=+\252?<\305\005i\275\324\241$\275\245\227\231\271\216\272\247=\346\224~\274\t\216?=\264\364\340\275\000m\003=\324\357J>\333\336\002\275/\247{\275\211\376\002>?\241\025\274\024\374 >\347Sw=\374n\322\275]\375f\276\336\313\244=\273\363!<\303\376\005=\324mZ>\213\021\365<\004X\004>\030\371\037>\377\245\315\275\215\035\261=\200\277\"\275\'A\332\275\305X\267=\304N\016>\222\010\302:i\277\351\275]\325\215<9\201a>|\342\020=\310\331\246\274\335\344x\275\377S\255\275\202\004\203=U\360\233=\312\376=\276\370\311\225\274*mA\276\3335\025\276q\353e\275\"\213\r\276\325\270k>vo\203<\r\354T;\250\n\017>\327m\200\275\260\345)=\027\\\211\276C\177\350\274\206\033V\274\337\355\274<\207\356!\276\316\n\034\276\241\204!>r\010\261=\366\374\024\276Q\236\352=\262\377\001\276.\237_>\022E%\276\232\305P\276\004\366\377\275\320\350\365=r\372\273=\227^\001>\307\322\034=\3207<\276\314\364p\275\371\\\353=\375>/\275\303\327s>e\232\211=\271\nk=E]n\275x$M\275}\003\025\276\276\005>\275M\212\225\275\212\227\016\276\303\312W>u\370\325\275\341\360g\276\355\351\007>X\020\272\273\n;\377\275\241k_>f $>\313\374\020>0\271\327<\010\311R=+\252\236=\033Y\377=\211\217==\345\036\355=\262\247T\275\370\333]\276W[\335=\233\347\212>Y\221\277\273\031\256\265=}\311X\273pY\360;\257\371g\2756\370\\<\024\375-\276\354\342\202=\276\224\235\275\213\236)\275\226\014\217=\366\272\261\275dQ\307<6]\032\276\222\3323\275R\004\010\2760\003\265<\202\036\214\275\246\304\004\276`\271\214\275N\277\326\275\016\324F\275\317\373a=|\2756\276p\027\314\275\3601\003\275\n\374\377<\377\207\240\273\352\027l\275\323wO<a\177\034\276\r\375\n>#v\200=\312{^=C\270\032\276#7\006>x\374\246\275\004\031(>@\001V\276\253\036\240\275\371-\212>\262\317\377=\312{\242\275\334F\213\274\365\203\311=\374K\303=\266\rz\275\230N.\276\366\177\003\276@\315!\276\345g7= \257\262<0\370\341:Nf\273=\016\345\006\276\251\261\266\275Te\360\275\217\322\221\275\273\317\203\273L*4\276\327\026\022\276\363\336a\275\306\346\352\275\350`\210\274h\r\351<\034<Q\275\212j\325\275\213=!=\312r\r>3\344\273<\315\'\337\274A\006\311\275\213\376\030=\252\323\244\275\312\273,>Q\206\214\275#\233\303=1G6>b\257\240\274\222j\306\275\250\340\373\274g\352\361<\365\2020=t\337A\276\317/[>\230)\305\275\003\323\001\276\005{V\275\0238\022>\377\320\255\275\266~a=^\342\344=g\224\341<g\264\370=\216|7\276\206\211\304<?{\021\276\302\317q;\201\211\316\2757\245\337;\030\213\021\276A\014\333\275\312\203\352\275|\230\204=\240\315\031\276\340\307\346=L.\267\273\n\2160\274\201\370\327=\225\347\271\275\356I\223\274\312\022\210\275PO\207\275\206S\n=\'.M>),\032>\007\010\311=\316\243\231=\264=N>p\360\020>\253\322\017=\330h\376\275`\315\022\274=|<<\352\303\367\275\260L\227=\334\2444<\010\342?\276\274R\353=\201@\202=\357\253\330\275e\274\017\276\2211@\275\363/\261;\362M\264\275s\355\341\275\212\226\016\276\343$\005>\255q[:\367DW>$=\210\275\013\314z\275^]\214\275\221\241\007>\317\341\030\276;\301\233\276{\362\016\274\240\016\025>\t\237\016\2755\t\233\274\365\0000\276\217\300\021<\342\334\212=;C:=o\266\235\274/m\343\274\247\313\002\276\230^a\276\304\337\016\276Sk\234\275\021Y\010>\014=\026\276n\3569\276\231\234\327=\255\025\254\275\271\231K\274\275!o\276\004\030\247\275\013\361X\275\336\220c\275\242\241\331\275\"\330\030=\206?Y\2765\240q>\241\371\356\274\266~d\275\021\017H\276\355\375T\276[A\">k\305#>\327\337j=\033\303\207<\330qT\276\256\304\322=\000\020\033\275\262\020)\276\270\330\273=\227\351\251\274\026k\333=T\232\355\274!\351\000\275K\240:\276;\177\021=\350\331Q\276\030\246\326=\352\351\363\2756\t\345\275\331\240U=\213wP\273,\242\014\275\346\245O>z\255\265\275\234\'\335=\333\351\033\276\017\306\300\275\312\226\027>\256\302\230\275GL~=\223oK\276lJ\252=\233&\363<\251\310r\276\306\346D>\373B\325=\227\346w\275\330\236\026\2757\246\177\275\001g\004>C\337\325<z\020\307<\277?\r<Z\005\303=o\234\275\274\242\006\032\276\221\225\201=\023\327\036\276$r\256=\271\233\220=\344\026>\276#\300(\275\235\300\220=\336\3518>e\243\203\275\233\254B=\377X\243\275\320\007&=\016]\275=\005\017J\275\224\005\244\276\3142\203\275`q\001\275\315EH\276nPZ\275\313`)\2759\362\330\275\3071\362\274\200kQ\276\230~[\276\240\261\270\275\001\035\332\274\351\0011\275\220\241@=u(\021\274\321\320%\275rpp\274\030\321\214\275\353d\302\275\n\306c\276v\372\335<S\034\207\275\235\221v=*\370n\275\027d\026>\376\327\335=\365\236s\275\020;#\276\277d\264=\247QK>h\n\267=\303\224#\276\221\277\033> \030\201=fp<>-P\252=\302\354\266=\276\0049>\377\233\314\275\312\272\036>8\374\216=\342h\210=G\340J\276\241G\016\276Wk$\275p \035>\347\254<\275\210=\024=E\252\251\275\2214\371=\217tS\275\334\035b\274\214\247\356\275\331\023F=\032\225\235\275\346\235\237\276\240\224\244\275A\005\276=\2127\333=@\231\">\321d\223\274\274>\273=\306\231\300\275\327\301\252=D\260C>\253\327\037=\344\000G\276+\256+=\000\031\225=8\002.\275\2263\205>G\334\022\276hW\321\275\341;\003\276g\334\227\275\237\254\216\276y\000K=\005\317:>\002?*\275\270\204\263=[pa<\354\336\353=\371r5\275\217\027!;[\277\230=\315\362\237=\363\264\275\274\275[\202\276yS8\276\"\260z\2753\264?=\306\217\n\274\327*\037:\245\313\025>\363^\201=\376\3738\272\250\212\215\275\350\240\333\275\237\343\210=w\313\302\275E0h=\252g\241\275\211\355\n>\274\226\252\275\037p\325=\213O\231\275\036-\327=p\253\372=\037i\326=\374b\245\2759\353\275<\002!\230=/\n\004>\217\271\024>:\211\332=$m,\275\027\344\323\274\230\252\223\275\274\363c>\222\225\037\275\367\005T\273\344\235\017=N\347)>Hpn\275\307\3331\275,\332\202\275i\262-\276\274\264\365=\300g\224=[)\221>?\001p\276\004\262\362=P\200\310\275\356\243\247=A\256\272=\322\334A\276vS\245=r&a\274w+\225=\356w\270\275:W \276.\216\364=S\013\324\273\256\247k\275\004\374H=\232\234\241=\366AU\273C\032\006>\362N\037\276\303\024\223=di\034>\016\355A\273\031lT\276\010M\343=\320(\261<\254,~\275\310\343\217\275c\301\304\274\027\237\010\275\022\254\330\275o\214\275=l#\306\275\271\204\353=\271\314\022\276n\251\343\275\357\275\245=\245bi<7C\310<#\245\265\275:n\342=\304v\211=\304V\372\275a\244h\276a8P\276\233Q\022\276u\356\265\274Y\361\246=\204D\020>x\r\262\275:6\236\275\304\010\274=W\227\241\272\313\242\014\276\333\254\005>\3364j>\032l\031\276P[;\276\316\027m=\211@\036\276\342\362\225=\351\324\335=\352\343:\275\245\364\204=rR\371=\031HL>\255CV\276\242r\323=Z\275\246<\270\225L\276 M\304\275\332./\276\n\267O\275zI\030>s\004\260<TG\354\275+2\023>\353Z_>TG5\276\021\3658>\3350\365\275\365\037\340\274\300\374\026\276\305!Z\275,\336\315\275L\230J>PP\333\275w\213\022>\256:\212=)\255,>\3659a\275j\007\247\275:\230\206>\300\312y>\350\351\212\276\230\024\316\275\202\035\024\276\t\304h>;h%>{\222\337=\226\347Q> \'\240;\350\263\317=\215|[\276\376\264\036\276n\235\334=/3\207=hj\356<\244\222\037\276\370\036$>\013\240\010\276|\3734\275q\331.;A\013\303<Kqr=\230\365\004>\352&\024\275\327\233\263\276\230\250\025\276\245|\\\275\375o\022=\2172\010>20X<f\316\250\276R\241\022>\3620g=s\016\202<Q\357e\275-,\003>x\377\342\274\010\353\365=\352>r=\357\030\233\2768\340\251\275LC\236=\2718!=\323+&=\"\207$>]\200J\275\3379\000\276\276dy\275uE\267\274\257\031\007==\236I\276\373\037\006=\252\2433\276\2771\206=\t\022\'>kp\224<b\266\025\276\252\303\022\273\243\332/=\366\225\242\274\377\201\230=20K\274i\266\321=o\326Z\275\271+#\276\366\331\310\275\315\016\254\275o\026\220\275\257\200\235\275\313P\232\276\337\347\371=L\302O>\320\361\257\274P\256\375\275\246\314\302=ER\255\275\2402s\275\321\006\333\275\261\373\326=\337\036J\276\270\216\251\2751\n>\275_\301\'=@\201\320\275t\342\363\274\000\027\257\273wF\215>\206\273\"\276?iA>\"\"\363<\376X\304<\246y\266=)%3=6\3317>n.%\274\t\324\313\273\231d\204\275\212W\326\275\347\003\200\276s\224\326\274e\000\255\275\364\002.\276\032\274\231=fq\320\275\351p-\275\0353:>\033w\006\276o\2572>\250\306V=\205o\347\275_\337\024>M\370\230\274\376\315r\275\302\336\027>\205\027<\276;T\371;\341!\202\274\310z\030<\323D\177\276\352\312s\274\227(\266\2755B\357=\336\034\215\2759}\233<\252\004{=\020\206\363<\203\377S\276\245\262\211\275A\r:>\322\232a=\305s~\2768\007^>\341\n\201=e\214%\276H\035#\276\347\356\310\275^@\336;\235\245:\276\024\020\r>8z\n\276\310\234\305\274:$\344=\264\325\010=\030\325c\274\357\000\276=\346n\306\275T\371\223>\017\2137\276\220\025!\276\271\316\200>-\355N=?\273\025\275\354\363*>a\0029>\361\3528\275\315\316.\276-\023r=\010\247\005\275\205\262\222=\037K7\275\364\t\307<\257|5\276\361_X>\316\336\222\274\270\370[\276Q\210\251=\200\003\307\275|q2>2\233a>?\255\271<\223\346\244>ZF\231=_\276\002>\247\305\251=\340K\312\274\004l^=\254\006*>\357\005\033\276\n7\034\2764\347/=HW\214\275\372\037\232<\206T\001<\271\245\032>^NU>F(\374;\303R\255\275\336xU\276\333;\023\275\217\257\222\275J\241\013\275\013\036\336\275\241\344o\272\314~\004\275\222\2011>@PP\276g&l=\341>><\3659\316<\343\205s\275\201Hi\276^\263h>\0300\276\275to\226=h\311f>\367\301N=A\224\363\275P\244\2249\311g\327\273u\247g\274X\247\307=D%s=\024\374\222\275E\017n=\327\334\356\274\357\r\004>\026p\007\276\201\252\227\275Z\322*\276\343=Q\275\356\206C\276\216\332\277\275\017\276\230\276\302\036\367=\037-B\275\252\255\203=\366p\002>\303\352\226=H\320\036>\225h.\274\336\003p=\304\233\222\275=\r\305\273\357\264\371\275\021-\315>\t\270#>\353\334\244\275$\004\026\276\321>\376=2\367P\275\004-\316\275\202x\203=T\202D\276\324\263\305\275Jn\033\275\314$\211\272\317A\224=-\016d\274J\246K\276`\233@\275\316\233\256=\026?\264=\354g\317\2756-\201\275\017I\333=\257c\321=:N\234\275C\273\324\275~\375\304\276e`\032\276E\346\010\276\354f =\304\260\303;Tc\333\275\275\275s>,\263\234={\376\364=\266\234\023>\312\376N\275us?\276\314h\032>\327\"\302:i.O\276\316\261\227=3Y\317\275\024\334\202\275\026|\222\275\004\310\r\276n\303\005\275u\"%>\300=~\275<\2268\275\253\241\025\276\317\362\247=aW\253\275\r\2315\276\326@\t=\232\312\013<G\361\t>\002\336^;Bi\367=\276\021->\275\031\254=\037\246P>c\257\001\275\316\203\033>e\2509<\027\374?>\261\210\210\275Q\254j=n\'\210\276\254\365\036\276\026\210\253\275vh^=2\020\361\272\004u0\275\360\207\372\275Hy\234<g\253\320\274\331\313q\273\016\360j\276er5>:\354\n\276e\001\261\274:]8>\231]+\276\0142\177\274\211\210\267\273\370\357j>i\005g\275\202\213\253\276\346\202D\275\273\024X\274\031\235\000\276>w\342\274\240\207\337\275.!?\276\3506t\2752\305\253</=\311=w\315Y\275!\366\033\276\'\204\260<\374\032\025=\211\035\'\276i\025\225\275y\314\313=\020mq\276\330\271\354=\033\006\300=8`h<\246\307\233=t\347\243=J\024\002\276\326S\n>S\277y<W\r\277=\306\337\252\275\327\207)>\014\014)>/\375\255\275\241\271\037\275\003\213P\276\001t\n>/\376\247>\2260&=g/\223>I\220\360\275\260\216\375\274\331\332\206\274\357<R>\344\2426>h\315\201=\231\006\361<\033\361\031>\201\"E=\301z\256\273\'\261\376=\245s/\276ki\275=\327\364X>\022\2635\276\214\260\355\275\214\221\005=\357\252$\276\262*\000\276[f8\276\013F\326\275V\332C=\026\243\207\2741\311\030><5\010>\313\271\032=\014\204\311\274J\371\353=\3446\003\276\'0~\275\324m\243=\233\264U=\256\001\025=mJ\000>\364\237\246\275\346\222\014>\342b\267\275+\224\205=\367I+<B\030\207\275\3404x<\317 \335=\227P\027\275\017\344)=8\345\252;\000k\306\275\001\024\350=a\253\r\276\261e\013=\332\201]=\361N&>8z\030>c\340e>\277X\022>9(\250\2756\205:\276m\330\276\275\3121\360=\2738\300=Db\200>\341\201\351<\n\207\247\275\351\000^\276x\351\350\275\025\272\000\276\231s,=\333T:\276TU\374=|\230s>\274\233-=f\005u\274\3418q\275\225Y\316<\312\353\203\275K1\234\275>K\201=\346La\275\305\360*=\363\323\375\275i\377\261\275\317u\\<N\363\003\276\254n\210\275\2178\254=\007+\034\276\t\217\361\274h\335\007\2768?P>\017-\276<\264_x>1\221E\276\345\023\300=:\267\220\274\307\254\246=\200(\302\274^\307\241\275\024h\036>\025Tn\273\337E\006\275\240\264\374<\032\367[\275\325\033d\275dG|\274 \"\265=\340\034\306\274qR\003\276\260\267#=\376WN>\343\006.>\370W\354=\003\221\207=\213:\035<C2\266=\005B\227=\322vC\275\376zV=\256<%>\343\262C\276\317\023\007>\303\254@=\263\336\275\274\036\340\026\276&^\004\276\247x(\2763/\266="
          }
        }
      }
    }
    node {
      name: "deep/weights_layer1"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_layer1/Assign"
      op: "Assign"
      input: "deep/weights_layer1"
      input: "deep/weights_layer1/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_layer1/read"
      op: "Identity"
      input: "deep/weights_layer1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_bias1/initial_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
            tensor_content: "?>\217\276&\312b\275|(\207=n@x=\\\261 \276\231b\341\274\013\276A>\000\234f\276,\027\326\275\235\301N9\240\354\022>\320\"\377\275\025\301\353\275(\237\307\275R/K\275\212\317\201\2761\352\216\275\322\244\365\2753\372\r\272\301\253\276\274\3130\255=\316\204.<\177O0\275\321]\n<^q\037> \247\007=\346f(\276\r\024\235=\020Al\276\234\266\032\275s\350\334\274KPs>\305\0369\276\223\205\006\275)\221\024\276\251\320[=\276\004\202>\303\357\311=\236h7;\225\235\010=6\261U\275\211\255X\276\235\375\013>\351\274\312=\253\335\305=L\347-=\032=;>\005L\201\276\370=\004>\313[\342\275\222\221\365=W\002_>\365g\202\275\310\232\n=\243\272\242=W\024I=X]j=\204\270Q>\255\230f\276\213\210\273=\361\342\030\276\262\241\204\275\377\254^>m5p="
          }
        }
      }
    }
    node {
      name: "deep/weights_bias1"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_bias1/Assign"
      op: "Assign"
      input: "deep/weights_bias1"
      input: "deep/weights_bias1/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_bias1/read"
      op: "Identity"
      input: "deep/weights_bias1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/MatMul"
      op: "MatMul"
      input: "deep/dropout/mul"
      input: "deep/weights_layer0/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "deep/Add"
      op: "Add"
      input: "deep/MatMul"
      input: "deep/weights_bias0/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/Relu"
      op: "Relu"
      input: "deep/Add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/keep_prob"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/Shape"
      op: "Shape"
      input: "deep/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "deep/dropout_1/random_uniform/min"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/random_uniform/max"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "deep/dropout_1/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 1548318758
        }
      }
      attr {
        key: "seed2"
        value {
          i: 75
        }
      }
    }
    node {
      name: "deep/dropout_1/random_uniform/sub"
      op: "Sub"
      input: "deep/dropout_1/random_uniform/max"
      input: "deep/dropout_1/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/random_uniform/mul"
      op: "Mul"
      input: "deep/dropout_1/random_uniform/RandomUniform"
      input: "deep/dropout_1/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/random_uniform"
      op: "Add"
      input: "deep/dropout_1/random_uniform/mul"
      input: "deep/dropout_1/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/add"
      op: "Add"
      input: "deep/dropout_1/keep_prob"
      input: "deep/dropout_1/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/Floor"
      op: "Floor"
      input: "deep/dropout_1/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/div"
      op: "RealDiv"
      input: "deep/Relu"
      input: "deep/dropout_1/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_1/mul"
      op: "Mul"
      input: "deep/dropout_1/div"
      input: "deep/dropout_1/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/MatMul_1"
      op: "MatMul"
      input: "deep/dropout_1/mul"
      input: "deep/weights_layer1/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "deep/Add_1"
      op: "Add"
      input: "deep/MatMul_1"
      input: "deep/weights_bias1/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/Relu_1"
      op: "Relu"
      input: "deep/Add_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/keep_prob"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/Shape"
      op: "Shape"
      input: "deep/Relu_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "deep/dropout_2/random_uniform/min"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/random_uniform/max"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "deep/dropout_2/Shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 1548318758
        }
      }
      attr {
        key: "seed2"
        value {
          i: 90
        }
      }
    }
    node {
      name: "deep/dropout_2/random_uniform/sub"
      op: "Sub"
      input: "deep/dropout_2/random_uniform/max"
      input: "deep/dropout_2/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/random_uniform/mul"
      op: "Mul"
      input: "deep/dropout_2/random_uniform/RandomUniform"
      input: "deep/dropout_2/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/random_uniform"
      op: "Add"
      input: "deep/dropout_2/random_uniform/mul"
      input: "deep/dropout_2/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/add"
      op: "Add"
      input: "deep/dropout_2/keep_prob"
      input: "deep/dropout_2/random_uniform"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/Floor"
      op: "Floor"
      input: "deep/dropout_2/add"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/div"
      op: "RealDiv"
      input: "deep/Relu_1"
      input: "deep/dropout_2/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/dropout_2/mul"
      op: "Mul"
      input: "deep/dropout_2/div"
      input: "deep/dropout_2/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deepfm/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "deepfm/concat"
      op: "ConcatV2"
      input: "fm/Sum"
      input: "fm/mul"
      input: "deep/dropout_2/mul"
      input: "deepfm/concat/axis"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 83
              }
            }
          }
        }
      }
    }
    node {
      name: "deepfm/concat_1/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "deepfm/concat_1"
      op: "ConcatV2"
      input: "fm/Sum"
      input: "fm/mul"
      input: "deep/dropout_2/mul"
      input: "deepfm/concat_1/axis"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 83
              }
            }
          }
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/initial_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
            tensor_content: "\016\r\256\276\205\327\007\276\245\354\251;\351|\224>B\351\200\274\204\004V\276\221M\314<\274t\323\274\270\371\245\274\254\374B\274\257\361\252\275\345\";>\356)\223\272eJ\'={#\255\276\347\033\025>\322\324Z>\372[\001\276zC\034\274LEu\275+\325\236=&4\264<\002\262\242;\017\361\027\276\266\211V>\323\001\301\272\330\006\200\276]^E>K:~\275\366\273\201=\302_\214\276\"\315q=/\241\'>\344\234w\275\037\203`>\314\312+=\337\264\022>\"r<\273]GZ>\025)\234=\271%>\276Y\243Z=D\233\263\274\2041\333\275\271E\322> QF\2764C\001>\230*\004\276\014\305\263=\311\205\005>\366`1<\200P\004>\274\277\352\274\030\016F\276\324\340\323\274\264\ro<\000u\241\275\357fi>5(\034\276\350\'\226=\201\003\300\275O1\243<\205\252\007>\232\217j\274\245\341#\276B\213\001>\304\337a\275\326uZ\2743\034G\274\3473\317\2758\243}=\034}\n\275\205?&>2\307?\276\336\374\033\276\372{\340\275\304_\"\276?\034\330<\240\207\036\276 \211p\275\331\362\010\275\3036o\274\320\3166="
          }
        }
      }
    }
    node {
      name: "deepfm/concat_projection0"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 83
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/Assign"
      op: "Assign"
      input: "deepfm/concat_projection0"
      input: "deepfm/concat_projection0/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/read"
      op: "Identity"
      input: "deepfm/concat_projection0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "deepfm/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.009999999776482582
          }
        }
      }
    }
    node {
      name: "deepfm/concat_bias0"
      op: "VariableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/Assign"
      op: "Assign"
      input: "deepfm/concat_bias0"
      input: "deepfm/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/read"
      op: "Identity"
      input: "deepfm/concat_bias0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "deepfm/MatMul"
      op: "MatMul"
      input: "deepfm/concat_1"
      input: "deepfm/concat_projection0/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "deepfm/out"
      op: "Add"
      input: "deepfm/MatMul"
      input: "deepfm/concat_bias0/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "score"
      op: "Sigmoid"
      input: "deepfm/out"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "deep_fm/score/tag"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "deep_fm/score"
          }
        }
      }
    }
    node {
      name: "deep_fm/score"
      op: "HistogramSummary"
      input: "deep_fm/score/tag"
      input: "score"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/sub"
      op: "Sub"
      input: "Placeholder"
      input: "score"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/Square"
      op: "Square"
      input: "DeepFm_Estimate/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/Sum"
      op: "Sum"
      input: "DeepFm_Estimate/Square"
      input: "DeepFm_Estimate/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "DeepFm_Estimate/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/Mean"
      op: "Mean"
      input: "DeepFm_Estimate/Sum"
      input: "DeepFm_Estimate/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "DeepFm_Estimate/loss/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "DeepFm_Estimate/loss"
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/loss"
      op: "ScalarSummary"
      input: "DeepFm_Estimate/loss/tags"
      input: "DeepFm_Estimate/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Cast"
      op: "Cast"
      input: "Placeholder"
      attr {
        key: "DstT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\377\377\377\377\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Reshape"
      op: "Reshape"
      input: "score"
      input: "DeepFm_Estimate/auc/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Reshape_1/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\377\377\377\377"
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Reshape_1"
      op: "Reshape"
      input: "DeepFm_Estimate/auc/Cast"
      input: "DeepFm_Estimate/auc/Reshape_1/shape"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Shape"
      op: "Shape"
      input: "DeepFm_Estimate/auc/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice"
      op: "StridedSlice"
      input: "DeepFm_Estimate/auc/Shape"
      input: "DeepFm_Estimate/auc/strided_slice/stack"
      input: "DeepFm_Estimate/auc/strided_slice/stack_1"
      input: "DeepFm_Estimate/auc/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 200
              }
            }
            tensor_content: "\225\277\326\263\317\251\244;\317\251$<\267\376v<\317\251\244<C\324\315<\267\376\366<\225\024\020=\317\251$=\t?9=C\324M=}ib=\267\376v=\370\311\205=\225\024\220=2_\232=\317\251\244=l\364\256=\t?\271=\246\211\303=C\324\315=\340\036\330=}i\342=\032\264\354=\267\376\366=\252\244\000>\370\311\005>G\357\n>\225\024\020>\3449\025>2_\032>\201\204\037>\317\251$>\036\317)>l\364.>\273\0314>\t?9>Wd>>\246\211C>\364\256H>C\324M>\221\371R>\340\036X>.D]>}ib>\313\216g>\032\264l>h\331q>\267\376v>\005$|>\252\244\200>Q7\203>\370\311\205>\240\\\210>G\357\212>\356\201\215>\225\024\220><\247\222>\3449\225>\213\314\227>2_\232>\331\361\234>\201\204\237>(\027\242>\317\251\244>v<\247>\036\317\251>\305a\254>l\364\256>\023\207\261>\273\031\264>b\254\266>\t?\271>\260\321\273>Wd\276>\377\366\300>\246\211\303>M\034\306>\364\256\310>\234A\313>C\324\315>\352f\320>\221\371\322>9\214\325>\340\036\330>\207\261\332>.D\335>\326\326\337>}i\342>$\374\344>\313\216\347>r!\352>\032\264\354>\301F\357>h\331\361>\017l\364>\267\376\366>^\221\371>\005$\374>\254\266\376>\252\244\000?\375\355\001?Q7\003?\245\200\004?\370\311\005?L\023\007?\240\\\010?\363\245\t?G\357\n?\2328\014?\356\201\r?B\313\016?\225\024\020?\351]\021?<\247\022?\220\360\023?\3449\025?7\203\026?\213\314\027?\337\025\031?2_\032?\206\250\033?\331\361\034?-;\036?\201\204\037?\324\315 ?(\027\"?{`#?\317\251$?#\363%?v<\'?\312\205(?\036\317)?q\030+?\305a,?\030\253-?l\364.?\300=0?\023\2071?g\3202?\273\0314?\016c5?b\2546?\265\3657?\t?9?]\210:?\260\321;?\004\033=?Wd>?\253\255??\377\366@?R@B?\246\211C?\372\322D?M\034F?\241eG?\364\256H?H\370I?\234AK?\357\212L?C\324M?\227\035O?\352fP?>\260Q?\221\371R?\345BT?9\214U?\214\325V?\340\036X?3hY?\207\261Z?\333\372[?.D]?\202\215^?\326\326_?) a?}ib?\320\262c?$\374d?xEf?\313\216g?\037\330h?r!j?\306jk?\032\264l?m\375m?\301Fo?\025\220p?h\331q?\274\"s?\017lt?c\265u?\267\376v?\nHx?^\221y?\262\332z?\005$|?Ym}?\254\266~?\001\000\200?"
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/ExpandDims"
      op: "ExpandDims"
      input: "DeepFm_Estimate/auc/Const"
      input: "DeepFm_Estimate/auc/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/stack/0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/stack"
      op: "Pack"
      input: "DeepFm_Estimate/auc/stack/0"
      input: "DeepFm_Estimate/auc/strided_slice"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Tile"
      op: "Tile"
      input: "DeepFm_Estimate/auc/ExpandDims"
      input: "DeepFm_Estimate/auc/stack"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/transpose/Rank"
      op: "Rank"
      input: "DeepFm_Estimate/auc/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/transpose/sub/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/transpose/sub"
      op: "Sub"
      input: "DeepFm_Estimate/auc/transpose/Rank"
      input: "DeepFm_Estimate/auc/transpose/sub/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/transpose/Range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/transpose/Range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/transpose/Range"
      op: "Range"
      input: "DeepFm_Estimate/auc/transpose/Range/start"
      input: "DeepFm_Estimate/auc/transpose/Rank"
      input: "DeepFm_Estimate/auc/transpose/Range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/transpose/sub_1"
      op: "Sub"
      input: "DeepFm_Estimate/auc/transpose/sub"
      input: "DeepFm_Estimate/auc/transpose/Range"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/transpose"
      op: "Transpose"
      input: "DeepFm_Estimate/auc/Reshape"
      input: "DeepFm_Estimate/auc/transpose/sub_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tperm"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Tile_1/multiples"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\310\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Tile_1"
      op: "Tile"
      input: "DeepFm_Estimate/auc/transpose"
      input: "DeepFm_Estimate/auc/Tile_1/multiples"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Greater"
      op: "Greater"
      input: "DeepFm_Estimate/auc/Tile_1"
      input: "DeepFm_Estimate/auc/Tile"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/LogicalNot"
      op: "LogicalNot"
      input: "DeepFm_Estimate/auc/Greater"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Tile_2/multiples"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\310\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Tile_2"
      op: "Tile"
      input: "DeepFm_Estimate/auc/Reshape_1"
      input: "DeepFm_Estimate/auc/Tile_2/multiples"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/LogicalNot_1"
      op: "LogicalNot"
      input: "DeepFm_Estimate/auc/Tile_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/true_positives/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/true_positives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 200
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/true_positives"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/true_positives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 200
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/true_positives/Assign"
      op: "Assign"
      input: "DeepFm_Estimate/auc/true_positives"
      input: "DeepFm_Estimate/auc/true_positives/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/true_positives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/true_positives/read"
      op: "Identity"
      input: "DeepFm_Estimate/auc/true_positives"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/true_positives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/LogicalAnd"
      op: "LogicalAnd"
      input: "DeepFm_Estimate/auc/Tile_2"
      input: "DeepFm_Estimate/auc/Greater"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/ToFloat_1"
      op: "Cast"
      input: "DeepFm_Estimate/auc/LogicalAnd"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Sum"
      op: "Sum"
      input: "DeepFm_Estimate/auc/ToFloat_1"
      input: "DeepFm_Estimate/auc/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/AssignAdd"
      op: "AssignAdd"
      input: "DeepFm_Estimate/auc/true_positives"
      input: "DeepFm_Estimate/auc/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/true_positives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/false_negatives/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/false_negatives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 200
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/false_negatives"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/false_negatives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 200
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/false_negatives/Assign"
      op: "Assign"
      input: "DeepFm_Estimate/auc/false_negatives"
      input: "DeepFm_Estimate/auc/false_negatives/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/false_negatives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/false_negatives/read"
      op: "Identity"
      input: "DeepFm_Estimate/auc/false_negatives"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/false_negatives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/LogicalAnd_1"
      op: "LogicalAnd"
      input: "DeepFm_Estimate/auc/Tile_2"
      input: "DeepFm_Estimate/auc/LogicalNot"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/ToFloat_2"
      op: "Cast"
      input: "DeepFm_Estimate/auc/LogicalAnd_1"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Sum_1"
      op: "Sum"
      input: "DeepFm_Estimate/auc/ToFloat_2"
      input: "DeepFm_Estimate/auc/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/AssignAdd_1"
      op: "AssignAdd"
      input: "DeepFm_Estimate/auc/false_negatives"
      input: "DeepFm_Estimate/auc/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/false_negatives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/true_negatives/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/true_negatives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 200
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/true_negatives"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/true_negatives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 200
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/true_negatives/Assign"
      op: "Assign"
      input: "DeepFm_Estimate/auc/true_negatives"
      input: "DeepFm_Estimate/auc/true_negatives/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/true_negatives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/true_negatives/read"
      op: "Identity"
      input: "DeepFm_Estimate/auc/true_negatives"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/true_negatives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/LogicalAnd_2"
      op: "LogicalAnd"
      input: "DeepFm_Estimate/auc/LogicalNot_1"
      input: "DeepFm_Estimate/auc/LogicalNot"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/ToFloat_3"
      op: "Cast"
      input: "DeepFm_Estimate/auc/LogicalAnd_2"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Sum_2/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Sum_2"
      op: "Sum"
      input: "DeepFm_Estimate/auc/ToFloat_3"
      input: "DeepFm_Estimate/auc/Sum_2/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/AssignAdd_2"
      op: "AssignAdd"
      input: "DeepFm_Estimate/auc/true_negatives"
      input: "DeepFm_Estimate/auc/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/true_negatives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/false_positives/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/false_positives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 200
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/false_positives"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/false_positives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 200
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/false_positives/Assign"
      op: "Assign"
      input: "DeepFm_Estimate/auc/false_positives"
      input: "DeepFm_Estimate/auc/false_positives/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/false_positives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/false_positives/read"
      op: "Identity"
      input: "DeepFm_Estimate/auc/false_positives"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/false_positives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/LogicalAnd_3"
      op: "LogicalAnd"
      input: "DeepFm_Estimate/auc/LogicalNot_1"
      input: "DeepFm_Estimate/auc/Greater"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/ToFloat_4"
      op: "Cast"
      input: "DeepFm_Estimate/auc/LogicalAnd_3"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Sum_3/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Sum_3"
      op: "Sum"
      input: "DeepFm_Estimate/auc/ToFloat_4"
      input: "DeepFm_Estimate/auc/Sum_3/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/AssignAdd_3"
      op: "AssignAdd"
      input: "DeepFm_Estimate/auc/false_positives"
      input: "DeepFm_Estimate/auc/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@DeepFm_Estimate/auc/false_positives"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/add/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/add"
      op: "Add"
      input: "DeepFm_Estimate/auc/true_positives/read"
      input: "DeepFm_Estimate/auc/add/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/add_1"
      op: "Add"
      input: "DeepFm_Estimate/auc/true_positives/read"
      input: "DeepFm_Estimate/auc/false_negatives/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/add_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/add_2"
      op: "Add"
      input: "DeepFm_Estimate/auc/add_1"
      input: "DeepFm_Estimate/auc/add_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/div"
      op: "RealDiv"
      input: "DeepFm_Estimate/auc/add"
      input: "DeepFm_Estimate/auc/add_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/add_3"
      op: "Add"
      input: "DeepFm_Estimate/auc/false_positives/read"
      input: "DeepFm_Estimate/auc/true_negatives/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/add_4/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/add_4"
      op: "Add"
      input: "DeepFm_Estimate/auc/add_3"
      input: "DeepFm_Estimate/auc/add_4/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/div_1"
      op: "RealDiv"
      input: "DeepFm_Estimate/auc/false_positives/read"
      input: "DeepFm_Estimate/auc/add_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 199
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_1"
      op: "StridedSlice"
      input: "DeepFm_Estimate/auc/div_1"
      input: "DeepFm_Estimate/auc/strided_slice_1/stack"
      input: "DeepFm_Estimate/auc/strided_slice_1/stack_1"
      input: "DeepFm_Estimate/auc/strided_slice_1/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_2"
      op: "StridedSlice"
      input: "DeepFm_Estimate/auc/div_1"
      input: "DeepFm_Estimate/auc/strided_slice_2/stack"
      input: "DeepFm_Estimate/auc/strided_slice_2/stack_1"
      input: "DeepFm_Estimate/auc/strided_slice_2/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/sub"
      op: "Sub"
      input: "DeepFm_Estimate/auc/strided_slice_1"
      input: "DeepFm_Estimate/auc/strided_slice_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 199
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_3"
      op: "StridedSlice"
      input: "DeepFm_Estimate/auc/div"
      input: "DeepFm_Estimate/auc/strided_slice_3/stack"
      input: "DeepFm_Estimate/auc/strided_slice_3/stack_1"
      input: "DeepFm_Estimate/auc/strided_slice_3/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_4/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_4/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_4/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_4"
      op: "StridedSlice"
      input: "DeepFm_Estimate/auc/div"
      input: "DeepFm_Estimate/auc/strided_slice_4/stack"
      input: "DeepFm_Estimate/auc/strided_slice_4/stack_1"
      input: "DeepFm_Estimate/auc/strided_slice_4/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/add_5"
      op: "Add"
      input: "DeepFm_Estimate/auc/strided_slice_3"
      input: "DeepFm_Estimate/auc/strided_slice_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/truediv/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/truediv"
      op: "RealDiv"
      input: "DeepFm_Estimate/auc/add_5"
      input: "DeepFm_Estimate/auc/truediv/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Mul"
      op: "Mul"
      input: "DeepFm_Estimate/auc/sub"
      input: "DeepFm_Estimate/auc/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/value"
      op: "Sum"
      input: "DeepFm_Estimate/auc/Mul"
      input: "DeepFm_Estimate/auc/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/add_6/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/add_6"
      op: "Add"
      input: "DeepFm_Estimate/auc/AssignAdd"
      input: "DeepFm_Estimate/auc/add_6/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/add_7"
      op: "Add"
      input: "DeepFm_Estimate/auc/AssignAdd"
      input: "DeepFm_Estimate/auc/AssignAdd_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/add_8/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/add_8"
      op: "Add"
      input: "DeepFm_Estimate/auc/add_7"
      input: "DeepFm_Estimate/auc/add_8/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/div_2"
      op: "RealDiv"
      input: "DeepFm_Estimate/auc/add_6"
      input: "DeepFm_Estimate/auc/add_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/add_9"
      op: "Add"
      input: "DeepFm_Estimate/auc/AssignAdd_3"
      input: "DeepFm_Estimate/auc/AssignAdd_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/add_10/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999974752427e-07
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/add_10"
      op: "Add"
      input: "DeepFm_Estimate/auc/add_9"
      input: "DeepFm_Estimate/auc/add_10/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/div_3"
      op: "RealDiv"
      input: "DeepFm_Estimate/auc/AssignAdd_3"
      input: "DeepFm_Estimate/auc/add_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 200
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_5/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_5/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 199
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_5/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_5"
      op: "StridedSlice"
      input: "DeepFm_Estimate/auc/div_3"
      input: "DeepFm_Estimate/auc/strided_slice_5/stack"
      input: "DeepFm_Estimate/auc/strided_slice_5/stack_1"
      input: "DeepFm_Estimate/auc/strided_slice_5/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_6/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_6/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_6/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_6"
      op: "StridedSlice"
      input: "DeepFm_Estimate/auc/div_3"
      input: "DeepFm_Estimate/auc/strided_slice_6/stack"
      input: "DeepFm_Estimate/auc/strided_slice_6/stack_1"
      input: "DeepFm_Estimate/auc/strided_slice_6/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/sub_1"
      op: "Sub"
      input: "DeepFm_Estimate/auc/strided_slice_5"
      input: "DeepFm_Estimate/auc/strided_slice_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_7/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_7/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 199
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_7/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_7"
      op: "StridedSlice"
      input: "DeepFm_Estimate/auc/div_2"
      input: "DeepFm_Estimate/auc/strided_slice_7/stack"
      input: "DeepFm_Estimate/auc/strided_slice_7/stack_1"
      input: "DeepFm_Estimate/auc/strided_slice_7/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_8/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_8/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_8/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/strided_slice_8"
      op: "StridedSlice"
      input: "DeepFm_Estimate/auc/div_2"
      input: "DeepFm_Estimate/auc/strided_slice_8/stack"
      input: "DeepFm_Estimate/auc/strided_slice_8/stack_1"
      input: "DeepFm_Estimate/auc/strided_slice_8/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 1
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 0
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/add_11"
      op: "Add"
      input: "DeepFm_Estimate/auc/strided_slice_7"
      input: "DeepFm_Estimate/auc/strided_slice_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/truediv_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/truediv_1"
      op: "RealDiv"
      input: "DeepFm_Estimate/auc/add_11"
      input: "DeepFm_Estimate/auc/truediv_1/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Mul_1"
      op: "Mul"
      input: "DeepFm_Estimate/auc/sub_1"
      input: "DeepFm_Estimate/auc/truediv_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 199
              }
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc/update_op"
      op: "Sum"
      input: "DeepFm_Estimate/auc/Mul_1"
      input: "DeepFm_Estimate/auc/Const_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc1/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "DeepFm_Estimate/auc1"
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc1"
      op: "ScalarSummary"
      input: "DeepFm_Estimate/auc1/tags"
      input: "DeepFm_Estimate/auc/value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc2/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "DeepFm_Estimate/auc2"
          }
        }
      }
    }
    node {
      name: "DeepFm_Estimate/auc2"
      op: "ScalarSummary"
      input: "DeepFm_Estimate/auc2/tags"
      input: "DeepFm_Estimate/auc/update_op"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "train/gradients/Fill"
      op: "Fill"
      input: "train/gradients/Shape"
      input: "train/gradients/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Mean_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Mean_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/Fill"
      input: "train/gradients/DeepFm_Estimate/Mean_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Mean_grad/Shape"
      op: "Shape"
      input: "DeepFm_Estimate/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Mean_grad/Tile"
      op: "Tile"
      input: "train/gradients/DeepFm_Estimate/Mean_grad/Reshape"
      input: "train/gradients/DeepFm_Estimate/Mean_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Mean_grad/Shape_1"
      op: "Shape"
      input: "DeepFm_Estimate/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Mean_grad/Shape_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Mean_grad/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Mean_grad/Prod"
      op: "Prod"
      input: "train/gradients/DeepFm_Estimate/Mean_grad/Shape_1"
      input: "train/gradients/DeepFm_Estimate/Mean_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Mean_grad/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Mean_grad/Prod_1"
      op: "Prod"
      input: "train/gradients/DeepFm_Estimate/Mean_grad/Shape_2"
      input: "train/gradients/DeepFm_Estimate/Mean_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Mean_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Mean_grad/Maximum"
      op: "Maximum"
      input: "train/gradients/DeepFm_Estimate/Mean_grad/Prod_1"
      input: "train/gradients/DeepFm_Estimate/Mean_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Mean_grad/floordiv"
      op: "FloorDiv"
      input: "train/gradients/DeepFm_Estimate/Mean_grad/Prod"
      input: "train/gradients/DeepFm_Estimate/Mean_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Mean_grad/Cast"
      op: "Cast"
      input: "train/gradients/DeepFm_Estimate/Mean_grad/floordiv"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Mean_grad/truediv"
      op: "RealDiv"
      input: "train/gradients/DeepFm_Estimate/Mean_grad/Tile"
      input: "train/gradients/DeepFm_Estimate/Mean_grad/Cast"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Sum_grad/Shape"
      op: "Shape"
      input: "DeepFm_Estimate/Square"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Sum_grad/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Sum_grad/add"
      op: "Add"
      input: "DeepFm_Estimate/Sum/reduction_indices"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Sum_grad/mod"
      op: "FloorMod"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/add"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Sum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Sum_grad/range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Sum_grad/range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Sum_grad/range"
      op: "Range"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/range/start"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/Size"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Sum_grad/Fill/value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Sum_grad/Fill"
      op: "Fill"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/Shape_1"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Sum_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/range"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/mod"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/Shape"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Sum_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Sum_grad/Maximum"
      op: "Maximum"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/DynamicStitch"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Sum_grad/floordiv"
      op: "FloorDiv"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/Shape"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Sum_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/DeepFm_Estimate/Mean_grad/truediv"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Sum_grad/Tile"
      op: "Tile"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/Reshape"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Square_grad/mul/x"
      op: "Const"
      input: "^train/gradients/DeepFm_Estimate/Sum_grad/Tile"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Square_grad/mul"
      op: "Mul"
      input: "train/gradients/DeepFm_Estimate/Square_grad/mul/x"
      input: "DeepFm_Estimate/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/Square_grad/mul_1"
      op: "Mul"
      input: "train/gradients/DeepFm_Estimate/Sum_grad/Tile"
      input: "train/gradients/DeepFm_Estimate/Square_grad/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/sub_grad/Shape"
      op: "Shape"
      input: "Placeholder"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/sub_grad/Shape_1"
      op: "Shape"
      input: "score"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/sub_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/DeepFm_Estimate/sub_grad/Shape"
      input: "train/gradients/DeepFm_Estimate/sub_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/sub_grad/Sum"
      op: "Sum"
      input: "train/gradients/DeepFm_Estimate/Square_grad/mul_1"
      input: "train/gradients/DeepFm_Estimate/sub_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/sub_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/DeepFm_Estimate/sub_grad/Sum"
      input: "train/gradients/DeepFm_Estimate/sub_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/sub_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/DeepFm_Estimate/Square_grad/mul_1"
      input: "train/gradients/DeepFm_Estimate/sub_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/sub_grad/Neg"
      op: "Neg"
      input: "train/gradients/DeepFm_Estimate/sub_grad/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/sub_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/DeepFm_Estimate/sub_grad/Neg"
      input: "train/gradients/DeepFm_Estimate/sub_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/sub_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/DeepFm_Estimate/sub_grad/Reshape"
      input: "^train/gradients/DeepFm_Estimate/sub_grad/Reshape_1"
    }
    node {
      name: "train/gradients/DeepFm_Estimate/sub_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/DeepFm_Estimate/sub_grad/Reshape"
      input: "^train/gradients/DeepFm_Estimate/sub_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/DeepFm_Estimate/sub_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/DeepFm_Estimate/sub_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/DeepFm_Estimate/sub_grad/Reshape_1"
      input: "^train/gradients/DeepFm_Estimate/sub_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/DeepFm_Estimate/sub_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/score_grad/SigmoidGrad"
      op: "SigmoidGrad"
      input: "score"
      input: "train/gradients/DeepFm_Estimate/sub_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/out_grad/Shape"
      op: "Shape"
      input: "deepfm/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deepfm/out_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/out_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/deepfm/out_grad/Shape"
      input: "train/gradients/deepfm/out_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/out_grad/Sum"
      op: "Sum"
      input: "train/gradients/score_grad/SigmoidGrad"
      input: "train/gradients/deepfm/out_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deepfm/out_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deepfm/out_grad/Sum"
      input: "train/gradients/deepfm/out_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/out_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/score_grad/SigmoidGrad"
      input: "train/gradients/deepfm/out_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deepfm/out_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/deepfm/out_grad/Sum_1"
      input: "train/gradients/deepfm/out_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/out_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deepfm/out_grad/Reshape"
      input: "^train/gradients/deepfm/out_grad/Reshape_1"
    }
    node {
      name: "train/gradients/deepfm/out_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deepfm/out_grad/Reshape"
      input: "^train/gradients/deepfm/out_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deepfm/out_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/out_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deepfm/out_grad/Reshape_1"
      input: "^train/gradients/deepfm/out_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deepfm/out_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/MatMul_grad/MatMul"
      op: "MatMul"
      input: "train/gradients/deepfm/out_grad/tuple/control_dependency"
      input: "deepfm/concat_projection0/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 83
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "train/gradients/deepfm/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "deepfm/concat_1"
      input: "train/gradients/deepfm/out_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deepfm/MatMul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deepfm/MatMul_grad/MatMul"
      input: "^train/gradients/deepfm/MatMul_grad/MatMul_1"
    }
    node {
      name: "train/gradients/deepfm/MatMul_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deepfm/MatMul_grad/MatMul"
      input: "^train/gradients/deepfm/MatMul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deepfm/MatMul_grad/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 83
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/MatMul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deepfm/MatMul_grad/MatMul_1"
      input: "^train/gradients/deepfm/MatMul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deepfm/MatMul_grad/MatMul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/concat_1_grad/Rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/concat_1_grad/mod"
      op: "FloorMod"
      input: "deepfm/concat_1/axis"
      input: "train/gradients/deepfm/concat_1_grad/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/concat_1_grad/Shape"
      op: "Shape"
      input: "fm/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deepfm/concat_1_grad/ShapeN"
      op: "ShapeN"
      input: "fm/Sum"
      input: "fm/mul"
      input: "deep/dropout_2/mul"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deepfm/concat_1_grad/ConcatOffset"
      op: "ConcatOffset"
      input: "train/gradients/deepfm/concat_1_grad/mod"
      input: "train/gradients/deepfm/concat_1_grad/ShapeN"
      input: "train/gradients/deepfm/concat_1_grad/ShapeN:1"
      input: "train/gradients/deepfm/concat_1_grad/ShapeN:2"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/concat_1_grad/Slice"
      op: "Slice"
      input: "train/gradients/deepfm/MatMul_grad/tuple/control_dependency"
      input: "train/gradients/deepfm/concat_1_grad/ConcatOffset"
      input: "train/gradients/deepfm/concat_1_grad/ShapeN"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/concat_1_grad/Slice_1"
      op: "Slice"
      input: "train/gradients/deepfm/MatMul_grad/tuple/control_dependency"
      input: "train/gradients/deepfm/concat_1_grad/ConcatOffset:1"
      input: "train/gradients/deepfm/concat_1_grad/ShapeN:1"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/concat_1_grad/Slice_2"
      op: "Slice"
      input: "train/gradients/deepfm/MatMul_grad/tuple/control_dependency"
      input: "train/gradients/deepfm/concat_1_grad/ConcatOffset:2"
      input: "train/gradients/deepfm/concat_1_grad/ShapeN:2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/concat_1_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deepfm/concat_1_grad/Slice"
      input: "^train/gradients/deepfm/concat_1_grad/Slice_1"
      input: "^train/gradients/deepfm/concat_1_grad/Slice_2"
    }
    node {
      name: "train/gradients/deepfm/concat_1_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deepfm/concat_1_grad/Slice"
      input: "^train/gradients/deepfm/concat_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deepfm/concat_1_grad/Slice"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/concat_1_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deepfm/concat_1_grad/Slice_1"
      input: "^train/gradients/deepfm/concat_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deepfm/concat_1_grad/Slice_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deepfm/concat_1_grad/tuple/control_dependency_2"
      op: "Identity"
      input: "train/gradients/deepfm/concat_1_grad/Slice_2"
      input: "^train/gradients/deepfm/concat_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deepfm/concat_1_grad/Slice_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_grad/Shape"
      op: "Shape"
      input: "fm/Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_grad/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_grad/add"
      op: "Add"
      input: "fm/Sum/reduction_indices"
      input: "train/gradients/fm/Sum_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_grad/mod"
      op: "FloorMod"
      input: "train/gradients/fm/Sum_grad/add"
      input: "train/gradients/fm/Sum_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_grad/range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_grad/range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_grad/range"
      op: "Range"
      input: "train/gradients/fm/Sum_grad/range/start"
      input: "train/gradients/fm/Sum_grad/Size"
      input: "train/gradients/fm/Sum_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_grad/Fill/value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_grad/Fill"
      op: "Fill"
      input: "train/gradients/fm/Sum_grad/Shape_1"
      input: "train/gradients/fm/Sum_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "train/gradients/fm/Sum_grad/range"
      input: "train/gradients/fm/Sum_grad/mod"
      input: "train/gradients/fm/Sum_grad/Shape"
      input: "train/gradients/fm/Sum_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_grad/Maximum"
      op: "Maximum"
      input: "train/gradients/fm/Sum_grad/DynamicStitch"
      input: "train/gradients/fm/Sum_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_grad/floordiv"
      op: "FloorDiv"
      input: "train/gradients/fm/Sum_grad/Shape"
      input: "train/gradients/fm/Sum_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deepfm/concat_1_grad/tuple/control_dependency"
      input: "train/gradients/fm/Sum_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_grad/Tile"
      op: "Tile"
      input: "train/gradients/fm/Sum_grad/Reshape"
      input: "train/gradients/fm/Sum_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/mul_grad/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/mul_grad/Shape_1"
      op: "Shape"
      input: "fm/Sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/fm/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/fm/mul_grad/Shape"
      input: "train/gradients/fm/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/mul_grad/mul"
      op: "Mul"
      input: "train/gradients/deepfm/concat_1_grad/tuple/control_dependency_1"
      input: "fm/Sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/mul_grad/Sum"
      op: "Sum"
      input: "train/gradients/fm/mul_grad/mul"
      input: "train/gradients/fm/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/fm/mul_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/fm/mul_grad/Sum"
      input: "train/gradients/fm/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/mul_grad/mul_1"
      op: "Mul"
      input: "fm/mul/x"
      input: "train/gradients/deepfm/concat_1_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/mul_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/fm/mul_grad/mul_1"
      input: "train/gradients/fm/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/fm/mul_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/fm/mul_grad/Sum_1"
      input: "train/gradients/fm/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/mul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/fm/mul_grad/Reshape"
      input: "^train/gradients/fm/mul_grad/Reshape_1"
    }
    node {
      name: "train/gradients/fm/mul_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/fm/mul_grad/Reshape"
      input: "^train/gradients/fm/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/fm/mul_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/mul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/fm/mul_grad/Reshape_1"
      input: "^train/gradients/fm/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/fm/mul_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/Shape"
      op: "Shape"
      input: "deep/dropout_2/div"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/Shape_1"
      op: "Shape"
      input: "deep/dropout_2/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/deep/dropout_2/mul_grad/Shape"
      input: "train/gradients/deep/dropout_2/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/mul"
      op: "Mul"
      input: "train/gradients/deepfm/concat_1_grad/tuple/control_dependency_2"
      input: "deep/dropout_2/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/Sum"
      op: "Sum"
      input: "train/gradients/deep/dropout_2/mul_grad/mul"
      input: "train/gradients/deep/dropout_2/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deep/dropout_2/mul_grad/Sum"
      input: "train/gradients/deep/dropout_2/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/mul_1"
      op: "Mul"
      input: "deep/dropout_2/div"
      input: "train/gradients/deepfm/concat_1_grad/tuple/control_dependency_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/deep/dropout_2/mul_grad/mul_1"
      input: "train/gradients/deep/dropout_2/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/deep/dropout_2/mul_grad/Sum_1"
      input: "train/gradients/deep/dropout_2/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/dropout_2/mul_grad/Reshape"
      input: "^train/gradients/deep/dropout_2/mul_grad/Reshape_1"
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/dropout_2/mul_grad/Reshape"
      input: "^train/gradients/deep/dropout_2/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout_2/mul_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/mul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/dropout_2/mul_grad/Reshape_1"
      input: "^train/gradients/deep/dropout_2/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout_2/mul_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_grad/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\t\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_grad/Shape_1"
      op: "Shape"
      input: "fm/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/fm/Mul_grad/Shape"
      input: "train/gradients/fm/Mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_grad/mul"
      op: "Mul"
      input: "train/gradients/fm/Sum_grad/Tile"
      input: "fm/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_grad/Sum"
      op: "Sum"
      input: "train/gradients/fm/Mul_grad/mul"
      input: "train/gradients/fm/Mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/fm/Mul_grad/Sum"
      input: "train/gradients/fm/Mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_grad/mul_1"
      op: "Mul"
      input: "fm/feature_bias_0/read"
      input: "train/gradients/fm/Sum_grad/Tile"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/fm/Mul_grad/mul_1"
      input: "train/gradients/fm/Mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/fm/Mul_grad/Sum_1"
      input: "train/gradients/fm/Mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/fm/Mul_grad/Reshape"
      input: "^train/gradients/fm/Mul_grad/Reshape_1"
    }
    node {
      name: "train/gradients/fm/Mul_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/fm/Mul_grad/Reshape"
      input: "^train/gradients/fm/Mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/fm/Mul_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/fm/Mul_grad/Reshape_1"
      input: "^train/gradients/fm/Mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/fm/Mul_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sub_grad/Shape"
      op: "Shape"
      input: "fm/Square"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/fm/Sub_grad/Shape_1"
      op: "Shape"
      input: "fm/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/fm/Sub_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/fm/Sub_grad/Shape"
      input: "train/gradients/fm/Sub_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sub_grad/Sum"
      op: "Sum"
      input: "train/gradients/fm/mul_grad/tuple/control_dependency_1"
      input: "train/gradients/fm/Sub_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/fm/Sub_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/fm/Sub_grad/Sum"
      input: "train/gradients/fm/Sub_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sub_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/fm/mul_grad/tuple/control_dependency_1"
      input: "train/gradients/fm/Sub_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/fm/Sub_grad/Neg"
      op: "Neg"
      input: "train/gradients/fm/Sub_grad/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sub_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/fm/Sub_grad/Neg"
      input: "train/gradients/fm/Sub_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sub_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/fm/Sub_grad/Reshape"
      input: "^train/gradients/fm/Sub_grad/Reshape_1"
    }
    node {
      name: "train/gradients/fm/Sub_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/fm/Sub_grad/Reshape"
      input: "^train/gradients/fm/Sub_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/fm/Sub_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sub_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/fm/Sub_grad/Reshape_1"
      input: "^train/gradients/fm/Sub_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/fm/Sub_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/Shape"
      op: "Shape"
      input: "deep/Relu_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/deep/dropout_2/div_grad/Shape"
      input: "train/gradients/deep/dropout_2/div_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/RealDiv"
      op: "RealDiv"
      input: "train/gradients/deep/dropout_2/mul_grad/tuple/control_dependency"
      input: "deep/dropout_2/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/Sum"
      op: "Sum"
      input: "train/gradients/deep/dropout_2/div_grad/RealDiv"
      input: "train/gradients/deep/dropout_2/div_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deep/dropout_2/div_grad/Sum"
      input: "train/gradients/deep/dropout_2/div_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/Neg"
      op: "Neg"
      input: "deep/Relu_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/RealDiv_1"
      op: "RealDiv"
      input: "train/gradients/deep/dropout_2/div_grad/Neg"
      input: "deep/dropout_2/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/RealDiv_2"
      op: "RealDiv"
      input: "train/gradients/deep/dropout_2/div_grad/RealDiv_1"
      input: "deep/dropout_2/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/mul"
      op: "Mul"
      input: "train/gradients/deep/dropout_2/mul_grad/tuple/control_dependency"
      input: "train/gradients/deep/dropout_2/div_grad/RealDiv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/deep/dropout_2/div_grad/mul"
      input: "train/gradients/deep/dropout_2/div_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/deep/dropout_2/div_grad/Sum_1"
      input: "train/gradients/deep/dropout_2/div_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/dropout_2/div_grad/Reshape"
      input: "^train/gradients/deep/dropout_2/div_grad/Reshape_1"
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/dropout_2/div_grad/Reshape"
      input: "^train/gradients/deep/dropout_2/div_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout_2/div_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_2/div_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/dropout_2/div_grad/Reshape_1"
      input: "^train/gradients/deep/dropout_2/div_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout_2/div_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Square_grad/mul/x"
      op: "Const"
      input: "^train/gradients/fm/Sub_grad/tuple/control_dependency"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Square_grad/mul"
      op: "Mul"
      input: "train/gradients/fm/Square_grad/mul/x"
      input: "fm/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Square_grad/mul_1"
      op: "Mul"
      input: "train/gradients/fm/Sub_grad/tuple/control_dependency"
      input: "train/gradients/fm/Square_grad/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_2_grad/Shape"
      op: "Shape"
      input: "fm/Square_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_2_grad/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_2_grad/add"
      op: "Add"
      input: "fm/Sum_2/reduction_indices"
      input: "train/gradients/fm/Sum_2_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_2_grad/mod"
      op: "FloorMod"
      input: "train/gradients/fm/Sum_2_grad/add"
      input: "train/gradients/fm/Sum_2_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_2_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_2_grad/range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_2_grad/range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_2_grad/range"
      op: "Range"
      input: "train/gradients/fm/Sum_2_grad/range/start"
      input: "train/gradients/fm/Sum_2_grad/Size"
      input: "train/gradients/fm/Sum_2_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_2_grad/Fill/value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_2_grad/Fill"
      op: "Fill"
      input: "train/gradients/fm/Sum_2_grad/Shape_1"
      input: "train/gradients/fm/Sum_2_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_2_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "train/gradients/fm/Sum_2_grad/range"
      input: "train/gradients/fm/Sum_2_grad/mod"
      input: "train/gradients/fm/Sum_2_grad/Shape"
      input: "train/gradients/fm/Sum_2_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_2_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_2_grad/Maximum"
      op: "Maximum"
      input: "train/gradients/fm/Sum_2_grad/DynamicStitch"
      input: "train/gradients/fm/Sum_2_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_2_grad/floordiv"
      op: "FloorDiv"
      input: "train/gradients/fm/Sum_2_grad/Shape"
      input: "train/gradients/fm/Sum_2_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_2_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/fm/Sub_grad/tuple/control_dependency_1"
      input: "train/gradients/fm/Sum_2_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_2_grad/Tile"
      op: "Tile"
      input: "train/gradients/fm/Sum_2_grad/Reshape"
      input: "train/gradients/fm/Sum_2_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_1_grad/Shape"
      op: "Shape"
      input: "fm/Mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_1_grad/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_1_grad/add"
      op: "Add"
      input: "fm/Sum_1/reduction_indices"
      input: "train/gradients/fm/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_1_grad/mod"
      op: "FloorMod"
      input: "train/gradients/fm/Sum_1_grad/add"
      input: "train/gradients/fm/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_1_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_1_grad/range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_1_grad/range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_1_grad/range"
      op: "Range"
      input: "train/gradients/fm/Sum_1_grad/range/start"
      input: "train/gradients/fm/Sum_1_grad/Size"
      input: "train/gradients/fm/Sum_1_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_1_grad/Fill/value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_1_grad/Fill"
      op: "Fill"
      input: "train/gradients/fm/Sum_1_grad/Shape_1"
      input: "train/gradients/fm/Sum_1_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_1_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "train/gradients/fm/Sum_1_grad/range"
      input: "train/gradients/fm/Sum_1_grad/mod"
      input: "train/gradients/fm/Sum_1_grad/Shape"
      input: "train/gradients/fm/Sum_1_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_1_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_1_grad/Maximum"
      op: "Maximum"
      input: "train/gradients/fm/Sum_1_grad/DynamicStitch"
      input: "train/gradients/fm/Sum_1_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_1_grad/floordiv"
      op: "FloorDiv"
      input: "train/gradients/fm/Sum_1_grad/Shape"
      input: "train/gradients/fm/Sum_1_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_1_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/fm/Square_grad/mul_1"
      input: "train/gradients/fm/Sum_1_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Sum_1_grad/Tile"
      op: "Tile"
      input: "train/gradients/fm/Sum_1_grad/Reshape"
      input: "train/gradients/fm/Sum_1_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Square_1_grad/mul/x"
      op: "Const"
      input: "^train/gradients/fm/Sum_2_grad/Tile"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 2.0
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Square_1_grad/mul"
      op: "Mul"
      input: "train/gradients/fm/Square_1_grad/mul/x"
      input: "fm/Mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Square_1_grad/mul_1"
      op: "Mul"
      input: "train/gradients/fm/Sum_2_grad/Tile"
      input: "train/gradients/fm/Square_1_grad/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Relu_1_grad/ReluGrad"
      op: "ReluGrad"
      input: "train/gradients/deep/dropout_2/div_grad/tuple/control_dependency"
      input: "deep/Relu_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_1_grad/Shape"
      op: "Shape"
      input: "deep/MatMul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_1_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/deep/Add_1_grad/Shape"
      input: "train/gradients/deep/Add_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_1_grad/Sum"
      op: "Sum"
      input: "train/gradients/deep/Relu_1_grad/ReluGrad"
      input: "train/gradients/deep/Add_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_1_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deep/Add_1_grad/Sum"
      input: "train/gradients/deep/Add_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_1_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/deep/Relu_1_grad/ReluGrad"
      input: "train/gradients/deep/Add_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_1_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/deep/Add_1_grad/Sum_1"
      input: "train/gradients/deep/Add_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_1_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/Add_1_grad/Reshape"
      input: "^train/gradients/deep/Add_1_grad/Reshape_1"
    }
    node {
      name: "train/gradients/deep/Add_1_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/Add_1_grad/Reshape"
      input: "^train/gradients/deep/Add_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/Add_1_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_1_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/Add_1_grad/Reshape_1"
      input: "^train/gradients/deep/Add_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/Add_1_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/MatMul_1_grad/MatMul"
      op: "MatMul"
      input: "train/gradients/deep/Add_1_grad/tuple/control_dependency"
      input: "deep/weights_layer1/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "train/gradients/deep/MatMul_1_grad/MatMul_1"
      op: "MatMul"
      input: "deep/dropout_1/mul"
      input: "train/gradients/deep/Add_1_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/MatMul_1_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/MatMul_1_grad/MatMul"
      input: "^train/gradients/deep/MatMul_1_grad/MatMul_1"
    }
    node {
      name: "train/gradients/deep/MatMul_1_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/MatMul_1_grad/MatMul"
      input: "^train/gradients/deep/MatMul_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/MatMul_1_grad/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/MatMul_1_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/MatMul_1_grad/MatMul_1"
      input: "^train/gradients/deep/MatMul_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/MatMul_1_grad/MatMul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/Shape"
      op: "Shape"
      input: "deep/dropout_1/div"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/Shape_1"
      op: "Shape"
      input: "deep/dropout_1/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/deep/dropout_1/mul_grad/Shape"
      input: "train/gradients/deep/dropout_1/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/mul"
      op: "Mul"
      input: "train/gradients/deep/MatMul_1_grad/tuple/control_dependency"
      input: "deep/dropout_1/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/Sum"
      op: "Sum"
      input: "train/gradients/deep/dropout_1/mul_grad/mul"
      input: "train/gradients/deep/dropout_1/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deep/dropout_1/mul_grad/Sum"
      input: "train/gradients/deep/dropout_1/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/mul_1"
      op: "Mul"
      input: "deep/dropout_1/div"
      input: "train/gradients/deep/MatMul_1_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/deep/dropout_1/mul_grad/mul_1"
      input: "train/gradients/deep/dropout_1/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/deep/dropout_1/mul_grad/Sum_1"
      input: "train/gradients/deep/dropout_1/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/dropout_1/mul_grad/Reshape"
      input: "^train/gradients/deep/dropout_1/mul_grad/Reshape_1"
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/dropout_1/mul_grad/Reshape"
      input: "^train/gradients/deep/dropout_1/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout_1/mul_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/mul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/dropout_1/mul_grad/Reshape_1"
      input: "^train/gradients/deep/dropout_1/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout_1/mul_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/Shape"
      op: "Shape"
      input: "deep/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/deep/dropout_1/div_grad/Shape"
      input: "train/gradients/deep/dropout_1/div_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/RealDiv"
      op: "RealDiv"
      input: "train/gradients/deep/dropout_1/mul_grad/tuple/control_dependency"
      input: "deep/dropout_1/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/Sum"
      op: "Sum"
      input: "train/gradients/deep/dropout_1/div_grad/RealDiv"
      input: "train/gradients/deep/dropout_1/div_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deep/dropout_1/div_grad/Sum"
      input: "train/gradients/deep/dropout_1/div_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/Neg"
      op: "Neg"
      input: "deep/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/RealDiv_1"
      op: "RealDiv"
      input: "train/gradients/deep/dropout_1/div_grad/Neg"
      input: "deep/dropout_1/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/RealDiv_2"
      op: "RealDiv"
      input: "train/gradients/deep/dropout_1/div_grad/RealDiv_1"
      input: "deep/dropout_1/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/mul"
      op: "Mul"
      input: "train/gradients/deep/dropout_1/mul_grad/tuple/control_dependency"
      input: "train/gradients/deep/dropout_1/div_grad/RealDiv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/deep/dropout_1/div_grad/mul"
      input: "train/gradients/deep/dropout_1/div_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/deep/dropout_1/div_grad/Sum_1"
      input: "train/gradients/deep/dropout_1/div_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/dropout_1/div_grad/Reshape"
      input: "^train/gradients/deep/dropout_1/div_grad/Reshape_1"
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/dropout_1/div_grad/Reshape"
      input: "^train/gradients/deep/dropout_1/div_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout_1/div_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout_1/div_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/dropout_1/div_grad/Reshape_1"
      input: "^train/gradients/deep/dropout_1/div_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout_1/div_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "train/gradients/deep/dropout_1/div_grad/tuple/control_dependency"
      input: "deep/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_grad/Shape"
      op: "Shape"
      input: "deep/MatMul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/deep/Add_grad/Shape"
      input: "train/gradients/deep/Add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_grad/Sum"
      op: "Sum"
      input: "train/gradients/deep/Relu_grad/ReluGrad"
      input: "train/gradients/deep/Add_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deep/Add_grad/Sum"
      input: "train/gradients/deep/Add_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/deep/Relu_grad/ReluGrad"
      input: "train/gradients/deep/Add_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/deep/Add_grad/Sum_1"
      input: "train/gradients/deep/Add_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/Add_grad/Reshape"
      input: "^train/gradients/deep/Add_grad/Reshape_1"
    }
    node {
      name: "train/gradients/deep/Add_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/Add_grad/Reshape"
      input: "^train/gradients/deep/Add_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/Add_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Add_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/Add_grad/Reshape_1"
      input: "^train/gradients/deep/Add_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/Add_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/MatMul_grad/MatMul"
      op: "MatMul"
      input: "train/gradients/deep/Add_grad/tuple/control_dependency"
      input: "deep/weights_layer0/read"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "train/gradients/deep/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "deep/dropout/mul"
      input: "train/gradients/deep/Add_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/MatMul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/MatMul_grad/MatMul"
      input: "^train/gradients/deep/MatMul_grad/MatMul_1"
    }
    node {
      name: "train/gradients/deep/MatMul_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/MatMul_grad/MatMul"
      input: "^train/gradients/deep/MatMul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/MatMul_grad/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/MatMul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/MatMul_grad/MatMul_1"
      input: "^train/gradients/deep/MatMul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/MatMul_grad/MatMul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/Shape"
      op: "Shape"
      input: "deep/dropout/div"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/Shape_1"
      op: "Shape"
      input: "deep/dropout/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/deep/dropout/mul_grad/Shape"
      input: "train/gradients/deep/dropout/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/mul"
      op: "Mul"
      input: "train/gradients/deep/MatMul_grad/tuple/control_dependency"
      input: "deep/dropout/Floor"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/Sum"
      op: "Sum"
      input: "train/gradients/deep/dropout/mul_grad/mul"
      input: "train/gradients/deep/dropout/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deep/dropout/mul_grad/Sum"
      input: "train/gradients/deep/dropout/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/mul_1"
      op: "Mul"
      input: "deep/dropout/div"
      input: "train/gradients/deep/MatMul_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/deep/dropout/mul_grad/mul_1"
      input: "train/gradients/deep/dropout/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/deep/dropout/mul_grad/Sum_1"
      input: "train/gradients/deep/dropout/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/dropout/mul_grad/Reshape"
      input: "^train/gradients/deep/dropout/mul_grad/Reshape_1"
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/dropout/mul_grad/Reshape"
      input: "^train/gradients/deep/dropout/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout/mul_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/mul_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/dropout/mul_grad/Reshape_1"
      input: "^train/gradients/deep/dropout/mul_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout/mul_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/Shape"
      op: "Shape"
      input: "deep/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/Shape_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/deep/dropout/div_grad/Shape"
      input: "train/gradients/deep/dropout/div_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/RealDiv"
      op: "RealDiv"
      input: "train/gradients/deep/dropout/mul_grad/tuple/control_dependency"
      input: "deep/dropout/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/Sum"
      op: "Sum"
      input: "train/gradients/deep/dropout/div_grad/RealDiv"
      input: "train/gradients/deep/dropout/div_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deep/dropout/div_grad/Sum"
      input: "train/gradients/deep/dropout/div_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/Neg"
      op: "Neg"
      input: "deep/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/RealDiv_1"
      op: "RealDiv"
      input: "train/gradients/deep/dropout/div_grad/Neg"
      input: "deep/dropout/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/RealDiv_2"
      op: "RealDiv"
      input: "train/gradients/deep/dropout/div_grad/RealDiv_1"
      input: "deep/dropout/keep_prob"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/mul"
      op: "Mul"
      input: "train/gradients/deep/dropout/mul_grad/tuple/control_dependency"
      input: "train/gradients/deep/dropout/div_grad/RealDiv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/deep/dropout/div_grad/mul"
      input: "train/gradients/deep/dropout/div_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/deep/dropout/div_grad/Sum_1"
      input: "train/gradients/deep/dropout/div_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/deep/dropout/div_grad/Reshape"
      input: "^train/gradients/deep/dropout/div_grad/Reshape_1"
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/deep/dropout/div_grad/Reshape"
      input: "^train/gradients/deep/dropout/div_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout/div_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 90
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/dropout/div_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/deep/dropout/div_grad/Reshape_1"
      input: "^train/gradients/deep/dropout/div_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/deep/dropout/div_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/deep/Reshape_grad/Shape"
      op: "Shape"
      input: "fm/Mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/deep/Reshape_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/deep/dropout/div_grad/tuple/control_dependency"
      input: "train/gradients/deep/Reshape_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/AddN"
      op: "AddN"
      input: "train/gradients/fm/Sum_1_grad/Tile"
      input: "train/gradients/fm/Square_1_grad/mul_1"
      input: "train/gradients/deep/Reshape_grad/Reshape"
      attr {
        key: "N"
        value {
          i: 3
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/fm/Sum_1_grad/Tile"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/Shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\t\000\000\000\n\000\000\000"
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/Shape_1"
      op: "Shape"
      input: "fm/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "train/gradients/fm/Mul_1_grad/Shape"
      input: "train/gradients/fm/Mul_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/mul"
      op: "Mul"
      input: "train/gradients/AddN"
      input: "fm/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/Sum"
      op: "Sum"
      input: "train/gradients/fm/Mul_1_grad/mul"
      input: "train/gradients/fm/Mul_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/Reshape"
      op: "Reshape"
      input: "train/gradients/fm/Mul_1_grad/Sum"
      input: "train/gradients/fm/Mul_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/mul_1"
      op: "Mul"
      input: "fm/feature_embeddings/read"
      input: "train/gradients/AddN"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/Sum_1"
      op: "Sum"
      input: "train/gradients/fm/Mul_1_grad/mul_1"
      input: "train/gradients/fm/Mul_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/Reshape_1"
      op: "Reshape"
      input: "train/gradients/fm/Mul_1_grad/Sum_1"
      input: "train/gradients/fm/Mul_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/tuple/group_deps"
      op: "NoOp"
      input: "^train/gradients/fm/Mul_1_grad/Reshape"
      input: "^train/gradients/fm/Mul_1_grad/Reshape_1"
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/tuple/control_dependency"
      op: "Identity"
      input: "train/gradients/fm/Mul_1_grad/Reshape"
      input: "^train/gradients/fm/Mul_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/fm/Mul_1_grad/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "train/gradients/fm/Mul_1_grad/tuple/control_dependency_1"
      op: "Identity"
      input: "train/gradients/fm/Mul_1_grad/Reshape_1"
      input: "^train/gradients/fm/Mul_1_grad/tuple/group_deps"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@train/gradients/fm/Mul_1_grad/Reshape_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "train/beta1_power/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.8999999761581421
          }
        }
      }
    }
    node {
      name: "train/beta1_power"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "train/beta1_power/Assign"
      op: "Assign"
      input: "train/beta1_power"
      input: "train/beta1_power/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "train/beta1_power/read"
      op: "Identity"
      input: "train/beta1_power"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/beta2_power/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9990000128746033
          }
        }
      }
    }
    node {
      name: "train/beta2_power"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "train/beta2_power/Assign"
      op: "Assign"
      input: "train/beta2_power"
      input: "train/beta2_power/initial_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "train/beta2_power/read"
      op: "Identity"
      input: "train/beta2_power"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "fm/feature_embeddings/Adam/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "fm/feature_embeddings/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 9
            }
            dim {
              size: 10
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "fm/feature_embeddings/Adam/Assign"
      op: "Assign"
      input: "fm/feature_embeddings/Adam"
      input: "fm/feature_embeddings/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "fm/feature_embeddings/Adam/read"
      op: "Identity"
      input: "fm/feature_embeddings/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/feature_embeddings/Adam_1/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "fm/feature_embeddings/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 9
            }
            dim {
              size: 10
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "fm/feature_embeddings/Adam_1/Assign"
      op: "Assign"
      input: "fm/feature_embeddings/Adam_1"
      input: "fm/feature_embeddings/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "fm/feature_embeddings/Adam_1/read"
      op: "Identity"
      input: "fm/feature_embeddings/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/feature_bias_0/Adam/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "fm/feature_bias_0/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 9
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "fm/feature_bias_0/Adam/Assign"
      op: "Assign"
      input: "fm/feature_bias_0/Adam"
      input: "fm/feature_bias_0/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "fm/feature_bias_0/Adam/read"
      op: "Identity"
      input: "fm/feature_bias_0/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "fm/feature_bias_0/Adam_1/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "fm/feature_bias_0/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 9
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "fm/feature_bias_0/Adam_1/Assign"
      op: "Assign"
      input: "fm/feature_bias_0/Adam_1"
      input: "fm/feature_bias_0/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "fm/feature_bias_0/Adam_1/read"
      op: "Identity"
      input: "fm/feature_bias_0/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_layer0/Adam/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/weights_layer0/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 90
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_layer0/Adam/Assign"
      op: "Assign"
      input: "deep/weights_layer0/Adam"
      input: "deep/weights_layer0/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_layer0/Adam/read"
      op: "Identity"
      input: "deep/weights_layer0/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_layer0/Adam_1/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/weights_layer0/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 90
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_layer0/Adam_1/Assign"
      op: "Assign"
      input: "deep/weights_layer0/Adam_1"
      input: "deep/weights_layer0/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_layer0/Adam_1/read"
      op: "Identity"
      input: "deep/weights_layer0/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_bias0/Adam/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/weights_bias0/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_bias0/Adam/Assign"
      op: "Assign"
      input: "deep/weights_bias0/Adam"
      input: "deep/weights_bias0/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_bias0/Adam/read"
      op: "Identity"
      input: "deep/weights_bias0/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_bias0/Adam_1/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/weights_bias0/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_bias0/Adam_1/Assign"
      op: "Assign"
      input: "deep/weights_bias0/Adam_1"
      input: "deep/weights_bias0/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_bias0/Adam_1/read"
      op: "Identity"
      input: "deep/weights_bias0/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_layer1/Adam/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/weights_layer1/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_layer1/Adam/Assign"
      op: "Assign"
      input: "deep/weights_layer1/Adam"
      input: "deep/weights_layer1/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_layer1/Adam/read"
      op: "Identity"
      input: "deep/weights_layer1/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_layer1/Adam_1/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/weights_layer1/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_layer1/Adam_1/Assign"
      op: "Assign"
      input: "deep/weights_layer1/Adam_1"
      input: "deep/weights_layer1/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_layer1/Adam_1/read"
      op: "Identity"
      input: "deep/weights_layer1/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_bias1/Adam/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/weights_bias1/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_bias1/Adam/Assign"
      op: "Assign"
      input: "deep/weights_bias1/Adam"
      input: "deep/weights_bias1/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_bias1/Adam/read"
      op: "Identity"
      input: "deep/weights_bias1/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deep/weights_bias1/Adam_1/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deep/weights_bias1/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deep/weights_bias1/Adam_1/Assign"
      op: "Assign"
      input: "deep/weights_bias1/Adam_1"
      input: "deep/weights_bias1/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deep/weights_bias1/Adam_1/read"
      op: "Identity"
      input: "deep/weights_bias1/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/Adam/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 83
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/Adam/Assign"
      op: "Assign"
      input: "deepfm/concat_projection0/Adam"
      input: "deepfm/concat_projection0/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/Adam/read"
      op: "Identity"
      input: "deepfm/concat_projection0/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/Adam_1/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 83
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/Adam_1/Assign"
      op: "Assign"
      input: "deepfm/concat_projection0/Adam_1"
      input: "deepfm/concat_projection0/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deepfm/concat_projection0/Adam_1/read"
      op: "Identity"
      input: "deepfm/concat_projection0/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/Adam/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/Adam"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/Adam/Assign"
      op: "Assign"
      input: "deepfm/concat_bias0/Adam"
      input: "deepfm/concat_bias0/Adam/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/Adam/read"
      op: "Identity"
      input: "deepfm/concat_bias0/Adam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/Adam_1/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/Adam_1"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/Adam_1/Assign"
      op: "Assign"
      input: "deepfm/concat_bias0/Adam_1"
      input: "deepfm/concat_bias0/Adam_1/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "deepfm/concat_bias0/Adam_1/read"
      op: "Identity"
      input: "deepfm/concat_bias0/Adam_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/Adam/learning_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.009999999776482582
          }
        }
      }
    }
    node {
      name: "train/Adam/beta1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.8999999761581421
          }
        }
      }
    }
    node {
      name: "train/Adam/beta2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.9990000128746033
          }
        }
      }
    }
    node {
      name: "train/Adam/epsilon"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.99999993922529e-09
          }
        }
      }
    }
    node {
      name: "train/Adam/update_fm/feature_embeddings/ApplyAdam"
      op: "ApplyAdam"
      input: "fm/feature_embeddings"
      input: "fm/feature_embeddings/Adam"
      input: "fm/feature_embeddings/Adam_1"
      input: "train/beta1_power/read"
      input: "train/beta2_power/read"
      input: "train/Adam/learning_rate"
      input: "train/Adam/beta1"
      input: "train/Adam/beta2"
      input: "train/Adam/epsilon"
      input: "train/gradients/fm/Mul_1_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/Adam/update_fm/feature_bias_0/ApplyAdam"
      op: "ApplyAdam"
      input: "fm/feature_bias_0"
      input: "fm/feature_bias_0/Adam"
      input: "fm/feature_bias_0/Adam_1"
      input: "train/beta1_power/read"
      input: "train/beta2_power/read"
      input: "train/Adam/learning_rate"
      input: "train/Adam/beta1"
      input: "train/Adam/beta2"
      input: "train/Adam/epsilon"
      input: "train/gradients/fm/Mul_grad/tuple/control_dependency"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/Adam/update_deep/weights_layer0/ApplyAdam"
      op: "ApplyAdam"
      input: "deep/weights_layer0"
      input: "deep/weights_layer0/Adam"
      input: "deep/weights_layer0/Adam_1"
      input: "train/beta1_power/read"
      input: "train/beta2_power/read"
      input: "train/Adam/learning_rate"
      input: "train/Adam/beta1"
      input: "train/Adam/beta2"
      input: "train/Adam/epsilon"
      input: "train/gradients/deep/MatMul_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/Adam/update_deep/weights_bias0/ApplyAdam"
      op: "ApplyAdam"
      input: "deep/weights_bias0"
      input: "deep/weights_bias0/Adam"
      input: "deep/weights_bias0/Adam_1"
      input: "train/beta1_power/read"
      input: "train/beta2_power/read"
      input: "train/Adam/learning_rate"
      input: "train/Adam/beta1"
      input: "train/Adam/beta2"
      input: "train/Adam/epsilon"
      input: "train/gradients/deep/Add_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/Adam/update_deep/weights_layer1/ApplyAdam"
      op: "ApplyAdam"
      input: "deep/weights_layer1"
      input: "deep/weights_layer1/Adam"
      input: "deep/weights_layer1/Adam_1"
      input: "train/beta1_power/read"
      input: "train/beta2_power/read"
      input: "train/Adam/learning_rate"
      input: "train/Adam/beta1"
      input: "train/Adam/beta2"
      input: "train/Adam/epsilon"
      input: "train/gradients/deep/MatMul_1_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/Adam/update_deep/weights_bias1/ApplyAdam"
      op: "ApplyAdam"
      input: "deep/weights_bias1"
      input: "deep/weights_bias1/Adam"
      input: "deep/weights_bias1/Adam_1"
      input: "train/beta1_power/read"
      input: "train/beta2_power/read"
      input: "train/Adam/learning_rate"
      input: "train/Adam/beta1"
      input: "train/Adam/beta2"
      input: "train/Adam/epsilon"
      input: "train/gradients/deep/Add_1_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/Adam/update_deepfm/concat_projection0/ApplyAdam"
      op: "ApplyAdam"
      input: "deepfm/concat_projection0"
      input: "deepfm/concat_projection0/Adam"
      input: "deepfm/concat_projection0/Adam_1"
      input: "train/beta1_power/read"
      input: "train/beta2_power/read"
      input: "train/Adam/learning_rate"
      input: "train/Adam/beta1"
      input: "train/Adam/beta2"
      input: "train/Adam/epsilon"
      input: "train/gradients/deepfm/MatMul_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/Adam/update_deepfm/concat_bias0/ApplyAdam"
      op: "ApplyAdam"
      input: "deepfm/concat_bias0"
      input: "deepfm/concat_bias0/Adam"
      input: "deepfm/concat_bias0/Adam_1"
      input: "train/beta1_power/read"
      input: "train/beta2_power/read"
      input: "train/Adam/learning_rate"
      input: "train/Adam/beta1"
      input: "train/Adam/beta2"
      input: "train/Adam/epsilon"
      input: "train/gradients/deepfm/out_grad/tuple/control_dependency_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "use_nesterov"
        value {
          b: false
        }
      }
    }
    node {
      name: "train/Adam/mul"
      op: "Mul"
      input: "train/beta1_power/read"
      input: "train/Adam/beta1"
      input: "^train/Adam/update_fm/feature_embeddings/ApplyAdam"
      input: "^train/Adam/update_fm/feature_bias_0/ApplyAdam"
      input: "^train/Adam/update_deep/weights_layer0/ApplyAdam"
      input: "^train/Adam/update_deep/weights_bias0/ApplyAdam"
      input: "^train/Adam/update_deep/weights_layer1/ApplyAdam"
      input: "^train/Adam/update_deep/weights_bias1/ApplyAdam"
      input: "^train/Adam/update_deepfm/concat_projection0/ApplyAdam"
      input: "^train/Adam/update_deepfm/concat_bias0/ApplyAdam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/Adam/Assign"
      op: "Assign"
      input: "train/beta1_power"
      input: "train/Adam/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "train/Adam/mul_1"
      op: "Mul"
      input: "train/beta2_power/read"
      input: "train/Adam/beta2"
      input: "^train/Adam/update_fm/feature_embeddings/ApplyAdam"
      input: "^train/Adam/update_fm/feature_bias_0/ApplyAdam"
      input: "^train/Adam/update_deep/weights_layer0/ApplyAdam"
      input: "^train/Adam/update_deep/weights_bias0/ApplyAdam"
      input: "^train/Adam/update_deep/weights_layer1/ApplyAdam"
      input: "^train/Adam/update_deep/weights_bias1/ApplyAdam"
      input: "^train/Adam/update_deepfm/concat_projection0/ApplyAdam"
      input: "^train/Adam/update_deepfm/concat_bias0/ApplyAdam"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "train/Adam/Assign_1"
      op: "Assign"
      input: "train/beta2_power"
      input: "train/Adam/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: false
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "train/Adam"
      op: "NoOp"
      input: "^train/Adam/update_fm/feature_embeddings/ApplyAdam"
      input: "^train/Adam/update_fm/feature_bias_0/ApplyAdam"
      input: "^train/Adam/update_deep/weights_layer0/ApplyAdam"
      input: "^train/Adam/update_deep/weights_bias0/ApplyAdam"
      input: "^train/Adam/update_deep/weights_layer1/ApplyAdam"
      input: "^train/Adam/update_deep/weights_bias1/ApplyAdam"
      input: "^train/Adam/update_deepfm/concat_projection0/ApplyAdam"
      input: "^train/Adam/update_deepfm/concat_bias0/ApplyAdam"
      input: "^train/Adam/Assign"
      input: "^train/Adam/Assign_1"
    }
    node {
      name: "train/init"
      op: "NoOp"
      input: "^fm/feature_embeddings/Assign"
      input: "^fm/feature_bias_0/Assign"
      input: "^deep/weights_layer0/Assign"
      input: "^deep/weights_bias0/Assign"
      input: "^deep/weights_layer1/Assign"
      input: "^deep/weights_bias1/Assign"
      input: "^deepfm/concat_projection0/Assign"
      input: "^deepfm/concat_bias0/Assign"
      input: "^train/beta1_power/Assign"
      input: "^train/beta2_power/Assign"
      input: "^fm/feature_embeddings/Adam/Assign"
      input: "^fm/feature_embeddings/Adam_1/Assign"
      input: "^fm/feature_bias_0/Adam/Assign"
      input: "^fm/feature_bias_0/Adam_1/Assign"
      input: "^deep/weights_layer0/Adam/Assign"
      input: "^deep/weights_layer0/Adam_1/Assign"
      input: "^deep/weights_bias0/Adam/Assign"
      input: "^deep/weights_bias0/Adam_1/Assign"
      input: "^deep/weights_layer1/Adam/Assign"
      input: "^deep/weights_layer1/Adam_1/Assign"
      input: "^deep/weights_bias1/Adam/Assign"
      input: "^deep/weights_bias1/Adam_1/Assign"
      input: "^deepfm/concat_projection0/Adam/Assign"
      input: "^deepfm/concat_projection0/Adam_1/Assign"
      input: "^deepfm/concat_bias0/Adam/Assign"
      input: "^deepfm/concat_bias0/Adam_1/Assign"
    }
    node {
      name: "save/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 26
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 26
              }
            }
            string_val: "deep/weights_bias0"
            string_val: "deep/weights_bias0/Adam"
            string_val: "deep/weights_bias0/Adam_1"
            string_val: "deep/weights_bias1"
            string_val: "deep/weights_bias1/Adam"
            string_val: "deep/weights_bias1/Adam_1"
            string_val: "deep/weights_layer0"
            string_val: "deep/weights_layer0/Adam"
            string_val: "deep/weights_layer0/Adam_1"
            string_val: "deep/weights_layer1"
            string_val: "deep/weights_layer1/Adam"
            string_val: "deep/weights_layer1/Adam_1"
            string_val: "deepfm/concat_bias0"
            string_val: "deepfm/concat_bias0/Adam"
            string_val: "deepfm/concat_bias0/Adam_1"
            string_val: "deepfm/concat_projection0"
            string_val: "deepfm/concat_projection0/Adam"
            string_val: "deepfm/concat_projection0/Adam_1"
            string_val: "fm/feature_bias_0"
            string_val: "fm/feature_bias_0/Adam"
            string_val: "fm/feature_bias_0/Adam_1"
            string_val: "fm/feature_embeddings"
            string_val: "fm/feature_embeddings/Adam"
            string_val: "fm/feature_embeddings/Adam_1"
            string_val: "train/beta1_power"
            string_val: "train/beta2_power"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 26
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 26
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/Const"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "deep/weights_bias0"
      input: "deep/weights_bias0/Adam"
      input: "deep/weights_bias0/Adam_1"
      input: "deep/weights_bias1"
      input: "deep/weights_bias1/Adam"
      input: "deep/weights_bias1/Adam_1"
      input: "deep/weights_layer0"
      input: "deep/weights_layer0/Adam"
      input: "deep/weights_layer0/Adam_1"
      input: "deep/weights_layer1"
      input: "deep/weights_layer1/Adam"
      input: "deep/weights_layer1/Adam_1"
      input: "deepfm/concat_bias0"
      input: "deepfm/concat_bias0/Adam"
      input: "deepfm/concat_bias0/Adam_1"
      input: "deepfm/concat_projection0"
      input: "deepfm/concat_projection0/Adam"
      input: "deepfm/concat_projection0/Adam_1"
      input: "fm/feature_bias_0"
      input: "fm/feature_bias_0/Adam"
      input: "fm/feature_bias_0/Adam_1"
      input: "fm/feature_embeddings"
      input: "fm/feature_embeddings/Adam"
      input: "fm/feature_embeddings/Adam_1"
      input: "train/beta1_power"
      input: "train/beta2_power"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/Const"
      input: "^save/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/Const"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias0"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign"
      op: "Assign"
      input: "deep/weights_bias0"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_1/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias0/Adam"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_1/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_1"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_1/tensor_names"
      input: "save/RestoreV2_1/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_1"
      op: "Assign"
      input: "deep/weights_bias0/Adam"
      input: "save/RestoreV2_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias0/Adam_1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_2/tensor_names"
      input: "save/RestoreV2_2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_2"
      op: "Assign"
      input: "deep/weights_bias0/Adam_1"
      input: "save/RestoreV2_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_3/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_3/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_3"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_3/tensor_names"
      input: "save/RestoreV2_3/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_3"
      op: "Assign"
      input: "deep/weights_bias1"
      input: "save/RestoreV2_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_4/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias1/Adam"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_4/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_4"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_4/tensor_names"
      input: "save/RestoreV2_4/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_4"
      op: "Assign"
      input: "deep/weights_bias1/Adam"
      input: "save/RestoreV2_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_5/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias1/Adam_1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_5/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_5"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_5/tensor_names"
      input: "save/RestoreV2_5/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_5"
      op: "Assign"
      input: "deep/weights_bias1/Adam_1"
      input: "save/RestoreV2_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_6/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer0"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_6/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_6"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_6/tensor_names"
      input: "save/RestoreV2_6/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_6"
      op: "Assign"
      input: "deep/weights_layer0"
      input: "save/RestoreV2_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_7/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer0/Adam"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_7/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_7"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_7/tensor_names"
      input: "save/RestoreV2_7/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_7"
      op: "Assign"
      input: "deep/weights_layer0/Adam"
      input: "save/RestoreV2_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_8/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer0/Adam_1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_8/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_8"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_8/tensor_names"
      input: "save/RestoreV2_8/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_8"
      op: "Assign"
      input: "deep/weights_layer0/Adam_1"
      input: "save/RestoreV2_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_9/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_9/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_9"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_9/tensor_names"
      input: "save/RestoreV2_9/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_9"
      op: "Assign"
      input: "deep/weights_layer1"
      input: "save/RestoreV2_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_10/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer1/Adam"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_10/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_10"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_10/tensor_names"
      input: "save/RestoreV2_10/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_10"
      op: "Assign"
      input: "deep/weights_layer1/Adam"
      input: "save/RestoreV2_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_11/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer1/Adam_1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_11/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_11"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_11/tensor_names"
      input: "save/RestoreV2_11/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_11"
      op: "Assign"
      input: "deep/weights_layer1/Adam_1"
      input: "save/RestoreV2_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_12/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_bias0"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_12/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_12"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_12/tensor_names"
      input: "save/RestoreV2_12/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_12"
      op: "Assign"
      input: "deepfm/concat_bias0"
      input: "save/RestoreV2_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_13/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_bias0/Adam"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_13/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_13"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_13/tensor_names"
      input: "save/RestoreV2_13/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_13"
      op: "Assign"
      input: "deepfm/concat_bias0/Adam"
      input: "save/RestoreV2_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_14/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_bias0/Adam_1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_14/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_14"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_14/tensor_names"
      input: "save/RestoreV2_14/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_14"
      op: "Assign"
      input: "deepfm/concat_bias0/Adam_1"
      input: "save/RestoreV2_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_15/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_projection0"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_15/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_15"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_15/tensor_names"
      input: "save/RestoreV2_15/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_15"
      op: "Assign"
      input: "deepfm/concat_projection0"
      input: "save/RestoreV2_15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_16/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_projection0/Adam"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_16/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_16"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_16/tensor_names"
      input: "save/RestoreV2_16/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_16"
      op: "Assign"
      input: "deepfm/concat_projection0/Adam"
      input: "save/RestoreV2_16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_17/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_projection0/Adam_1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_17/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_17"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_17/tensor_names"
      input: "save/RestoreV2_17/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_17"
      op: "Assign"
      input: "deepfm/concat_projection0/Adam_1"
      input: "save/RestoreV2_17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_18/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_bias_0"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_18/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_18"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_18/tensor_names"
      input: "save/RestoreV2_18/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_18"
      op: "Assign"
      input: "fm/feature_bias_0"
      input: "save/RestoreV2_18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_19/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_bias_0/Adam"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_19/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_19"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_19/tensor_names"
      input: "save/RestoreV2_19/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_19"
      op: "Assign"
      input: "fm/feature_bias_0/Adam"
      input: "save/RestoreV2_19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_20/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_bias_0/Adam_1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_20/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_20"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_20/tensor_names"
      input: "save/RestoreV2_20/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_20"
      op: "Assign"
      input: "fm/feature_bias_0/Adam_1"
      input: "save/RestoreV2_20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_21/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_embeddings"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_21/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_21"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_21/tensor_names"
      input: "save/RestoreV2_21/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_21"
      op: "Assign"
      input: "fm/feature_embeddings"
      input: "save/RestoreV2_21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_22/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_embeddings/Adam"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_22/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_22"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_22/tensor_names"
      input: "save/RestoreV2_22/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_22"
      op: "Assign"
      input: "fm/feature_embeddings/Adam"
      input: "save/RestoreV2_22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_23/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_embeddings/Adam_1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_23/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_23"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_23/tensor_names"
      input: "save/RestoreV2_23/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_23"
      op: "Assign"
      input: "fm/feature_embeddings/Adam_1"
      input: "save/RestoreV2_23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_24/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "train/beta1_power"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_24/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_24"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_24/tensor_names"
      input: "save/RestoreV2_24/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_24"
      op: "Assign"
      input: "train/beta1_power"
      input: "save/RestoreV2_24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/RestoreV2_25/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "train/beta2_power"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_25/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_25"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_25/tensor_names"
      input: "save/RestoreV2_25/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Assign_25"
      op: "Assign"
      input: "train/beta2_power"
      input: "save/RestoreV2_25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/Assign"
      input: "^save/Assign_1"
      input: "^save/Assign_2"
      input: "^save/Assign_3"
      input: "^save/Assign_4"
      input: "^save/Assign_5"
      input: "^save/Assign_6"
      input: "^save/Assign_7"
      input: "^save/Assign_8"
      input: "^save/Assign_9"
      input: "^save/Assign_10"
      input: "^save/Assign_11"
      input: "^save/Assign_12"
      input: "^save/Assign_13"
      input: "^save/Assign_14"
      input: "^save/Assign_15"
      input: "^save/Assign_16"
      input: "^save/Assign_17"
      input: "^save/Assign_18"
      input: "^save/Assign_19"
      input: "^save/Assign_20"
      input: "^save/Assign_21"
      input: "^save/Assign_22"
      input: "^save/Assign_23"
      input: "^save/Assign_24"
      input: "^save/Assign_25"
    }
    node {
      name: "init"
      op: "NoOp"
      input: "^DeepFm_Estimate/auc/true_positives/Assign"
      input: "^DeepFm_Estimate/auc/false_negatives/Assign"
      input: "^DeepFm_Estimate/auc/true_negatives/Assign"
      input: "^DeepFm_Estimate/auc/false_positives/Assign"
    }
    node {
      name: "Merge/MergeSummary"
      op: "MergeSummary"
      input: "deep_fm/score"
      input: "DeepFm_Estimate/loss"
      input: "DeepFm_Estimate/auc1"
      input: "DeepFm_Estimate/auc2"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save_1/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_43eb0e45dea8453aa138f27ca326d0aa/part"
          }
        }
      }
    }
    node {
      name: "save_1/StringJoin"
      op: "StringJoin"
      input: "save_1/Const"
      input: "save_1/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save_1/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save_1/ShardedFilename/shard"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save_1/ShardedFilename"
      op: "ShardedFilename"
      input: "save_1/StringJoin"
      input: "save_1/ShardedFilename/shard"
      input: "save_1/num_shards"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 26
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 26
              }
            }
            string_val: "deep/weights_bias0"
            string_val: "deep/weights_bias0/Adam"
            string_val: "deep/weights_bias0/Adam_1"
            string_val: "deep/weights_bias1"
            string_val: "deep/weights_bias1/Adam"
            string_val: "deep/weights_bias1/Adam_1"
            string_val: "deep/weights_layer0"
            string_val: "deep/weights_layer0/Adam"
            string_val: "deep/weights_layer0/Adam_1"
            string_val: "deep/weights_layer1"
            string_val: "deep/weights_layer1/Adam"
            string_val: "deep/weights_layer1/Adam_1"
            string_val: "deepfm/concat_bias0"
            string_val: "deepfm/concat_bias0/Adam"
            string_val: "deepfm/concat_bias0/Adam_1"
            string_val: "deepfm/concat_projection0"
            string_val: "deepfm/concat_projection0/Adam"
            string_val: "deepfm/concat_projection0/Adam_1"
            string_val: "fm/feature_bias_0"
            string_val: "fm/feature_bias_0/Adam"
            string_val: "fm/feature_bias_0/Adam_1"
            string_val: "fm/feature_embeddings"
            string_val: "fm/feature_embeddings/Adam"
            string_val: "fm/feature_embeddings/Adam_1"
            string_val: "train/beta1_power"
            string_val: "train/beta2_power"
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 26
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 26
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/SaveV2"
      op: "SaveV2"
      input: "save_1/ShardedFilename"
      input: "save_1/SaveV2/tensor_names"
      input: "save_1/SaveV2/shape_and_slices"
      input: "deep/weights_bias0"
      input: "deep/weights_bias0/Adam"
      input: "deep/weights_bias0/Adam_1"
      input: "deep/weights_bias1"
      input: "deep/weights_bias1/Adam"
      input: "deep/weights_bias1/Adam_1"
      input: "deep/weights_layer0"
      input: "deep/weights_layer0/Adam"
      input: "deep/weights_layer0/Adam_1"
      input: "deep/weights_layer1"
      input: "deep/weights_layer1/Adam"
      input: "deep/weights_layer1/Adam_1"
      input: "deepfm/concat_bias0"
      input: "deepfm/concat_bias0/Adam"
      input: "deepfm/concat_bias0/Adam_1"
      input: "deepfm/concat_projection0"
      input: "deepfm/concat_projection0/Adam"
      input: "deepfm/concat_projection0/Adam_1"
      input: "fm/feature_bias_0"
      input: "fm/feature_bias_0/Adam"
      input: "fm/feature_bias_0/Adam_1"
      input: "fm/feature_embeddings"
      input: "fm/feature_embeddings/Adam"
      input: "fm/feature_embeddings/Adam_1"
      input: "train/beta1_power"
      input: "train/beta2_power"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/control_dependency"
      op: "Identity"
      input: "save_1/ShardedFilename"
      input: "^save_1/SaveV2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save_1/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save_1/ShardedFilename"
      input: "^save_1/control_dependency"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save_1/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save_1/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save_1/Const"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/Identity"
      op: "Identity"
      input: "save_1/Const"
      input: "^save_1/control_dependency"
      input: "^save_1/MergeV2Checkpoints"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias0"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2/tensor_names"
      input: "save_1/RestoreV2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign"
      op: "Assign"
      input: "deep/weights_bias0"
      input: "save_1/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_1/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias0/Adam"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_1/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_1"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_1/tensor_names"
      input: "save_1/RestoreV2_1/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_1"
      op: "Assign"
      input: "deep/weights_bias0/Adam"
      input: "save_1/RestoreV2_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_2/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias0/Adam_1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_2/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_2"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_2/tensor_names"
      input: "save_1/RestoreV2_2/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_2"
      op: "Assign"
      input: "deep/weights_bias0/Adam_1"
      input: "save_1/RestoreV2_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_3/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_3/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_3"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_3/tensor_names"
      input: "save_1/RestoreV2_3/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_3"
      op: "Assign"
      input: "deep/weights_bias1"
      input: "save_1/RestoreV2_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_4/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias1/Adam"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_4/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_4"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_4/tensor_names"
      input: "save_1/RestoreV2_4/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_4"
      op: "Assign"
      input: "deep/weights_bias1/Adam"
      input: "save_1/RestoreV2_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_5/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_bias1/Adam_1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_5/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_5"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_5/tensor_names"
      input: "save_1/RestoreV2_5/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_5"
      op: "Assign"
      input: "deep/weights_bias1/Adam_1"
      input: "save_1/RestoreV2_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_6/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer0"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_6/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_6"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_6/tensor_names"
      input: "save_1/RestoreV2_6/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_6"
      op: "Assign"
      input: "deep/weights_layer0"
      input: "save_1/RestoreV2_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_7/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer0/Adam"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_7/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_7"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_7/tensor_names"
      input: "save_1/RestoreV2_7/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_7"
      op: "Assign"
      input: "deep/weights_layer0/Adam"
      input: "save_1/RestoreV2_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_8/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer0/Adam_1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_8/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_8"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_8/tensor_names"
      input: "save_1/RestoreV2_8/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_8"
      op: "Assign"
      input: "deep/weights_layer0/Adam_1"
      input: "save_1/RestoreV2_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 90
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_9/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_9/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_9"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_9/tensor_names"
      input: "save_1/RestoreV2_9/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_9"
      op: "Assign"
      input: "deep/weights_layer1"
      input: "save_1/RestoreV2_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_10/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer1/Adam"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_10/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_10"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_10/tensor_names"
      input: "save_1/RestoreV2_10/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_10"
      op: "Assign"
      input: "deep/weights_layer1/Adam"
      input: "save_1/RestoreV2_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_11/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deep/weights_layer1/Adam_1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_11/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_11"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_11/tensor_names"
      input: "save_1/RestoreV2_11/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_11"
      op: "Assign"
      input: "deep/weights_layer1/Adam_1"
      input: "save_1/RestoreV2_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_layer1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_12/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_bias0"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_12/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_12"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_12/tensor_names"
      input: "save_1/RestoreV2_12/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_12"
      op: "Assign"
      input: "deepfm/concat_bias0"
      input: "save_1/RestoreV2_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_13/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_bias0/Adam"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_13/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_13"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_13/tensor_names"
      input: "save_1/RestoreV2_13/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_13"
      op: "Assign"
      input: "deepfm/concat_bias0/Adam"
      input: "save_1/RestoreV2_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_14/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_bias0/Adam_1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_14/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_14"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_14/tensor_names"
      input: "save_1/RestoreV2_14/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_14"
      op: "Assign"
      input: "deepfm/concat_bias0/Adam_1"
      input: "save_1/RestoreV2_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_15/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_projection0"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_15/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_15"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_15/tensor_names"
      input: "save_1/RestoreV2_15/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_15"
      op: "Assign"
      input: "deepfm/concat_projection0"
      input: "save_1/RestoreV2_15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_16/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_projection0/Adam"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_16/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_16"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_16/tensor_names"
      input: "save_1/RestoreV2_16/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_16"
      op: "Assign"
      input: "deepfm/concat_projection0/Adam"
      input: "save_1/RestoreV2_16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_17/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "deepfm/concat_projection0/Adam_1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_17/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_17"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_17/tensor_names"
      input: "save_1/RestoreV2_17/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_17"
      op: "Assign"
      input: "deepfm/concat_projection0/Adam_1"
      input: "save_1/RestoreV2_17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deepfm/concat_projection0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 83
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_18/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_bias_0"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_18/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_18"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_18/tensor_names"
      input: "save_1/RestoreV2_18/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_18"
      op: "Assign"
      input: "fm/feature_bias_0"
      input: "save_1/RestoreV2_18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_19/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_bias_0/Adam"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_19/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_19"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_19/tensor_names"
      input: "save_1/RestoreV2_19/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_19"
      op: "Assign"
      input: "fm/feature_bias_0/Adam"
      input: "save_1/RestoreV2_19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_20/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_bias_0/Adam_1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_20/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_20"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_20/tensor_names"
      input: "save_1/RestoreV2_20/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_20"
      op: "Assign"
      input: "fm/feature_bias_0/Adam_1"
      input: "save_1/RestoreV2_20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_bias_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_21/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_embeddings"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_21/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_21"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_21/tensor_names"
      input: "save_1/RestoreV2_21/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_21"
      op: "Assign"
      input: "fm/feature_embeddings"
      input: "save_1/RestoreV2_21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_22/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_embeddings/Adam"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_22/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_22"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_22/tensor_names"
      input: "save_1/RestoreV2_22/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_22"
      op: "Assign"
      input: "fm/feature_embeddings/Adam"
      input: "save_1/RestoreV2_22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_23/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "fm/feature_embeddings/Adam_1"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_23/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_23"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_23/tensor_names"
      input: "save_1/RestoreV2_23/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_23"
      op: "Assign"
      input: "fm/feature_embeddings/Adam_1"
      input: "save_1/RestoreV2_23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fm/feature_embeddings"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 9
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_24/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "train/beta1_power"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_24/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_24"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_24/tensor_names"
      input: "save_1/RestoreV2_24/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_24"
      op: "Assign"
      input: "train/beta1_power"
      input: "save_1/RestoreV2_24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/RestoreV2_25/tensor_names"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "train/beta2_power"
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_25/shape_and_slices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save_1/RestoreV2_25"
      op: "RestoreV2"
      input: "save_1/Const"
      input: "save_1/RestoreV2_25/tensor_names"
      input: "save_1/RestoreV2_25/shape_and_slices"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save_1/Assign_25"
      op: "Assign"
      input: "train/beta2_power"
      input: "save_1/RestoreV2_25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@deep/weights_bias0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save_1/restore_shard"
      op: "NoOp"
      input: "^save_1/Assign"
      input: "^save_1/Assign_1"
      input: "^save_1/Assign_2"
      input: "^save_1/Assign_3"
      input: "^save_1/Assign_4"
      input: "^save_1/Assign_5"
      input: "^save_1/Assign_6"
      input: "^save_1/Assign_7"
      input: "^save_1/Assign_8"
      input: "^save_1/Assign_9"
      input: "^save_1/Assign_10"
      input: "^save_1/Assign_11"
      input: "^save_1/Assign_12"
      input: "^save_1/Assign_13"
      input: "^save_1/Assign_14"
      input: "^save_1/Assign_15"
      input: "^save_1/Assign_16"
      input: "^save_1/Assign_17"
      input: "^save_1/Assign_18"
      input: "^save_1/Assign_19"
      input: "^save_1/Assign_20"
      input: "^save_1/Assign_21"
      input: "^save_1/Assign_22"
      input: "^save_1/Assign_23"
      input: "^save_1/Assign_24"
      input: "^save_1/Assign_25"
    }
    node {
      name: "save_1/restore_all"
      op: "NoOp"
      input: "^save_1/restore_shard"
    }
    versions {
      producer: 24
    }
  }
  saver_def {
    filename_tensor_name: "save_1/Const:0"
    save_tensor_name: "save_1/Identity:0"
    restore_op_name: "save_1/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "local_variables"
    value {
      bytes_list {
        value: "\n$DeepFm_Estimate/auc/true_positives:0\022)DeepFm_Estimate/auc/true_positives/Assign\032)DeepFm_Estimate/auc/true_positives/read:0"
        value: "\n%DeepFm_Estimate/auc/false_negatives:0\022*DeepFm_Estimate/auc/false_negatives/Assign\032*DeepFm_Estimate/auc/false_negatives/read:0"
        value: "\n$DeepFm_Estimate/auc/true_negatives:0\022)DeepFm_Estimate/auc/true_negatives/Assign\032)DeepFm_Estimate/auc/true_negatives/read:0"
        value: "\n%DeepFm_Estimate/auc/false_positives:0\022*DeepFm_Estimate/auc/false_positives/Assign\032*DeepFm_Estimate/auc/false_positives/read:0"
      }
    }
  }
  collection_def {
    key: "summaries"
    value {
      node_list {
        value: "deep_fm/score:0"
        value: "DeepFm_Estimate/loss:0"
        value: "DeepFm_Estimate/auc1:0"
        value: "DeepFm_Estimate/auc2:0"
      }
    }
  }
  collection_def {
    key: "train_op"
    value {
      node_list {
        value: "train/Adam"
      }
    }
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\n\027fm/feature_embeddings:0\022\034fm/feature_embeddings/Assign\032\034fm/feature_embeddings/read:0"
        value: "\n\023fm/feature_bias_0:0\022\030fm/feature_bias_0/Assign\032\030fm/feature_bias_0/read:0"
        value: "\n\025deep/weights_layer0:0\022\032deep/weights_layer0/Assign\032\032deep/weights_layer0/read:0"
        value: "\n\024deep/weights_bias0:0\022\031deep/weights_bias0/Assign\032\031deep/weights_bias0/read:0"
        value: "\n\025deep/weights_layer1:0\022\032deep/weights_layer1/Assign\032\032deep/weights_layer1/read:0"
        value: "\n\024deep/weights_bias1:0\022\031deep/weights_bias1/Assign\032\031deep/weights_bias1/read:0"
        value: "\n\033deepfm/concat_projection0:0\022 deepfm/concat_projection0/Assign\032 deepfm/concat_projection0/read:0"
        value: "\n\025deepfm/concat_bias0:0\022\032deepfm/concat_bias0/Assign\032\032deepfm/concat_bias0/read:0"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n\027fm/feature_embeddings:0\022\034fm/feature_embeddings/Assign\032\034fm/feature_embeddings/read:0"
        value: "\n\023fm/feature_bias_0:0\022\030fm/feature_bias_0/Assign\032\030fm/feature_bias_0/read:0"
        value: "\n\025deep/weights_layer0:0\022\032deep/weights_layer0/Assign\032\032deep/weights_layer0/read:0"
        value: "\n\024deep/weights_bias0:0\022\031deep/weights_bias0/Assign\032\031deep/weights_bias0/read:0"
        value: "\n\025deep/weights_layer1:0\022\032deep/weights_layer1/Assign\032\032deep/weights_layer1/read:0"
        value: "\n\024deep/weights_bias1:0\022\031deep/weights_bias1/Assign\032\031deep/weights_bias1/read:0"
        value: "\n\033deepfm/concat_projection0:0\022 deepfm/concat_projection0/Assign\032 deepfm/concat_projection0/read:0"
        value: "\n\025deepfm/concat_bias0:0\022\032deepfm/concat_bias0/Assign\032\032deepfm/concat_bias0/read:0"
        value: "\n\023train/beta1_power:0\022\030train/beta1_power/Assign\032\030train/beta1_power/read:0"
        value: "\n\023train/beta2_power:0\022\030train/beta2_power/Assign\032\030train/beta2_power/read:0"
        value: "\n\034fm/feature_embeddings/Adam:0\022!fm/feature_embeddings/Adam/Assign\032!fm/feature_embeddings/Adam/read:0"
        value: "\n\036fm/feature_embeddings/Adam_1:0\022#fm/feature_embeddings/Adam_1/Assign\032#fm/feature_embeddings/Adam_1/read:0"
        value: "\n\030fm/feature_bias_0/Adam:0\022\035fm/feature_bias_0/Adam/Assign\032\035fm/feature_bias_0/Adam/read:0"
        value: "\n\032fm/feature_bias_0/Adam_1:0\022\037fm/feature_bias_0/Adam_1/Assign\032\037fm/feature_bias_0/Adam_1/read:0"
        value: "\n\032deep/weights_layer0/Adam:0\022\037deep/weights_layer0/Adam/Assign\032\037deep/weights_layer0/Adam/read:0"
        value: "\n\034deep/weights_layer0/Adam_1:0\022!deep/weights_layer0/Adam_1/Assign\032!deep/weights_layer0/Adam_1/read:0"
        value: "\n\031deep/weights_bias0/Adam:0\022\036deep/weights_bias0/Adam/Assign\032\036deep/weights_bias0/Adam/read:0"
        value: "\n\033deep/weights_bias0/Adam_1:0\022 deep/weights_bias0/Adam_1/Assign\032 deep/weights_bias0/Adam_1/read:0"
        value: "\n\032deep/weights_layer1/Adam:0\022\037deep/weights_layer1/Adam/Assign\032\037deep/weights_layer1/Adam/read:0"
        value: "\n\034deep/weights_layer1/Adam_1:0\022!deep/weights_layer1/Adam_1/Assign\032!deep/weights_layer1/Adam_1/read:0"
        value: "\n\031deep/weights_bias1/Adam:0\022\036deep/weights_bias1/Adam/Assign\032\036deep/weights_bias1/Adam/read:0"
        value: "\n\033deep/weights_bias1/Adam_1:0\022 deep/weights_bias1/Adam_1/Assign\032 deep/weights_bias1/Adam_1/read:0"
        value: "\n deepfm/concat_projection0/Adam:0\022%deepfm/concat_projection0/Adam/Assign\032%deepfm/concat_projection0/Adam/read:0"
        value: "\n\"deepfm/concat_projection0/Adam_1:0\022\'deepfm/concat_projection0/Adam_1/Assign\032\'deepfm/concat_projection0/Adam_1/read:0"
        value: "\n\032deepfm/concat_bias0/Adam:0\022\037deepfm/concat_bias0/Adam/Assign\032\037deepfm/concat_bias0/Adam/read:0"
        value: "\n\034deepfm/concat_bias0/Adam_1:0\022!deepfm/concat_bias0/Adam_1/Assign\032!deepfm/concat_bias0/Adam_1/read:0"
      }
    }
  }
  signature_def {
    key: "serving_default"
    value {
      inputs {
        key: "inputs"
        value {
          name: "input:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 9
            }
          }
        }
      }
      outputs {
        key: "results"
        value {
          name: "score:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
}
